Search.setIndex({"docnames": ["contributing", "coverage_report", "encodermap", "encodermap.autoencoder", "encodermap.callbacks", "encodermap.data", "encodermap.encodermap_tf1", "encodermap.loading", "encodermap.loss_functions", "encodermap.misc", "encodermap.models", "encodermap.moldata", "encodermap.parameters", "encodermap.plot", "encodermap.trajinfo", "example_scripts", "getting_started/index", "getting_started/tf1_tf2_changes", "index", "modules", "reference/autoencoder_classes", "reference/featurization", "reference/index", "reference/layers", "reference/loss_functions", "reference/models", "reference/parameter_classes", "reference/trajectory_classes", "test_report", "user_guide_and_examples/01_basic", "user_guide_and_examples/01_working_with_trajectory_ensembles", "user_guide_and_examples/02_advanced", "user_guide_and_examples/02_training_with_different_topologies", "user_guide_and_examples/03_Your_Data", "user_guide_and_examples/code_examples", "user_guide_and_examples/cube", "user_guide_and_examples/cube_distance_analysis", "user_guide_and_examples/customization_notebooks", "user_guide_and_examples/dihedral_to_cartesian_diubi", "user_guide_and_examples/dihedral_to_cartesian_diubi_analysis", "user_guide_and_examples/index", "user_guide_and_examples/intermediate_notebooks", "user_guide_and_examples/learning_rate_schedulers", "user_guide_and_examples/md_notebooks", "user_guide_and_examples/starter_notebooks", "user_guide_and_examples/trp_cage", "user_guide_and_examples/writing_custom_images_to_tensorboard", "user_guide_and_examples/writing_custom_loss_functions", "user_guide_and_examples/writing_custom_scalars_to_tensorboard", "whatsnew/index"], "filenames": ["contributing.rst", "coverage_report.rst", "encodermap.rst", "encodermap.autoencoder.rst", "encodermap.callbacks.rst", "encodermap.data.rst", "encodermap.encodermap_tf1.rst", "encodermap.loading.rst", "encodermap.loss_functions.rst", "encodermap.misc.rst", "encodermap.models.rst", "encodermap.moldata.rst", "encodermap.parameters.rst", "encodermap.plot.rst", "encodermap.trajinfo.rst", "example_scripts.rst", "getting_started/index.rst", "getting_started/tf1_tf2_changes.rst", "index.rst", "modules.rst", "reference/autoencoder_classes.rst", "reference/featurization.rst", "reference/index.rst", "reference/layers.rst", "reference/loss_functions.rst", "reference/models.rst", "reference/parameter_classes.rst", "reference/trajectory_classes.rst", "test_report.rst", "user_guide_and_examples/01_basic.nblink", "user_guide_and_examples/01_working_with_trajectory_ensembles.nblink", "user_guide_and_examples/02_advanced.nblink", "user_guide_and_examples/02_training_with_different_topologies.nblink", "user_guide_and_examples/03_Your_Data.nblink", "user_guide_and_examples/code_examples.rst", "user_guide_and_examples/cube.rst", "user_guide_and_examples/cube_distance_analysis.rst", "user_guide_and_examples/customization_notebooks.rst", "user_guide_and_examples/dihedral_to_cartesian_diubi.rst", "user_guide_and_examples/dihedral_to_cartesian_diubi_analysis.rst", "user_guide_and_examples/index.rst", "user_guide_and_examples/intermediate_notebooks.rst", "user_guide_and_examples/learning_rate_schedulers.nblink", "user_guide_and_examples/md_notebooks.rst", "user_guide_and_examples/starter_notebooks.rst", "user_guide_and_examples/trp_cage.rst", "user_guide_and_examples/writing_custom_images_to_tensorboard.nblink", "user_guide_and_examples/writing_custom_loss_functions.nblink", "user_guide_and_examples/writing_custom_scalars_to_tensorboard.nblink", "whatsnew/index.rst"], "titles": ["Contributing", "&lt;no title&gt;", "encodermap package", "encodermap.autoencoder package", "encodermap.callbacks package", "encodermap.data package", "encodermap.encodermap_tf1 package", "encodermap.loading package", "encodermap.loss_functions package", "encodermap.misc package", "encodermap.models package", "encodermap.moldata package", "encodermap.parameters package", "encodermap.plot package", "encodermap.trajinfo package", "Exmaple Scripts", "Getting started", "Changes between Tensorflow 1 and Tensorflow 2 and EncoderMap", "Encodermap", "EncoderMap", "Neural Network model building and learning", "Featurization", "API reference", "Layers", "Loss functions", "Models", "Parameter Classes", "Trajectory classes", "Test Report", "Cube Example - Basic Usage", "Working with trajectory ensembles", "Asp7 Example - Advanced Usage", "Training with different topologies", "Your Data", "Code examples", "Cube example", "Cube example distance analysis", "Learn how to Customize EncoderMap", "Dihedral to cartesian diubi", "Dihedral to cartesian diubi analysis", "User Guide", "Intermediate notebooks", "Learning Rate Scheduler", "Learn how EncoderMap handles MD data and trajectory ensembles", "Starter notebooks", "Trp cage", "Logging Custom Images", "Writing Custom Loss Functions", "Logging Custom Scalars", "Changelog"], "terms": {"when": [0, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 20, 24, 25, 26, 27, 29, 30, 31, 46], "thi": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 42, 47, 48, 49], "repositori": [0, 1, 2, 19, 30], "pleas": [0, 8, 10, 14, 18, 24, 25, 27, 29, 30, 31, 32, 33, 42, 46, 47, 48], "first": [0, 2, 3, 6, 8, 9, 11, 12, 14, 15, 20, 22, 23, 24, 25, 26, 27, 29, 30, 31, 38, 46, 47, 48], "discuss": [0, 9], "chang": [0, 1, 2, 3, 7, 9, 12, 14, 16, 20, 26, 29, 30, 31, 37, 49], "you": [0, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 20, 21, 22, 24, 25, 27, 29, 30, 31, 32, 33, 37, 38, 41, 42, 43, 44, 46, 47, 48], "wish": 0, "make": [0, 2, 3, 4, 7, 8, 9, 10, 11, 13, 14, 16, 20, 24, 25, 29, 30, 31, 32, 46, 47, 48], "via": [0, 2, 8, 12, 13, 14, 16, 22, 23, 24, 25, 26, 27, 30, 49], "issu": [0, 25, 31], "email": 0, "ani": [0, 2, 3, 6, 9, 12, 13, 14, 16, 20, 25, 26, 27, 28, 29, 30, 31, 47], "other": [0, 2, 3, 6, 9, 10, 12, 13, 14, 16, 20, 22, 23, 25, 26, 27, 29, 30, 31, 32, 46, 47, 48], "method": [0, 2, 3, 4, 6, 9, 10, 13, 14, 20, 22, 23, 25, 27, 29, 30, 42, 46, 47, 48], "owner": 0, "befor": [0, 2, 3, 6, 20, 23, 25, 29, 31, 42, 46], "note": [0, 2, 13, 25, 30, 31, 42, 48], "we": [0, 6, 8, 9, 10, 15, 23, 24, 25, 29, 30, 31, 32, 38, 42, 46, 47, 48], "have": [0, 2, 3, 6, 8, 9, 10, 12, 14, 18, 20, 23, 24, 25, 26, 27, 29, 30, 31, 32, 46, 48], "conduct": [0, 2, 14, 30], "follow": [0, 2, 3, 6, 7, 8, 9, 11, 12, 14, 18, 20, 21, 23, 24, 25, 26, 27, 28, 29, 31, 32, 46, 47], "all": [0, 2, 3, 6, 7, 9, 10, 12, 13, 14, 15, 18, 20, 21, 22, 25, 26, 27, 29, 30, 31, 32, 38, 46, 47, 48, 49], "your": [0, 2, 3, 6, 9, 10, 11, 13, 14, 15, 16, 18, 20, 23, 25, 27, 29, 30, 31, 32, 38, 40, 42, 44, 46, 48], "interact": [0, 2, 13, 31, 32], "project": [0, 2, 6, 9, 10, 13, 14, 15, 16, 18, 19, 25, 29, 30, 31, 32, 35, 39, 45, 46], "ensur": [0, 2, 14, 27, 29, 48], "instal": [0, 2, 3, 18, 20, 29, 30, 31, 33, 41, 42, 46, 47, 48], "depend": [0, 2, 3, 12, 20, 26, 42], "ar": [0, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 38, 42, 46, 47, 48, 49], "remov": [0, 3, 6, 14, 27], "end": [0, 2, 4, 6, 9, 12, 21, 26, 30, 31, 46, 47], "layer": [0, 1, 2, 3, 6, 8, 9, 12, 19, 20, 24, 25, 26, 29], "do": [0, 2, 6, 9, 13, 14, 25, 27, 29, 30, 31, 32, 48], "updat": [0, 2, 3, 4, 6, 13, 20, 25, 49], "readm": [0, 13], "md": [0, 2, 3, 13, 14, 15, 20, 27, 30, 31, 32, 38, 39, 40, 48], "detail": [0, 2, 6, 25, 31], "interfac": [0, 9, 30], "includ": [0, 2, 6, 9, 11, 12, 13, 14, 23, 25, 26, 27, 37], "new": [0, 2, 3, 6, 9, 10, 11, 13, 14, 16, 21, 22, 25, 27, 28, 29, 31, 33, 37, 41, 42, 47], "environ": [0, 16, 48], "variabl": [0, 2, 3, 4, 6, 8, 11, 13, 14, 20, 22, 23, 24, 25, 27, 28, 31, 43, 46, 47, 48], "expos": 0, "port": [0, 2, 31, 42, 49], "file": [0, 1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 14, 16, 19, 20, 22, 24, 27, 28, 29, 31, 32, 33, 42, 43, 46, 47, 48], "locat": [0, 2, 14, 27, 31], "contain": [0, 2, 3, 4, 6, 7, 8, 9, 12, 13, 14, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 40, 46, 48], "paramet": [0, 1, 2, 3, 4, 7, 8, 9, 10, 11, 13, 14, 15, 16, 19, 20, 21, 23, 24, 25, 27, 28, 30, 31, 35, 37, 38, 39, 42, 44, 45, 46, 47], "increas": [0, 2, 3, 6, 8, 9, 12, 14, 20, 24, 26, 27, 31, 32, 42], "version": [0, 2, 7, 9, 11, 13, 16, 17, 21, 30, 31], "number": [0, 2, 3, 4, 6, 8, 9, 11, 12, 13, 14, 16, 20, 21, 24, 25, 26, 27, 29, 30, 31, 33, 48, 49], "exampl": [0, 2, 3, 6, 7, 8, 11, 12, 13, 14, 20, 21, 24, 25, 26, 27, 40, 42, 43, 44, 46, 47, 48, 49], "would": [0, 2, 6, 9, 11, 12, 14, 25, 26, 27, 29, 30, 31, 32, 46], "repres": [0, 7, 9, 14, 16, 21, 27, 29, 30], "The": [0, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 38, 40, 42, 46, 47, 48], "scheme": [0, 46], "i": [0, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 38, 39, 40, 42, 46, 47, 48], "semver": [0, 2], "mai": [0, 2, 6, 9, 12, 23, 25, 26], "merg": 0, "onc": [0, 4, 6, 13, 14, 27, 29, 30, 31], "sign": 0, "off": [0, 12, 13], "two": [0, 2, 3, 6, 8, 9, 11, 12, 13, 14, 16, 18, 20, 24, 26, 27, 30, 31, 42, 46, 48], "develop": [0, 2, 9, 14, 18, 46], "permiss": 0, "second": [0, 2, 6, 7, 8, 9, 12, 13, 15, 24, 26, 38, 46], "review": 0, "isort": 0, "googl": [0, 37, 41, 43, 44, 49], "style": 0, "docstr": [0, 7], "section": [0, 18, 22, 40], "header": [0, 3], "A": [0, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 42, 48], "py": [0, 1, 2, 3, 9, 14, 20, 29, 30, 31, 32, 33, 42, 46, 47, 48], "encodermap": [0, 1, 15, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 35, 36, 38, 39, 40, 41, 42, 44, 45], "should": [0, 2, 3, 4, 6, 8, 9, 10, 12, 13, 14, 16, 20, 23, 24, 25, 26, 27, 29, 30, 31, 33, 42, 46, 47, 48], "look": [0, 2, 6, 10, 18, 25, 29, 31, 42, 43, 46, 47], "like": [0, 2, 3, 6, 9, 13, 14, 15, 20, 23, 25, 27, 29, 30, 31, 32, 38, 42, 46], "utf": [0, 15, 38], "8": [0, 1, 2, 15, 28, 29, 30, 31, 32, 38, 42, 46, 47, 48], "subpackag": [0, 14, 19], "filenam": [0, 2, 6, 11, 14, 27, 30], "legal": 0, "disclaim": 0, "copi": [0, 2, 3, 13, 15, 16, 20, 30, 38], "IT": 0, "form": [0, 2, 6, 9, 10, 12, 14, 15, 16, 25, 26, 27, 29, 31, 38, 48], "AND": 0, "add": [0, 2, 3, 4, 6, 7, 9, 10, 11, 12, 13, 14, 20, 21, 25, 26, 27, 29, 30, 42, 46, 47, 48], "AS": 0, "modul": [0, 1, 19, 23, 24, 29, 30, 31, 32, 33, 42, 46, 47, 48], "wide": [0, 30], "can": [0, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 38, 42, 45, 46, 47, 48], "veri": [0, 14, 21, 27, 29, 31], "short": [0, 29], "thei": [0, 2, 3, 9, 10, 12, 13, 14, 20, 21, 22, 25, 26, 27, 30, 31, 47, 48], "gener": [0, 2, 3, 6, 7, 9, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 23, 25, 26, 27, 28, 30, 32, 35, 38, 39, 44, 45, 48], "don": [0, 2, 6, 9, 11, 16, 31, 42, 46, 48], "t": [0, 2, 3, 6, 8, 9, 11, 13, 14, 15, 16, 20, 24, 27, 30, 31, 32, 39, 42, 46, 47, 48], "much": [0, 2, 6, 10, 12, 14, 25, 26, 27, 30, 46, 48], "import": [0, 2, 3, 4, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 20, 22, 24, 25, 26, 27, 30, 31, 33, 35, 36, 38, 39, 41, 42, 45, 46, 47, 48], "from": [0, 2, 3, 4, 6, 7, 8, 9, 10, 12, 13, 14, 15, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 35, 37, 38, 42, 43, 45, 46, 48, 49], "__future__": 0, "annot": [0, 22], "numpi": [0, 2, 3, 6, 7, 8, 9, 11, 13, 14, 15, 16, 20, 21, 22, 23, 24, 25, 27, 29, 31, 32, 33, 38, 39, 42, 43, 45, 46, 47, 48], "np": [0, 2, 3, 7, 8, 9, 13, 14, 15, 16, 20, 21, 22, 24, 27, 30, 31, 32, 33, 38, 39, 42, 45, 46, 47, 48], "more": [0, 2, 3, 6, 8, 9, 10, 14, 16, 18, 20, 22, 24, 25, 27, 30, 31, 46, 48], "union": [0, 2, 3, 4, 8, 9, 10, 11, 12, 13, 14, 20, 24, 25, 26, 27], "type_check": 0, "_type": [0, 19], "anyparamet": [0, 2, 4], "expens": 0, "librari": [0, 2, 9, 31, 32, 44], "here": [0, 2, 3, 8, 9, 10, 13, 14, 20, 22, 23, 24, 25, 27, 29, 30, 31, 32, 34, 42, 46, 47, 48], "global": [0, 9], "global_vari": 0, "dict": [0, 2, 3, 4, 9, 12, 13, 14, 20, 23, 25, 26, 27, 30, 31], "mayb": [0, 13, 30], "some": [0, 2, 3, 4, 6, 9, 10, 11, 13, 14, 17, 20, 22, 25, 27, 28, 29, 30, 31, 32, 34, 37, 41, 42, 43, 44, 46, 47, 48], "data": [0, 2, 3, 4, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 23, 24, 25, 26, 27, 28, 30, 31, 35, 36, 37, 38, 39, 40, 42, 44, 45, 46, 47], "__all__": [0, 31], "list": [0, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 42, 46], "str": [0, 2, 3, 6, 7, 9, 11, 12, 13, 14, 20, 21, 26, 27, 30, 31], "public_funct": 0, "publicclass": 0, "util": [0, 1, 2, 9, 14, 19, 21, 29, 31, 32], "def": [0, 6, 30, 31, 42, 46, 47, 48], "_private_funct": 0, "arg": [0, 2, 6, 7, 8, 10, 12, 13, 14, 21, 23, 24, 25, 26, 27, 30, 31, 48], "float": [0, 2, 6, 8, 9, 11, 12, 13, 15, 24, 25, 26, 29, 35, 36, 38, 46], "none": [0, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 20, 21, 24, 25, 26, 27, 28, 30, 38, 42, 46, 47, 48], "privat": [0, 9], "function": [0, 2, 3, 6, 7, 8, 9, 10, 12, 13, 14, 19, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 37, 40, 42, 48], "argument": [0, 2, 3, 4, 7, 8, 9, 12, 13, 14, 20, 21, 23, 24, 25, 27, 30, 48], "pass": [0, 2, 3, 4, 8, 9, 11, 12, 13, 14, 20, 23, 24, 25, 26, 27, 28, 30, 31, 32, 48], "public": [0, 9, 22, 30], "For": [0, 2, 3, 6, 8, 9, 11, 12, 13, 14, 18, 20, 24, 25, 26, 27, 32, 37, 43, 44], "print": [0, 2, 3, 4, 6, 8, 9, 10, 12, 14, 15, 20, 21, 22, 24, 25, 26, 27, 29, 30, 31, 42, 45, 46, 47, 48], "return": [0, 2, 3, 6, 7, 8, 9, 10, 12, 13, 14, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 42, 46, 47, 48], "class": [0, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 20, 21, 22, 23, 24, 25, 28, 29, 31, 32, 42, 43, 46, 47, 48, 49], "explain": 0, "everyth": [0, 6, 7, 9, 13, 14, 27, 30, 46, 48], "__init__": [0, 2, 3, 4, 6, 7, 10, 11, 12, 13, 14, 19, 20, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 33, 42, 46, 47, 48], "self": [0, 2, 3, 4, 6, 7, 13, 14, 20, 21, 27, 30, 31, 42, 46, 48], "init": [0, 2, 3, 20, 30], "shorter": 0, "args_0": 0, "0": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 12, 13, 14, 15, 17, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 42, 45, 46, 47, 48], "tri": [0, 2, 3, 13, 20, 32, 47], "implement": [0, 2, 3, 4, 6, 9, 10, 12, 20, 22, 23, 26, 30, 37, 42, 47], "where": [0, 2, 6, 9, 11, 12, 13, 23, 25, 26, 29, 30, 31, 33, 46, 48], "possibl": [0, 2, 3, 7, 8, 11, 12, 14, 16, 20, 21, 24, 26, 27, 29, 30, 31], "reliabl": 0, "static": [0, 2, 3, 6, 9, 14, 20, 32], "checker": 0, "although": [0, 10, 22, 23, 25], "python": [0, 2, 3, 9, 14, 16, 20, 23, 25, 27, 29, 30, 31, 32, 33, 42, 46, 47, 48], "dynam": [0, 2, 9, 14, 22, 29, 31, 32, 42], "languag": [0, 7, 21], "declar": 0, "benefici": [0, 32], "robust": 0, "reason": [0, 23, 25], "built": [0, 2, 3, 10, 14, 20, 23, 25, 46, 48], "usi": 0, "config": [0, 2, 3, 20, 31, 32, 33], "yaml": [0, 2, 12, 14, 26], "help": [0, 1, 11, 18, 29, 30, 31, 37, 42, 48], "pip": [0, 2, 3, 16, 20, 30, 32], "set": [0, 2, 3, 4, 6, 8, 9, 11, 12, 13, 14, 15, 16, 20, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 35, 37, 38, 44, 45, 47], "up": [0, 2, 3, 6, 8, 12, 13, 14, 20, 24, 26, 27, 29, 30, 31, 32, 46, 47], "run": [0, 2, 3, 6, 8, 9, 12, 14, 15, 16, 20, 24, 25, 26, 27, 29, 30, 32, 35, 37, 38, 39, 42, 44, 45, 46, 47], "without": [0, 2, 3, 4, 6, 14, 15, 20, 25, 27, 30, 38], "These": [0, 2, 4, 7, 8, 9, 12, 14, 15, 21, 22, 24, 26, 27, 30, 38, 46], "also": [0, 2, 3, 4, 6, 7, 8, 10, 11, 13, 14, 16, 20, 21, 22, 23, 24, 25, 27, 29, 30, 31, 32, 42, 46, 47, 48], "try": [0, 2, 9, 12, 14, 26, 27, 30, 31, 33], "git": [0, 16, 32], "might": [0, 2, 3, 6, 12, 20, 26, 29, 30, 31], "prevent": [0, 31, 42], "current": [0, 2, 3, 4, 8, 9, 12, 13, 14, 20, 21, 24, 26, 27, 28, 30, 31, 46], "trail": 0, "whitespac": 0, "trim": 0, "check": [0, 2, 3, 4, 7, 8, 9, 10, 13, 14, 15, 20, 23, 24, 25, 27, 38], "larg": [0, 2, 6, 9, 11, 22, 25, 30, 33], "fixer": 0, "fix": [0, 2, 7, 8, 9, 12, 24, 26, 29, 31, 32], "unix": [0, 2, 14, 30], "newlin": 0, "n": [0, 1, 2, 6, 9, 10, 11, 12, 13, 21, 25, 26, 28, 29, 30, 46, 48], "broken": [0, 9], "kei": [0, 2, 9, 12, 14, 22, 26, 27, 30, 31, 46], "doe": [0, 2, 3, 4, 8, 10, 12, 14, 16, 20, 24, 25, 26, 27, 30, 31, 46, 48], "network": [0, 2, 3, 6, 10, 11, 12, 18, 25, 26, 29, 31, 32, 46, 48], "publish": [0, 8, 24, 30], "sort": [0, 1, 13, 30, 31], "statement": [0, 1], "configur": [0, 25], "pyproject": 0, "toml": 0, "formerli": 0, "pep8": 0, "clear": [0, 2, 3, 14, 20, 27], "ipynb": [0, 2, 3, 20], "cell": [0, 29, 30, 31, 32, 33, 42, 46, 47, 48], "coverage_report": 1, "44": [1, 28, 30, 31], "shortcut": 1, "page": [1, 2, 3, 8, 14, 20, 24, 30, 31], "": [1, 2, 3, 7, 8, 9, 10, 11, 13, 14, 15, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 35, 42, 45, 46, 47, 48], "m": [1, 6, 9, 13, 28], "x": [1, 2, 3, 6, 7, 8, 9, 13, 14, 21, 24, 25, 27, 46, 47, 48], "b": [1, 4, 6, 9, 13, 30], "p": [1, 2, 3, 4, 8, 9, 14, 15, 19, 20, 22, 24, 32, 39, 47, 48], "c": [1, 2, 3, 6, 9, 10, 11, 12, 13, 15, 21, 25, 26, 29, 31, 32, 35, 45], "nbsp": 1, "column": [1, 6, 9, 13, 14, 16, 27, 29, 31, 33], "prev": 1, "next": [1, 15, 29, 30, 31, 38, 42, 48], "show": [1, 6, 13, 15, 16, 29, 31, 35, 36, 38, 39, 45, 46, 47], "hide": [1, 6], "coverag": 1, "v7": 1, "1": [1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 20, 21, 24, 25, 26, 27, 28, 29, 31, 32, 33, 35, 36, 38, 39, 42, 43, 45, 46, 47, 48, 49], "creat": [1, 2, 3, 4, 6, 9, 12, 13, 14, 20, 22, 23, 25, 26, 27, 29, 31, 41, 42, 46, 47, 48], "2023": [1, 28, 29, 31, 32], "02": [1, 9, 12, 14, 28, 29, 31, 32, 42], "01": [1, 3, 9, 15, 28, 29, 31, 32, 38, 39, 42], "15": [1, 13, 14, 18, 27, 28, 29, 30, 31, 32, 46], "26": [1, 28, 30, 46], "0000": 1, "miss": [1, 13, 29, 30, 31, 32], "exclud": [1, 2], "branch": [1, 10, 25], "partial": 1, "_optional_import": [1, 19, 28], "52": [1, 30, 31], "14": [1, 2, 14, 27, 28, 29, 30, 31, 32, 46, 47], "2": [1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 35, 36, 38, 42, 43, 46, 47, 48], "73": [1, 28, 30], "_version": [1, 19, 29, 30, 31, 32, 33, 42, 46, 47, 48], "100": [1, 2, 3, 8, 13, 14, 15, 22, 24, 28, 29, 30, 31, 32, 33, 38, 42, 46, 47, 48], "autoencod": [1, 2, 4, 8, 9, 10, 12, 13, 15, 18, 19, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 42, 45, 46, 47, 48, 49], "452": 1, "248": [1, 28], "5": [1, 2, 3, 6, 9, 10, 12, 13, 14, 15, 21, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 42, 46, 47, 48], "225": 1, "41": [1, 15, 28, 30, 31, 45], "40": [1, 14, 28, 30, 31], "callback": [1, 2, 3, 8, 9, 19, 20, 24, 25, 29, 30, 31, 32, 33, 37, 42, 47, 48], "155": 1, "93": [1, 29, 30, 31, 32, 33, 42, 46, 47, 48], "33": [1, 30], "encodermap_tf1": [1, 2, 9, 17, 19], "angle_dihedral_cartesian_encodermap": [1, 2, 19], "171": 1, "150": 1, "56": [1, 30], "9": [1, 2, 3, 7, 14, 15, 20, 21, 27, 29, 30, 31, 32, 33, 38, 42, 46, 47, 48], "217": 1, "181": 1, "84": [1, 30], "12": [1, 2, 3, 12, 14, 15, 20, 26, 27, 28, 29, 30, 31, 32, 33, 38, 39, 42, 46, 47], "backmap": [1, 2, 3, 10, 19, 23, 25, 28], "162": 1, "34": [1, 2, 14, 28, 29, 30, 31, 32, 33, 42, 48], "50": [1, 2, 3, 9, 14, 15, 20, 27, 28, 29, 30, 31, 32, 36, 42, 46], "74": [1, 30], "4": [1, 2, 3, 7, 9, 12, 14, 16, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 33, 42, 46, 47, 48], "32": [1, 8, 24, 28, 30], "misc": [1, 2, 4, 14, 15, 19, 28, 29, 30, 31, 32, 33, 35, 36, 38, 42, 45, 46, 47, 48], "134": [1, 2, 14], "70": [1, 30], "30": [1, 14, 28, 30], "3": [1, 2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 42, 45, 46, 47, 48], "43": [1, 30], "moldata": [1, 2, 15, 19, 38, 39], "154": 1, "47": [1, 28, 30, 31], "6": [1, 2, 3, 6, 8, 9, 12, 14, 15, 20, 24, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 42, 46, 47, 48], "76": [1, 13, 30], "60": [1, 2, 6, 30, 47], "19": [1, 2, 28, 30, 31], "plot": [1, 2, 3, 9, 15, 19, 20, 29, 30, 31, 35, 36, 38, 39, 41, 44, 45, 46, 47], "230": 1, "194": 1, "load": [1, 2, 3, 4, 6, 9, 11, 12, 14, 15, 19, 20, 21, 22, 27, 28, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48], "featur": [1, 2, 9, 11, 12, 14, 19, 27, 28, 29, 31, 32, 33, 42, 43, 46, 47, 48, 49], "467": 1, "135": 1, "266": 1, "24": [1, 9, 28, 30, 46], "67": [1, 28, 30], "395": 1, "156": 1, "253": 1, "29": [1, 9, 28, 29, 30, 31, 32], "53": [1, 30, 31], "loss_funct": [1, 2, 19, 24, 28], "267": 1, "65": [1, 30], "69": [1, 30], "322": 1, "192": [1, 9], "158": [1, 2, 14, 28], "35": [1, 30, 31], "cluster": [1, 2, 7, 11, 13, 14, 19, 21, 27, 30, 31], "163": 1, "108": [1, 8, 21, 24, 28], "87": [1, 30], "distanc": [1, 2, 3, 4, 6, 7, 8, 10, 11, 12, 13, 14, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 40, 47, 48], "42": [1, 28, 30], "10": [1, 2, 3, 8, 9, 12, 14, 15, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 38, 42, 46, 47, 48], "98": [1, 28, 29, 30, 31, 32, 33, 42, 46, 47, 48], "error": [1, 2, 6, 12, 14, 19, 25, 26, 27, 28, 30], "function_def": [1, 2, 19], "11": [1, 2, 14, 18, 27, 28, 29, 30, 31, 32, 42, 46, 47, 48], "226": 1, "145": 1, "146": 1, "31": [1, 14, 27, 30], "saving_loading_model": [1, 2, 4, 19], "121": 1, "103": [1, 21], "68": [1, 30], "summari": [1, 2, 3, 6, 12, 14, 19, 20, 24, 26, 27, 28, 42, 46, 47], "89": [1, 29, 30, 31, 32, 33, 42, 46, 47, 48], "20": [1, 2, 3, 9, 14, 20, 27, 28, 30, 31, 42, 46], "transform": [1, 2, 3, 8, 13, 19, 20, 24, 30], "709": 1, "632": 1, "196": 1, "xarrai": [1, 2, 7, 11, 14, 19, 27, 28, 30], "38": [1, 28, 29, 30, 31, 32], "110": [1, 21, 31], "71": [1, 30], "xarray_save_wrong_hdf5": [1, 2, 19], "136": 1, "105": [1, 21], "79": [1, 30], "model": [1, 2, 3, 4, 6, 8, 9, 12, 14, 15, 18, 19, 23, 24, 26, 30, 31, 32, 37, 38, 42, 46, 47, 49], "72": [1, 30], "83": [1, 30], "457": 1, "206": 1, "46": [1, 9, 12, 14, 28, 30, 31, 32], "13": [1, 2, 14, 27, 29, 30, 31, 32, 42, 46, 47], "22": [1, 28, 30, 46], "209": 1, "129": [1, 28], "interactive_plot": [1, 2, 19], "210": 1, "173": 1, "82": [1, 30], "jinja_templ": [1, 2, 19], "286": 1, "149": 1, "94": [1, 29, 30, 31, 32, 33, 42, 46, 47, 48], "18": [1, 2, 9, 14, 27, 28, 30, 31, 46], "465": 1, "274": 1, "trajinfo": [1, 2, 19, 27, 30, 49], "hash_fil": [1, 2, 19], "25": [1, 9, 30, 46], "info_al": [1, 2, 19, 27], "383": 1, "7": [1, 2, 9, 14, 25, 27, 28, 29, 30, 31, 32, 42, 46, 47, 48], "220": 1, "info_singl": [1, 2, 19, 27, 30], "497": 1, "251": 1, "78": [1, 30], "load_traj": [1, 2, 19, 27, 30], "91": 1, "48": [1, 28, 30, 31], "55": [1, 30], "245": 1, "201": 1, "trajinfo_util": [1, 2, 19], "227": 1, "39": [1, 29, 30, 31, 32, 33, 42, 46, 47, 48], "193": [1, 29, 31, 32], "21": [1, 28, 30, 31], "total": [1, 9, 28], "8144": 1, "4368": 1, "137": 1, "3692": 1, "373": 1, "No": [1, 14, 29, 31, 32, 33, 42, 43, 46, 47, 48], "item": [1, 2, 3, 13, 20, 30], "found": [1, 8, 9, 14, 24, 27, 29, 30], "us": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 42, 46, 47, 48], "specifi": [1, 2, 3, 6, 9, 10, 12, 14, 20, 25, 26, 27, 29, 30], "filter": [1, 3, 13, 30], "angledihedralcartesianencodermap": [2, 3, 6, 15, 19, 28, 29, 30, 31, 33, 38, 39, 41, 42, 46, 47, 48], "_setup_callback": [2, 3, 19, 20], "encod": [2, 3, 6, 9, 12, 15, 16, 19, 20, 22, 25, 26, 28, 29, 31, 32, 33, 35, 39, 45, 46, 47], "from_checkpoint": [2, 3, 19, 20, 31], "get_train_data_from_traj": [2, 3, 19, 20], "loss": [2, 3, 4, 8, 9, 12, 19, 20, 25, 26, 32, 37, 40, 48], "save": [2, 3, 4, 6, 7, 9, 11, 12, 13, 14, 19, 20, 22, 26, 27, 28, 44], "train": [2, 3, 4, 6, 8, 9, 11, 12, 15, 16, 19, 20, 23, 24, 25, 26, 29, 31, 33, 35, 37, 38, 40, 41, 42, 45, 49], "train_data": [2, 3, 6, 19, 20], "dataset": [2, 3, 9, 10, 11, 12, 14, 19, 20, 22, 25, 26, 27, 30, 48], "read_onli": [2, 3, 6, 9, 15, 19, 20, 39], "optim": [2, 3, 6, 8, 9, 12, 19, 20, 24, 25, 26, 29, 31, 32, 42, 48], "metric": [2, 3, 6, 12, 19, 20, 25, 26], "decod": [2, 3, 6, 8, 9, 12, 19, 20, 22, 24, 25, 26, 28, 29, 32, 46], "add_images_to_tensorboard": [2, 3, 19, 20, 31, 46, 47], "plot_network": [2, 3, 19, 20], "close": [2, 3, 4, 6, 7, 9, 15, 19, 20, 31, 38, 46, 47], "dihedralencodermap": [2, 3, 28], "checkpointsav": [2, 3, 4, 20], "on_checkpoint_step": [2, 4, 19, 42], "earlystop": [2, 4], "on_train_batch_end": [2, 4, 19, 25, 46], "on_train_begin": [2, 4, 46], "on_train_end": [2, 4, 46], "increasecartesiancost": [2, 4, 8, 24], "calc_current_cartesian_cost_scal": [2, 4], "progressbar": [2, 3, 4, 20], "on_summary_step": [2, 4, 19, 42], "tensorboardwritebool": [2, 3, 4, 20], "_angle_cost": [2, 6], "_cartesian_cost": [2, 6], "_cartesian_distance_cost": [2, 6], "_dihedral_cost": [2, 6], "_distance_cost": [2, 6], "_prepare_data": [2, 6], "_setup_cost": [2, 6], "_setup_network": [2, 6], "angledihedralcartesianencodermapdummi": [2, 6, 15, 38], "_auto_cost": [2, 6], "_center_cost": [2, 6], "_encod": [2, 6, 31], "_gener": [2, 6], "_l2_reg_cost": [2, 6], "_random_batch": [2, 6], "_setup_data_iter": [2, 6], "_step": [2, 6], "profil": [2, 6], "_expand_univers": [2, 6], "_set_dihedr": [2, 6], "chain_in_plan": [2, 6], "dihedral_backmap": [2, 6], "dihedral_to_cartesian_tf_one_wai": [2, 6], "dihedrals_to_cartesian_tf": [2, 6], "dihedrals_to_cartesian_tf_old": [2, 6], "guess_amide_h": [2, 6], "guess_amide_o": [2, 6], "guess_sp2_atom": [2, 6], "merge_cartesian": [2, 6], "straight_tetrahedral_chain": [2, 6], "add_layer_summari": [2, 6, 9], "create_dir": [2, 6, 15, 38], "distance_cost": [2, 3, 6, 20, 31], "pairwise_dist": [2, 3, 6, 9, 15, 20, 38], "pairwise_dist_period": [2, 6, 9], "periodic_dist": [2, 6, 9, 28, 48], "periodic_distance_np": [2, 6, 9], "potential_energi": [2, 6], "random_on_cube_edg": [2, 6, 15, 29, 35, 36], "read_from_log": [2, 6, 15, 38], "rotation_matrix": [2, 6, 9], "run_path": [2, 6, 9, 15, 29, 31, 32, 33, 35, 38, 42, 45, 46, 47, 48], "search_and_replac": [2, 6], "sigmoid": [2, 3, 6, 8, 9, 12, 13, 15, 20, 24, 26, 29, 32, 38], "variable_summari": [2, 6], "angl": [2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 15, 20, 21, 23, 24, 25, 26, 28, 30, 31, 32, 38, 46, 48], "_conclud": [2, 6], "_prepar": [2, 6], "_single_fram": [2, 6], "sort_kei": [2, 6, 19], "write": [2, 3, 6, 7, 9, 11, 12, 13, 19, 20, 21, 22, 24, 26, 31, 37, 40, 43], "posit": [2, 3, 6, 7, 9, 14, 21, 23, 25, 27, 30], "adcparamet": [2, 3, 4, 6, 8, 10, 12, 15, 19, 20, 24, 25, 28, 32, 38, 39], "parametersframework": [2, 6, 12, 26], "_setattr": [2, 6, 13], "manualpath": [2, 6], "_add_point_interp": [2, 6], "_free_draw": [2, 6], "_free_draw_callback": [2, 6], "_grab_background": [2, 6], "_interpol": [2, 6], "_on_click": [2, 6], "_on_kei": [2, 6], "_reset_lin": [2, 6], "_update_interp": [2, 6], "_update_lin": [2, 6], "use_point": [2, 6], "pathgeneratecartesian": [2, 6, 15, 39], "pathgeneratedihedr": [2, 6, 15, 45], "pathselect": [2, 6, 15, 39], "distance_histogram": [2, 6, 13, 15, 29, 31, 33, 36, 38], "dask_featur": [2, 19], "delai": [2, 9, 19], "allbonddist": [2, 7, 21], "top": [2, 3, 7, 9, 11, 13, 14, 20, 21, 27, 30, 31], "index": [2, 6, 7, 8, 9, 12, 14, 21, 22, 24, 26, 27, 31, 43, 48], "prefix_label": [2, 7, 21], "__serialize_field": [2, 7, 21, 30], "__serialize_vers": [2, 7, 21, 30], "describ": [2, 6, 7, 9, 14, 21, 30, 31, 47], "generic_describ": [2, 7, 21], "name": [2, 3, 6, 7, 8, 9, 12, 13, 14, 15, 20, 21, 24, 25, 26, 27, 29, 30, 31, 32, 33, 38, 39, 42, 46, 47, 48], "allcartesian": [2, 7, 9, 14, 21], "centralangl": [2, 7, 21], "centralbonddist": [2, 7, 21, 30], "centralcartesian": [2, 7, 21, 30], "centraldihedr": [2, 7, 14, 21, 27], "dask_transform": [2, 7, 21], "sidechainangl": [2, 7, 21], "sidechainbonddist": [2, 7, 21], "sidechaincartesian": [2, 7, 21], "sidechaindihedr": [2, 7, 21], "option": [2, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 20, 21, 23, 24, 25, 26, 27, 30, 32], "_validate_uri": [2, 7, 9, 14, 27], "pipelin": [2, 11, 19, 22, 30], "put_nan_back_in": [2, 7], "_do_noth": [2, 8, 24, 48], "_summary_cost": [2, 8, 24, 48], "angle_loss": [2, 8, 24], "auto_loss": [2, 8, 24, 48], "cartesian_distance_loss": [2, 3, 8, 20, 24], "cartesian_loss": [2, 8, 24], "center_loss": [2, 8, 24], "dihedral_loss": [2, 8, 24], "distance_loss": [2, 8, 24], "loss_combin": [2, 8, 24, 28], "reconstruction_loss": [2, 8, 12, 24, 26, 28], "regularization_loss": [2, 8, 24], "_dihedr": [2, 9], "_displac": [2, 9], "_get_far_and_near_networkx": [2, 9], "backbone_hydrogen_oxygen_crossproduct": [2, 9], "_gen_dummy_traj_singl": [2, 9], "gen_dummy_traj": [2, 9], "get_cluster_fram": [2, 9], "baderror": [2, 3, 9, 14, 20, 27], "_can_be_featur": [2, 9, 14], "_datetime_windows_and_linux_compat": [2, 9, 12, 14], "_flatten_model": [2, 9], "create_n_cub": [2, 9, 29], "get_full_common_str_and_ref": [2, 9], "plot_model": [2, 9, 10, 25], "load_list_of_model": [2, 9], "load_model": [2, 9], "model_sort_kei": [2, 9], "save_model": [2, 4, 9], "_gen_hist": [2, 9], "_gen_nan_imag": [2, 9], "_gen_scatt": [2, 9], "image_summari": [2, 9], "requir": [2, 14, 25, 27, 30, 48], "refer": [2, 3, 6, 8, 12, 14, 15, 18, 20, 24, 25, 26, 27, 30, 38, 48], "_import_modul": [2, 9], "construct_xarray_from_numpi": [2, 9, 28], "unpack_data_and_featur": [2, 9], "_get_schedul": [2, 9], "_to_netcdf": [2, 9], "_validate_attr": [2, 9], "_validate_dataset_nam": [2, 9], "save_netcdf_alongside_mdtraj": [2, 9], "backmaplay": [2, 10, 23], "call": [2, 3, 6, 8, 9, 10, 13, 14, 20, 22, 23, 24, 25, 27, 29, 30, 31, 32, 33, 42, 46, 47, 48], "meanangl": [2, 10, 23], "periodicinput": [2, 10, 23], "periodicoutput": [2, 10, 23], "spars": [2, 3, 9, 10, 20, 23, 25, 32], "gen_functional_model": [2, 10, 25], "gen_sequential_model": [2, 10, 25], "newmoldata": [2, 11], "write_tfrecord": [2, 11], "cartesian_pwd_start": [2, 6, 12, 15, 19, 26, 38], "cartesian_pwd_stop": [2, 6, 12, 19, 26], "cartesian_pwd_step": [2, 6, 12, 15, 19, 26, 38], "use_backbone_angl": [2, 3, 6, 12, 19, 20, 26, 28, 32], "use_sidechain": [2, 3, 12, 19, 20, 26, 32], "angle_cost_scal": [2, 6, 12, 19, 26], "angle_cost_vari": [2, 6, 12, 19, 26], "angle_cost_refer": [2, 6, 12, 15, 19, 26, 38], "dihedral_cost_scal": [2, 6, 12, 15, 19, 26, 38], "dihedral_cost_vari": [2, 6, 12, 15, 19, 26, 38], "dihedral_cost_refer": [2, 6, 12, 15, 19, 26, 38], "side_dihedral_cost_scal": [2, 12, 19, 26], "side_dihedral_cost_vari": [2, 12, 19, 26], "side_dihedral_cost_refer": [2, 12, 19, 26], "cartesian_cost_scal": [2, 4, 6, 8, 12, 15, 19, 24, 26, 38], "cartesian_cost_scale_soft_start": [2, 3, 6, 8, 12, 15, 19, 20, 24, 26, 32, 38], "cartesian_cost_vari": [2, 6, 12, 15, 19, 26, 38], "cartesian_cost_refer": [2, 6, 12, 15, 19, 26, 38], "cartesian_dist_sig_paramet": [2, 6, 12, 15, 19, 26, 38], "cartesian_distance_cost_scal": [2, 6, 12, 15, 19, 26, 38], "activation_funct": [2, 6, 12, 19, 26, 32], "default": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 48], "defaults_descript": [2, 3, 4, 8, 10, 12, 19, 20, 24, 25, 26, 42], "n_neuron": [2, 6, 12, 19, 26, 32], "main_path": [2, 3, 6, 9, 12, 13, 15, 19, 20, 26, 28, 29, 31, 32, 33, 35, 38, 39, 42, 45, 46, 47, 48], "period": [2, 3, 6, 7, 8, 9, 10, 12, 13, 15, 19, 20, 21, 23, 24, 25, 26, 29, 30, 31, 32, 33, 35, 36, 42, 46, 47, 48], "learning_r": [2, 6, 12, 19, 25, 26, 42], "n_step": [2, 6, 12, 15, 19, 26, 29, 31, 32, 33, 35, 38, 42, 45, 46, 47, 48], "batch_siz": [2, 3, 6, 12, 15, 19, 20, 25, 26, 38], "summary_step": [2, 3, 6, 12, 15, 19, 20, 26, 31, 32, 38, 42], "checkpoint_step": [2, 3, 6, 12, 15, 19, 20, 26, 29, 31, 32, 38, 42], "dist_sig_paramet": [2, 3, 6, 12, 15, 19, 26, 29, 31, 32, 33, 35, 36], "distance_cost_scal": [2, 3, 6, 12, 15, 19, 20, 26, 32, 38], "auto_cost_scal": [2, 6, 12, 19, 26, 32, 48], "auto_cost_vari": [2, 6, 12, 19, 22, 26, 48], "center_cost_scal": [2, 6, 12, 15, 19, 22, 26, 38, 47], "l2_reg_const": [2, 3, 6, 12, 15, 19, 26, 28, 31, 38], "gpu_memory_fract": [2, 6, 12, 19, 26], "analysis_path": [2, 6, 12, 19, 26], "id": [2, 3, 6, 9, 12, 14, 15, 19, 20, 26, 27, 29, 30, 32, 35, 36, 38], "model_api": [2, 3, 12, 19, 20, 26, 32], "batch": [2, 3, 4, 12, 19, 20, 25, 26, 42, 46, 48], "tensorboard": [2, 3, 4, 6, 8, 9, 12, 19, 20, 24, 26, 32, 44, 46, 47, 48], "seed": [2, 6, 8, 9, 12, 19, 24, 26, 29, 32], "interactiveplot": [2, 13, 19, 31, 32], "traj": [2, 3, 7, 9, 11, 13, 14, 19, 20, 27, 28, 30, 31, 32], "fig": [2, 6, 13, 15, 19, 29, 31, 32, 33, 35, 45, 46, 47], "ax": [2, 6, 9, 13, 15, 19, 29, 31, 32, 33, 35, 36, 38, 45, 46, 47], "menu_ax": [2, 13, 19], "status_menu_ax": [2, 13, 19], "pt": [2, 13, 19], "statusmenu": [2, 13, 19, 32], "menu": [2, 13, 19], "tool": [2, 6, 9, 13, 19, 30, 31, 32, 46], "mode": [2, 3, 6, 9, 11, 13, 16, 19, 20, 25], "accept": [2, 3, 13, 19, 20], "bezier": [2, 13, 19, 31, 32], "cluster_zoom": [2, 13, 19], "ellips": [2, 13, 19, 31], "lasso": [2, 13, 15, 19, 31, 39], "on_click": [2, 13, 19], "on_click_menu": [2, 13, 19], "on_click_tool": [2, 13, 19], "on_enter_ax": [2, 13, 19], "on_leave_ax": [2, 13, 19], "path": [2, 3, 6, 9, 11, 12, 13, 14, 15, 19, 20, 26, 27, 28, 31, 32, 33, 38, 39, 45], "polygon": [2, 13, 19, 31], "rectangl": [2, 13, 19, 31], "render_mov": [2, 13, 19], "reset": [2, 8, 13, 19, 24], "set_point": [2, 13, 19, 32], "_zoomingboxmanu": [2, 13], "bernstein": [2, 13], "bezierbuild": [2, 13], "_build_bezi": [2, 13], "_update_bernstein": [2, 13], "_update_bezi": [2, 13], "disconnect": [2, 13], "ind": [2, 13, 32], "dummytool": [2, 13], "add_item": [2, 13], "get_coord": [2, 13], "on_mov": [2, 13], "menuitem": [2, 13], "check_select": [2, 13], "draw": [2, 6, 13], "set_ax": [2, 13], "set_data": [2, 13], "set_figur": [2, 13], "set_hov": [2, 13], "set_hover_prop": [2, 13], "set_transform": [2, 13], "modebutton": [2, 13], "_on_select_rot": [2, 13], "prop": [2, 13], "labelcolor": [2, 13], "labelcolor_rgb": [2, 13], "bgcolor": [2, 13], "bgcolor_rgb": [2, 13], "fontsiz": [2, 13], "alpha": [2, 6, 9, 12, 13, 26, 30, 31, 32], "_string_summari": [2, 13, 14, 27], "selectfromcollect": [2, 13], "onselect": [2, 13], "set_idl": [2, 13], "_check_all_templates_defin": [2, 13], "_create_readm": [2, 13], "_get_system_info": [2, 13], "_match_tops_and_traj": [2, 13], "_unpack_cluster_info": [2, 13], "_unpack_path_info": [2, 13], "abc_to_rgb": [2, 13], "calculate_dssp": [2, 13], "correct_missing_uniqu": [2, 13], "digitize_dssp": [2, 13], "trajensembl": [2, 3, 9, 11, 13, 14, 20, 22, 28, 30, 32], "cv": [2, 3, 9, 11, 14, 20, 27, 28, 32, 43], "_cv": [2, 14, 27, 28, 30], "n_traj": [2, 14, 27], "n_frame": [2, 13, 14, 27, 30, 48], "basenam": [2, 14, 27, 30], "name_arr": [2, 14, 27, 32], "index_arr": [2, 14, 27], "cvs_in_fil": [2, 14, 27], "__add__": [2, 14, 27], "_pyemma_index": [2, 14, 27], "_return_trajs_by_index": [2, 14, 27], "frame": [2, 3, 6, 9, 11, 13, 14, 27, 30, 31, 48], "from_textfil": [2, 14, 27], "from_xarrai": [2, 14, 27], "get_single_fram": [2, 9, 14, 27], "iterfram": [2, 14, 27], "itertraj": [2, 14, 27], "load_cv": [2, 3, 14, 20, 27, 30, 32], "n_residu": [2, 13, 14, 27, 30], "save_cv": [2, 14, 27], "split_into_fram": [2, 14, 27], "subsampl": [2, 14, 27, 30], "top_fil": [2, 9, 14, 27, 30, 32], "traj_fil": [2, 9, 14, 27, 30, 32], "traj_join": [2, 14, 27], "traj_num": [2, 9, 14, 27, 28], "unload": [2, 14, 27, 30], "xyz": [2, 6, 9, 11, 14, 27, 30], "singletraj": [2, 9, 11, 14, 22], "backend": [2, 3, 4, 9, 14, 20, 27, 28, 30, 31, 32, 46], "common_str": [2, 9, 14, 27], "__enter__": [2, 14, 27], "__eq__": [2, 14, 27], "__exit__": [2, 14, 27], "__getattr__": [2, 14, 27], "__getitem__": [2, 14, 27], "__iter__": [2, 14, 27], "__reversed__": [2, 14, 27], "_add_along_traj": [2, 14, 27], "_gen_ensembl": [2, 14, 27], "_mdtraj_attr": [2, 14, 27], "_n_frames_base_h5_fil": [2, 14, 27], "_original_frame_indic": [2, 14, 27], "_traj": [2, 14, 27], "atom_slic": [2, 14, 27, 30], "extens": [2, 3, 6, 14, 20, 27, 31, 46, 47, 48], "from_pdb_id": [2, 14, 27, 30], "join": [2, 14, 15, 27, 30, 38, 39, 45], "n_atom": [2, 6, 14, 27, 30], "n_chain": [2, 14, 27], "save_cv_as_numpi": [2, 14, 27], "select": [2, 3, 6, 7, 9, 13, 14, 15, 21, 27, 30, 31, 38, 39, 48], "show_traj": [2, 14, 27, 30], "stack": [2, 7, 9, 10, 14, 19, 21, 25, 27], "superpos": [2, 9, 13, 14, 27], "chain": [2, 6, 12, 14, 15, 21, 26, 27, 30, 31, 38], "residu": [2, 3, 7, 9, 14, 21, 27, 30], "atom": [2, 3, 6, 7, 9, 10, 11, 12, 14, 15, 21, 25, 26, 27, 28, 30, 32, 38, 48], "bond": [2, 6, 7, 12, 14, 21, 26, 27], "_load_traj": [2, 14], "_load_traj_and_top": [2, 14], "current_path": [2, 14, 19], "url": [2, 13, 14, 19, 30], "maintain": [2, 14, 19], "files_dict": [2, 14, 19], "_get_connect": [2, 14, 19], "_split_proj_filetyp": [2, 14, 19], "catalogu": [2, 14, 19, 30], "fetch": [2, 13, 14, 19, 30], "get_siz": [2, 14, 19], "load_project": [2, 14, 19, 30], "lookup": [2, 14, 19], "print_catalogu": [2, 14, 19, 30], "search": [2, 6, 14, 19, 30], "trajinfo_deprec": [2, 19], "load_cvs_ensembletraj": [2, 14], "load_cvs_singletraj": [2, 14], "allow": [2, 3, 6, 9, 11, 12, 13, 14, 16, 20, 22, 26, 27, 29, 30, 31, 42], "postpon": 2, "except": [2, 3, 8, 9, 13, 14, 20, 23, 24, 25, 27, 30, 31], "basic": [2, 3, 24, 30, 40, 44], "codebas": [2, 30, 48], "leaner": 2, "so": [2, 9, 10, 13, 14, 23, 27, 29, 30, 31, 32, 42, 46], "user": [2, 13, 16, 18, 25, 46], "need": [2, 3, 4, 6, 8, 9, 10, 12, 13, 14, 20, 22, 23, 24, 25, 26, 27, 29, 30, 31, 42, 46, 47, 48], "arrai": [2, 3, 6, 7, 8, 9, 11, 13, 14, 15, 16, 20, 21, 23, 24, 25, 27, 29, 30, 38, 48], "nonexist": 2, "nonexistent_packag": 2, "valueerror": [2, 25, 31, 48], "e": [2, 4, 6, 7, 9, 12, 13, 14, 16, 21, 23, 25, 26, 31, 33, 46], "_": [2, 9, 14, 27, 32, 48], "numpy_random": 2, "random": [2, 3, 8, 9, 12, 13, 14, 22, 24, 26, 27, 29, 30, 31, 32, 46], "round": [2, 13], "16": [2, 3, 9, 14, 27, 28, 29, 30, 31, 32, 33, 42, 46, 47, 48], "sourc": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 20, 21, 23, 24, 25, 26, 27, 28, 29, 43], "type": [2, 3, 7, 8, 9, 10, 12, 13, 14, 20, 21, 24, 25, 26, 27, 30, 31], "semant": [2, 49], "guidelin": 2, "read": [2, 3, 11, 12, 14, 20, 26, 27, 29, 30, 31, 48], "about": [2, 6, 10, 14, 18, 22, 23, 27, 30, 31, 33, 42, 46, 48], "them": [2, 3, 4, 8, 12, 13, 14, 16, 20, 24, 27, 29, 30, 31, 32, 42, 46, 47, 48], "http": [2, 3, 7, 9, 13, 14, 15, 16, 20, 21, 25, 27, 29, 30, 31, 32, 33, 38, 42, 45, 46, 47, 48], "org": [2, 3, 7, 9, 13, 14, 20, 21, 25, 27, 30], "tldr": 2, "given": [2, 3, 6, 9, 10, 12, 13, 14, 16, 20, 25, 26, 27, 29], "major": [2, 9], "minor": 2, "patch": [2, 13, 31, 46], "increment": 2, "incompat": 2, "api": [2, 3, 9, 10, 12, 18, 20, 25, 26], "backward": [2, 9, 11, 25], "compat": [2, 9, 11, 12, 14, 23, 25], "manner": [2, 9, 10, 12, 14, 25, 30], "bug": [2, 8, 24], "addit": [2, 3, 6, 9, 14, 20, 23, 25, 27, 46], "label": [2, 7, 9, 11, 13, 14, 21, 27, 30, 31, 32, 48], "pre": 2, "releas": [2, 13], "build": [2, 3, 7, 9, 10, 12, 13, 14, 16, 21, 23, 25, 26, 27, 30, 37], "metadata": [2, 23, 25], "avail": [2, 3, 14, 15, 20, 27, 29, 30, 38, 48, 49], "format": [2, 3, 6, 9, 10, 11, 12, 14, 15, 20, 22, 25, 26, 27, 30, 31, 38, 39, 46, 48], "currenlti": [2, 30], "am": [2, 9], "document": [2, 9, 13, 14, 18, 25, 27, 29, 30, 31, 32, 33, 42, 46, 47, 48], "break": [2, 3, 14, 27, 30], "an": [2, 3, 4, 6, 7, 9, 11, 12, 13, 14, 20, 21, 22, 25, 26, 27, 29, 30, 31, 32, 42, 46, 47, 48], "nor": 2, "thu": [2, 3, 13, 14, 20, 25, 27], "stai": [2, 14, 27], "dimension": [2, 3, 6, 8, 9, 11, 12, 13, 14, 16, 18, 20, 24, 26, 27, 30, 31, 44, 46, 47, 48], "reduct": [2, 16, 18, 25, 31, 44], "molecular": [2, 3, 9, 14, 18, 20, 22, 30, 32, 44], "provid": [2, 3, 4, 8, 9, 10, 11, 13, 14, 15, 20, 22, 23, 24, 25, 27, 30, 31, 37, 38, 42, 48], "framework": [2, 25], "tensorflow": [2, 3, 4, 6, 8, 9, 11, 12, 15, 16, 20, 22, 24, 25, 26, 29, 31, 32, 35, 38, 42, 46, 47, 48, 49], "It": [2, 6, 8, 9, 12, 13, 14, 23, 24, 25, 26, 27, 30, 47], "start": [2, 3, 4, 6, 9, 11, 12, 15, 18, 20, 22, 26, 28, 29, 30, 31, 33, 38, 42, 46, 47, 48, 49], "neural": [2, 3, 6, 18, 29, 31, 32, 46], "high": [2, 3, 6, 8, 12, 16, 20, 24, 26, 31, 46, 49], "low": [2, 3, 6, 8, 12, 15, 16, 20, 24, 26, 29, 31, 39, 46, 47], "embed": 2, "wa": [2, 6, 9, 13, 14, 27, 30, 31, 47], "still": [2, 13, 16, 31, 42, 48], "own": [2, 3, 9, 14, 20, 27, 30, 31, 33, 46, 47], "In": [2, 3, 6, 7, 9, 10, 11, 14, 16, 20, 21, 22, 25, 27, 29, 30, 31, 32, 33, 42, 46, 47, 48], "iter": [2, 9, 11, 13, 14, 27, 29, 31], "ad": [2, 3, 14, 20, 21, 27, 30, 37, 49], "architectur": [2, 3, 6, 12, 26], "rebuild": [2, 3, 14, 20, 29, 31, 32], "cartesian": [2, 3, 4, 6, 7, 8, 10, 11, 12, 20, 21, 24, 25, 26, 28, 31, 32, 34, 40], "coordin": [2, 3, 6, 9, 10, 11, 13, 14, 22, 23, 25, 27, 28, 30, 31, 32, 47, 48], "continu": [2, 3, 12, 14, 15, 20, 29, 31, 38], "endeavour": 2, "old": [2, 11, 13, 30], "code": [2, 9, 13, 14, 16, 18, 29, 30, 31, 40, 48], "newer": [2, 11], "howev": [2, 3, 20, 29, 30, 31, 48], "ha": [2, 4, 7, 8, 9, 10, 13, 14, 16, 21, 23, 24, 25, 27, 30, 31, 48], "been": [2, 4, 9, 14, 27, 30, 48], "which": [2, 3, 4, 6, 7, 9, 10, 11, 12, 13, 14, 16, 20, 21, 22, 23, 25, 27, 29, 30, 31, 32, 46, 48], "aid": [2, 46], "comput": [2, 3, 9, 14, 18, 20, 25, 48], "chemist": 2, "structur": [2, 3, 6, 9, 14, 15, 20, 25, 27, 29, 30, 31, 45], "biologist": 2, "trajectori": [2, 3, 6, 7, 9, 11, 14, 20, 21, 22, 31, 40, 41, 48], "lazi": [2, 9, 22], "disk": [2, 3, 9, 10, 11, 12, 13, 14, 20, 25, 26, 27, 30, 46], "space": [2, 3, 6, 7, 8, 9, 14, 15, 16, 20, 21, 24, 27, 29, 30, 31, 38, 46, 47, 48], "parallel": [2, 11, 14, 27, 30, 48], "distribut": [2, 6, 14, 25, 27, 29, 46], "dask": [2, 9], "matplotlib": [2, 3, 6, 9, 13, 15, 20, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 45, 47], "creation": [2, 11, 22, 23, 25], "block": [2, 6, 12, 26], "easili": [2, 32, 47], "nural": 2, "comparison": [2, 6, 31], "protein": [2, 3, 6, 7, 9, 10, 11, 13, 14, 18, 20, 21, 25, 27, 30, 31, 32], "differ": [2, 3, 6, 7, 9, 12, 13, 14, 20, 21, 25, 26, 27, 29, 30, 31, 40, 41, 42, 48], "topologi": [2, 3, 7, 9, 11, 14, 20, 21, 27, 28, 30, 40, 41], "kwarg": [2, 6, 7, 10, 12, 13, 21, 23, 25, 26, 31], "int": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 20, 21, 24, 25, 26, 27, 30, 31, 32, 38, 48], "bool": [2, 3, 6, 7, 8, 9, 11, 12, 13, 14, 20, 21, 24, 25, 26, 27, 28, 31, 48], "tupl": [2, 3, 6, 7, 8, 9, 10, 12, 13, 14, 20, 21, 23, 24, 25, 26, 27, 48], "base": [2, 3, 4, 6, 7, 9, 10, 11, 12, 13, 14, 18, 20, 21, 23, 25, 26, 27, 29, 30, 31, 32, 42], "object": [2, 3, 6, 9, 11, 12, 13, 14, 15, 20, 26, 27, 28, 29, 30, 31, 32, 38, 46, 48], "angledihedralcartesianencod": [2, 6, 12, 26], "hold": [2, 6, 11, 12, 26, 30, 47], "plu": [2, 6, 12, 26], "attribut": [2, 3, 4, 7, 8, 9, 12, 13, 14, 20, 21, 24, 26, 27, 29, 31, 43], "pairwis": [2, 3, 6, 8, 9, 10, 11, 12, 13, 14, 15, 20, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 38, 48], "calcul": [2, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 21, 24, 25, 26, 27, 28, 30, 33, 38, 46, 48], "last": [2, 6, 9, 11, 12, 21, 26, 29, 30, 31, 32, 33, 42, 46, 47, 48], "step": [2, 3, 4, 6, 8, 9, 11, 12, 15, 20, 24, 25, 26, 30, 31, 37, 38, 39, 42, 46, 49], "paiwis": [2, 6, 12, 26], "g": [2, 6, 7, 9, 12, 13, 14, 21, 25, 26, 31, 33], "c_a": [2, 6, 12, 26], "result": [2, 3, 6, 7, 9, 12, 14, 15, 16, 21, 25, 26, 27, 29, 30, 31, 41, 44, 45, 47], "defin": [2, 3, 4, 6, 7, 9, 10, 12, 13, 14, 15, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 33, 38, 42, 46, 47, 48], "whether": [2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 20, 21, 23, 24, 25, 26, 27, 42], "backbon": [2, 3, 6, 7, 9, 10, 11, 12, 14, 15, 21, 25, 26, 27, 28, 30, 31, 32, 38, 39], "learn": [2, 3, 6, 8, 12, 22, 24, 25, 26, 29, 30, 32, 40, 46, 47], "true": [2, 3, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 20, 21, 24, 25, 26, 27, 28, 30, 31, 32, 38, 39, 42, 46, 47, 48], "instead": [2, 3, 6, 9, 12, 13, 15, 20, 25, 26, 29, 38], "mean": [2, 6, 7, 9, 10, 12, 14, 15, 21, 23, 25, 26, 27, 30, 38, 47, 48], "valu": [2, 3, 4, 6, 8, 9, 11, 12, 13, 14, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 42, 46, 47, 48], "conform": [2, 3, 6, 11, 12, 14, 15, 18, 20, 26, 27, 30, 32, 38, 44, 48], "fals": [2, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 20, 21, 23, 24, 25, 26, 27, 30, 31, 32, 33, 48], "sidechain": [2, 6, 7, 9, 10, 11, 12, 14, 21, 24, 25, 26, 27, 30, 32], "dihedr": [2, 3, 6, 7, 8, 9, 10, 11, 12, 14, 20, 21, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 40, 42, 45, 46, 47, 48], "through": [2, 3, 12, 20, 26, 30, 32], "adjust": [2, 3, 4, 6, 8, 12, 13, 20, 22, 24, 26, 29, 46], "how": [2, 3, 6, 8, 9, 12, 13, 15, 16, 20, 24, 25, 26, 29, 31, 32, 38, 40, 42, 46, 47, 48], "cost": [2, 3, 4, 6, 8, 12, 15, 20, 24, 26, 29, 31, 32, 38, 47, 48], "weight": [2, 6, 8, 12, 24, 25, 26, 31, 32], "must": [2, 3, 6, 7, 8, 9, 12, 20, 23, 24, 25, 26, 31], "one": [2, 3, 6, 7, 8, 9, 11, 12, 14, 16, 18, 20, 24, 25, 26, 27, 29, 31, 33, 48], "mean_squar": [2, 6, 12, 22, 26, 48], "mean_ab": [2, 6, 12, 15, 26, 38, 48], "mean_norm": [2, 6, 12, 26, 48], "normal": [2, 3, 6, 8, 9, 10, 11, 12, 13, 14, 20, 24, 25, 26, 27, 30, 46, 48], "same": [2, 3, 6, 7, 9, 10, 12, 14, 16, 20, 23, 24, 26, 27, 29, 30, 31, 46, 48], "dummi": [2, 6, 9, 12, 15, 26, 38], "side": [2, 6, 9, 12, 15, 21, 26, 31, 38], "slowli": [2, 6, 12, 26], "turn": [2, 6, 12, 15, 26, 31, 38, 48], "If": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 42, 46, 47, 48], "begin": [2, 4, 6, 12, 26, 42, 47], "linearli": [2, 6, 12, 26], "rang": [2, 6, 12, 14, 15, 26, 27, 29, 30, 31, 38, 39, 48], "appli": [2, 3, 6, 9, 12, 14, 20, 23, 24, 25, 26, 27, 29, 31], "order": [2, 6, 10, 11, 12, 14, 15, 25, 26, 27, 29, 30, 31, 38], "sig_h": [2, 6, 12, 26, 29], "a_h": [2, 6, 12, 26, 29], "b_h": [2, 6, 12, 26, 29], "sig_l": [2, 6, 12, 26, 29], "a_l": [2, 6, 12, 26, 29], "b_l": [2, 6, 12, 26, 29], "em": [2, 3, 4, 8, 9, 10, 11, 12, 14, 15, 16, 17, 20, 22, 24, 25, 26, 27, 29, 30, 31, 32, 33, 35, 36, 38, 39, 42, 45, 46, 47, 48], "dir": [2, 12, 26, 30], "json": [2, 3, 6, 12, 15, 20, 22, 26, 31, 39], "altern": [2, 3, 12, 14, 20, 26, 27, 30], "constructor": [2, 12, 13, 14, 26, 27, 30], "new_param": [2, 12, 26], "from_fil": [2, 12, 26, 31], "instanti": [2, 3, 4, 7, 10, 11, 12, 13, 14, 20, 21, 22, 23, 25, 26, 27, 30, 31, 42, 46], "take": [2, 3, 6, 8, 9, 10, 11, 12, 13, 15, 20, 23, 24, 25, 26, 29, 33, 38, 43, 46, 47, 48], "input": [2, 3, 6, 8, 9, 10, 11, 12, 13, 14, 20, 23, 24, 25, 26, 27, 29, 31, 32, 37, 46], "overwrit": [2, 3, 4, 6, 9, 12, 13, 14, 20, 24, 25, 26, 27, 28, 30, 42, 46, 48], "directli": [2, 6, 12, 13, 14, 15, 25, 26, 30, 38], "store": [2, 6, 9, 12, 13, 14, 15, 26, 27, 29, 30, 38], "access": [2, 12, 13, 14, 26, 27, 30, 46, 47, 48], "instanc": [2, 3, 4, 9, 12, 14, 20, 21, 23, 25, 26, 27, 30, 31, 42, 46, 47, 48], "unknown": [2, 12, 13, 26], "drop": [2, 11, 12, 13, 26], "tanh": [2, 6, 12, 26, 32], "256": [2, 3, 12, 20, 26, 28], "0001": [2, 12, 26], "5000": [2, 12, 26, 31], "001": [2, 12, 15, 26, 31, 38, 42], "emap_cost": [2, 3, 12, 20, 26], "128": [2, 6, 12, 26], "100000": [2, 12, 26], "283185307179586": [2, 6, 9, 12, 26], "auto": [2, 3, 6, 12, 13, 15, 26, 39, 48], "classmethod": [2, 3, 6, 12, 14, 20, 26, 27], "string": [2, 3, 6, 7, 9, 11, 12, 14, 20, 21, 25, 26, 27, 30, 31], "tabul": [2, 12, 26], "kera": [2, 3, 4, 8, 9, 10, 12, 20, 22, 23, 24, 25, 26, 37, 42], "cartesian_loss_step": [2, 3, 20], "mdtraj": [2, 3, 7, 9, 11, 13, 14, 20, 21, 27, 31, 43, 48], "than": [2, 3, 8, 9, 10, 11, 14, 20, 24, 25, 27, 30, 31, 46, 47, 48], "tune": [2, 3, 20, 29], "overwritten": [2, 3, 6, 14, 20, 27], "_set_up_callback": [2, 3, 20], "xtc": [2, 3, 6, 11, 14, 15, 20, 27, 30, 31, 32, 38, 39], "test": [2, 3, 7, 8, 20, 21, 24, 25, 32, 49], "1am7_corrected_part1": [2, 3, 20], "1am7_corrected_part2": [2, 3, 20], "1am7_protein": [2, 3, 20, 30], "pdb": [2, 3, 6, 9, 14, 15, 20, 27, 30, 31, 32, 38, 39, 45], "no_load": [2, 3, 9, 14, 20, 27, 28, 30], "Not": [2, 3, 14, 20, 25, 27, 28, 48], "omit": [2, 3, 14, 20, 27], "automat": [2, 3, 4, 20, 23, 25, 31], "central_cartesian": [2, 3, 6, 11, 15, 20, 38], "shape": [2, 3, 6, 7, 8, 9, 10, 13, 14, 20, 21, 23, 24, 25, 27, 28, 30, 31, 46, 47, 48], "51": [2, 3, 20, 28, 30], "474": [2, 3, 20], "central_dihedr": [2, 3, 9, 14, 20, 27, 30], "471": [2, 3, 20], "360": [2, 3, 9, 20, 30], "standard": [2, 3, 14, 20, 27, 28], "offer": [2, 3, 20, 22, 30], "flexibl": [2, 3, 10, 20, 25], "e_map": [2, 3, 15, 16, 20, 29, 31, 33, 35, 38, 39, 42, 45, 46, 47, 48], "central_angl": [2, 3, 9, 20, 28, 30], "central_dist": [2, 3, 20], "sidechain_dihedr": [2, 3, 20], "batchdataset": [2, 3, 20], "element_spec": [2, 3, 20], "tensorspec": [2, 3, 20], "472": [2, 3, 9, 20, 28], "dtype": [2, 3, 20, 28], "tf": [2, 3, 8, 9, 10, 15, 17, 20, 22, 23, 24, 25, 28, 29, 31, 32, 38, 42, 46, 47], "float32": [2, 3, 20, 28, 42, 46, 47, 48], "473": [2, 3, 20], "316": [2, 3, 20], "output": [2, 3, 6, 8, 9, 10, 12, 14, 20, 24, 25, 26, 28, 29, 31, 37, 48], "out_angl": [2, 3, 20], "out_dihedr": [2, 3, 20], "back_cartesian": [2, 3, 20], "inp": [2, 3, 9, 14, 20, 25], "back": [2, 3, 6, 9, 10, 12, 14, 20, 25, 26, 27, 29, 30, 31], "map": [2, 3, 6, 8, 9, 10, 13, 15, 20, 24, 25, 29, 31, 38, 39, 48], "out_side_dihedr": [2, 3, 20], "out": [2, 3, 6, 9, 11, 13, 14, 20, 27, 30, 31, 47, 48], "tensorshap": [2, 3, 20, 25], "112101": [2, 3, 20], "get": [2, 3, 4, 8, 9, 10, 12, 13, 14, 15, 18, 20, 22, 23, 24, 25, 27, 30, 31, 33, 37, 38, 41, 44, 46, 47], "latent": [2, 3, 6, 8, 9, 20, 24, 31, 46, 47], "sidehcain_dihedr": [2, 3, 20], "sidechain_angl": [2, 3, 20], "dih": [2, 3, 20], "ang": [2, 3, 20], "side_dih": [2, 3, 20], "correct": [2, 3, 9, 10, 13, 14, 20, 21, 25, 27, 30, 47, 48], "acdparamet": [2, 3, 4, 20], "specif": [2, 3, 6, 9, 10, 12, 20, 21, 23, 25, 26, 31, 48], "either": [2, 3, 4, 8, 9, 11, 12, 14, 20, 22, 24, 25, 27, 30, 31, 42], "sequenti": [2, 3, 8, 9, 10, 12, 20, 24, 25, 26, 48], "anyth": [2, 3, 14, 20, 27], "re": [2, 3, 8, 9, 14, 20, 24, 27, 29, 30, 31, 32, 33, 42, 46, 47, 48], "wise": [2, 3, 20], "account": [2, 3, 20], "scale": [2, 3, 4, 8, 9, 13, 20, 24, 29], "epoch": [2, 3, 4, 20, 25, 46], "factor": [2, 3, 4, 11, 20], "parent": [2, 3, 4, 13, 14, 20, 27, 42, 46, 47, 48], "due": [2, 3, 8, 20, 24, 46, 48], "soft": [2, 3, 4, 15, 20, 39], "cartesiand_increase_callback": [2, 3, 20], "part": [2, 3, 6, 9, 10, 12, 13, 20, 25, 26, 29, 31, 32, 47, 48], "ndarrai": [2, 3, 7, 9, 13, 14, 20, 21, 22, 27, 30, 48], "10000": [2, 3, 15, 20, 35], "point": [2, 3, 6, 8, 9, 12, 13, 16, 20, 24, 26, 29, 30, 31, 32, 33, 46, 47, 48], "taken": [2, 3, 13, 20, 42, 48], "bottlenack": [2, 3, 20], "checkpoint_path": [2, 3, 6, 9, 15, 20, 38, 39], "overwrite_tensorboard_bool": [2, 3, 9, 20, 31], "reconstruct": [2, 3, 6, 20, 29, 30, 31], "checkpoint": [2, 3, 6, 9, 12, 15, 20, 26, 31, 38, 39], "liter": [2, 3, 14, 20, 27], "mdanalysi": [2, 3, 6, 11, 15, 20, 30, 38, 39], "univers": [2, 3, 6, 9, 15, 20, 38, 39], "overrid": [2, 3, 14, 20, 25, 27], "just": [2, 3, 6, 9, 14, 20, 24, 25, 29, 30, 42, 46, 48], "its": [2, 3, 4, 6, 7, 10, 11, 13, 14, 20, 23, 25, 27, 29, 30, 31, 48], "time": [2, 3, 9, 13, 14, 15, 20, 23, 25, 27, 28, 29, 30, 33, 38, 48], "resolv": [2, 3, 14, 20, 27], "rebuilt": [2, 3, 14, 20], "toward": [2, 3, 20, 31], "gro": [2, 3, 14, 20, 27], "h5": [2, 3, 11, 14, 20, 27, 30], "case": [2, 3, 7, 8, 9, 10, 11, 14, 18, 20, 21, 24, 25, 27, 29, 31, 46], "intern": [2, 3, 14, 20, 27], "what": [2, 3, 6, 10, 12, 13, 14, 20, 22, 23, 25, 26, 27, 30, 31, 37, 42, 46, 47], "after": [2, 3, 4, 14, 20, 25, 27, 30, 31, 46, 48], "inform": [2, 3, 6, 11, 12, 14, 15, 18, 20, 25, 26, 27, 29, 30, 31, 38, 47], "chosen": [2, 3, 20, 31], "attr": [2, 3, 9, 14, 20, 27, 30], "properti": [2, 3, 7, 13, 14, 20, 21, 27, 30], "compil": [2, 3, 8, 12, 20, 24, 25, 26, 29, 31, 32], "main": [2, 3, 6, 10, 12, 14, 20, 22, 25, 26, 28, 29, 30, 31, 32, 33, 42, 46, 47, 48], "compris": [2, 3, 20], "center_cost": [2, 3, 12, 20, 26, 47], "regularization_cost": [2, 3, 20], "auto_cost": [2, 3, 20, 31, 48], "sub": [2, 3, 10, 13, 20, 25, 30], "mse": [2, 3, 12, 20, 25, 26], "both": [2, 3, 8, 9, 13, 18, 20, 24, 42], "actual": [2, 3, 14, 20, 30, 46, 47], "rather": [2, 3, 14, 20, 27, 48], "datetim": [2, 3, 20], "anoth": [2, 3, 14, 20, 27, 30, 31, 48], "finish": [2, 3, 6, 20, 31, 46], "written": [2, 3, 4, 6, 9, 11, 20, 29, 46], "event": [2, 3, 6, 13, 20, 31], "state": [2, 3, 8, 9, 12, 14, 20, 23, 24, 25, 26, 27, 29, 30, 31], "prepar": [2, 3, 14, 20, 24], "insid": [2, 3, 13, 14, 20, 22, 25, 27, 29, 31], "shuffl": [2, 3, 20, 48], "child": [2, 3, 20], "combin": [2, 3, 8, 9, 12, 20, 24, 26, 42], "info": [2, 3, 8, 9, 10, 13, 14, 20, 23, 24, 25, 27, 30], "infinit": [2, 3, 20, 29], "repeat": [2, 3, 20], "tell": [2, 3, 14, 20, 29, 30, 31], "adam": [2, 3, 8, 20, 24, 25], "rate": [2, 3, 6, 12, 20, 26, 37, 40], "behavior": [2, 3, 9, 20, 23, 25], "dure": [2, 3, 6, 8, 20, 24, 25, 31, 46, 48], "alwai": [2, 3, 14, 20, 24, 25, 27, 30, 47], "present": [2, 3, 20, 28, 30], "progress": [2, 3, 4, 14, 20, 42], "bar": [2, 3, 4, 9, 14, 20, 46], "tqdm": [2, 3, 13, 20], "give": [2, 3, 7, 9, 11, 14, 20, 21, 27, 30, 31, 42, 46, 47], "everi": [2, 3, 6, 9, 11, 12, 13, 14, 15, 20, 25, 26, 27, 30, 38, 42, 46, 48], "directori": [2, 3, 6, 9, 14, 16, 20, 27, 29, 30, 31, 32, 42, 47, 48], "onli": [2, 3, 6, 7, 9, 10, 11, 14, 15, 16, 20, 21, 23, 25, 27, 37, 38, 43, 44], "boolean": [2, 3, 14, 20, 23, 25], "tensor": [2, 3, 6, 8, 9, 10, 20, 23, 24, 25, 28, 46], "decid": [2, 3, 9, 13, 14, 20], "append": [2, 3, 14, 20, 27, 30, 31, 42, 46, 47], "execut": [2, 3, 8, 14, 20, 23, 24, 25, 27, 30, 42, 47, 48], "imag": [2, 3, 7, 9, 10, 13, 20, 21, 25, 31, 37, 40, 47], "work": [2, 3, 7, 8, 9, 11, 13, 14, 16, 20, 21, 24, 25, 27, 28, 40, 42, 43], "graphviz": [2, 3, 20], "pydot": [2, 3, 20], "pydotplu": [2, 3, 20], "send": [2, 3, 20], "angledihedralcartesianautoencod": [2, 3, 10, 20, 25], "strutcur": [2, 3, 20], "perform": [2, 3, 12, 20, 25, 26, 31, 32, 48], "system": [2, 3, 9, 12, 14, 20, 27, 30, 31, 46], "hardwar": [2, 3, 20], "www": [2, 3, 9, 15, 20, 25, 38, 45], "guid": [2, 3, 9, 18, 20, 25], "data_perform": [2, 3, 20], "cpu": [2, 3, 20, 29, 31, 32], "mani": [2, 3, 7, 9, 11, 13, 14, 16, 20, 21, 27, 29, 30], "greatli": [2, 3, 20, 25, 31], "benefit": [2, 3, 20, 30], "instruct": [2, 3, 18, 20, 29, 31, 32], "avx2": [2, 3, 20, 29, 31, 32], "avx512": [2, 3, 20], "bring": [2, 3, 20], "speed": [2, 3, 9, 20], "linear": [2, 3, 10, 15, 20, 25, 38], "algebra": [2, 3, 20], "300": [2, 3, 20], "By": [2, 3, 9, 20, 30], "activ": [2, 3, 6, 8, 9, 12, 13, 15, 20, 24, 26, 31, 38, 47, 48], "dwarf": [2, 3, 20], "gpu": [2, 3, 6, 12, 20, 26, 29, 31, 32], "grapoh": [2, 3, 20], "card": [2, 3, 20], "To": [2, 3, 8, 13, 20, 22, 24, 25, 29, 30, 31, 32, 42, 47, 48], "num": [2, 3, 9, 13, 20], "len": [2, 3, 6, 9, 10, 14, 15, 20, 25, 27, 30, 31, 38], "list_physical_devic": [2, 3, 20], "best": [2, 3, 9, 20], "4d": [2, 3, 20], "hypercub": [2, 3, 9, 20], "16000": [2, 3, 20], "edg": [2, 3, 9, 20, 29, 46], "size": [2, 3, 14, 20, 25, 30, 46], "sure": [2, 3, 4, 8, 10, 11, 20, 24, 25, 29, 30, 31, 32, 47, 48], "predefin": [2, 3, 20], "ones": [2, 3, 20, 28, 46, 48], "rais": [2, 3, 8, 9, 10, 14, 20, 24, 25, 27, 30, 31, 48], "becaus": [2, 3, 4, 9, 11, 14, 20, 25, 27, 30, 31, 47, 48], "mutual": [2, 3, 20], "exclus": [2, 3, 20], "fit": [2, 3, 4, 8, 11, 12, 20, 24, 25, 26], "image_step": [2, 3, 20, 46, 47], "scatter_kw": [2, 3, 9, 13, 20, 31], "hist_kw": [2, 3, 9, 20], "bin": [2, 3, 6, 9, 13, 15, 20, 29, 31, 36, 39, 46], "additional_fn": [2, 3, 9, 20, 46], "adcautoencod": [2, 3, 20], "side_dihedr": [2, 3, 20, 25], "interv": [2, 3, 8, 10, 20, 24, 25, 30, 42, 48], "pyplot": [2, 3, 9, 15, 20, 29, 30, 31, 32, 33, 35, 36, 38, 39, 45, 46, 47], "scatter": [2, 3, 9, 15, 20, 29, 31, 32, 33, 35, 45, 46], "appropri": [2, 3, 9, 20, 29, 31, 32], "usual": [2, 3, 4, 6, 8, 9, 20, 24, 29, 42, 46, 48], "choos": [2, 3, 13, 14, 20, 27, 30], "colorbar": [2, 3, 15, 20, 39, 45, 46], "count": [2, 3, 9, 13, 20], "bottleneck": [2, 3, 6, 8, 12, 20, 24, 26, 29, 46], "log": [2, 3, 4, 8, 9, 14, 15, 20, 24, 31, 37, 39, 40], "see": [2, 3, 8, 14, 20, 22, 24, 25, 29, 30, 31, 46, 48], "notebook": [2, 3, 20, 29, 30, 31, 32, 33, 37, 40, 42, 43, 46, 47, 48, 49], "writing_custom_images_to_tensorboard": [2, 3, 20], "tutori": [2, 3, 20, 29, 30, 31, 32, 33, 42, 46, 47, 48], "notebooks_custom": [2, 3, 20], "free": [2, 3, 6, 8, 20, 24, 29, 30, 46], "resourc": [2, 3, 6, 20, 23, 25], "match": [2, 3, 9, 11, 14, 20, 27, 29], "neuron": [2, 3, 6, 12, 20, 26, 32], "oue": [2, 3, 20], "most": [2, 3, 9, 10, 20, 23, 25, 29, 30, 31, 32, 33, 42, 46, 47, 48], "often": [2, 3, 9, 10, 14, 20, 23, 27, 30, 31, 47, 48], "wildcard": [2, 3, 20], "reload": [2, 3, 9, 10, 20, 25, 31], "collid": [2, 3, 20], "respect": [2, 3, 6, 8, 9, 13, 14, 20, 24, 27, 30], "maith_path": [2, 3, 20], "while": [2, 3, 6, 12, 20, 26, 30, 31, 32, 48], "duplic": [2, 3, 9, 14, 20, 27, 43], "equival": [2, 3, 20], "produc": [2, 3, 9, 20, 31], "doesn": [2, 3, 20], "program": [2, 3, 20], "stackoverflow": [2, 3, 20], "com": [2, 3, 9, 13, 15, 16, 20, 29, 30, 31, 32, 33, 38, 42, 45, 46, 47, 48], "question": [2, 3, 20], "47605558": [2, 3, 20], "importerror": [2, 3, 20, 30], "fail": [2, 3, 20], "complet": [2, 3, 6, 9, 14, 20, 27, 30, 31, 32, 33], "sketchmap": [2, 3, 13, 20, 29, 32], "param": [2, 3, 20], "encodermapbasecallback": [2, 4, 19, 29, 30, 31, 32, 33, 42, 46, 47, 48], "multipl": [2, 9, 10, 13, 14, 25, 27, 30, 31, 32, 48], "enocdermap": [2, 4], "counter": [2, 14, 27], "tran_batch": 2, "correspond": [2, 6, 9, 14, 23, 25, 27, 30], "steps_count": [2, 19], "in_memori": [2, 7, 14, 27], "align_str": [2, 9, 13], "ca": [2, 6, 9, 10, 11, 13, 14, 21, 25, 27, 30], "hist": [2, 13, 15, 39], "ball_and_stick": [2, 9, 13, 32], "top_index": [2, 13], "open": [2, 6, 13, 14, 29, 30, 31, 32, 42], "window": [2, 6, 9, 12, 13, 14, 26], "handl": [2, 10, 13, 14, 22, 23, 25, 40, 48], "clickabl": [2, 13], "selector": [2, 13, 15, 39], "figur": [2, 6, 13, 15, 29, 31, 35, 46, 47], "onto": [2, 10, 13, 14, 25, 27, 48], "get_figur": [2, 13], "lowd": [2, 3, 9, 13, 14, 22, 27, 46, 47], "statu": [2, 13, 28, 32], "color": [2, 9, 13, 29, 31, 46], "collect": [2, 7, 9, 11, 13, 14, 18, 21, 22, 23, 25, 27, 43], "button": [2, 6, 13], "remain": [2, 9, 13, 14, 27], "currentlti": [2, 13], "etc": [2, 3, 9, 13, 14, 22, 23, 25, 27, 30], "sess": [2, 13, 15, 31, 32, 38], "ep": [2, 13, 14, 27], "On": [2, 13, 43], "happen": [2, 13, 25, 37, 46], "area": [2, 6, 13, 32], "backend_bas": [2, 13], "canva": [2, 13], "connect": [2, 3, 13, 29], "click": [2, 6, 13, 31], "left": [2, 6, 12, 13, 14, 25, 27], "conveni": [2, 13, 30], "choss": [2, 13], "enter": [2, 6, 13, 14, 27], "press": [2, 6, 9, 13], "atom_group": [2, 6], "cache_path": [2, 6, 11, 15, 38, 39], "stop": [2, 4, 6, 11, 30, 46], "design": [2, 6], "extract": [2, 6, 9, 11, 14, 27, 30], "central": [2, 6], "diheder": [2, 6], "phi": [2, 6, 10, 11, 25, 30, 31], "psi": [2, 6, 10, 11, 14, 25, 27, 30, 31], "omega": [2, 6, 7, 10, 11, 14, 21, 25, 27], "length": [2, 6, 8, 9, 11, 13, 14, 24, 27, 28, 30], "between": [2, 6, 8, 9, 10, 11, 12, 13, 16, 21, 24, 25, 26, 29, 30, 31, 32, 42, 47, 48], "neighbour": [2, 6], "sidedihedr": [2, 6, 11, 28], "aminoaciddict": [2, 6], "diheadr": [2, 6], "group": [2, 6, 9, 14, 27, 30, 48], "cach": [2, 6, 15, 38, 39], "analyz": [2, 6, 11], "only_centr": [2, 6], "align_refer": [2, 6, 15, 39], "align_select": [2, 6, 15, 39], "schould": [2, 6], "expect": [2, 6, 9, 25, 29, 46, 48], "allign": [2, 6], "accord": [2, 6, 9, 29], "atomgroup": [2, 3, 6, 11], "align": [2, 6, 9, 14, 27, 30, 32, 46, 47], "resid": [2, 3, 6, 14, 15, 27, 39], "syntax": [2, 6, 14], "keyword": [2, 9, 12, 13, 23, 25, 26, 30], "classvari": [2, 12, 26], "even": [2, 9, 11, 12, 14, 25, 26, 27, 30, 42, 46, 48], "thing": [2, 6, 12, 26, 48], "each": [2, 6, 7, 9, 12, 13, 14, 16, 21, 25, 26, 27, 29, 30, 31, 33, 40, 48], "stand": [2, 6, 12, 26], "dimens": [2, 6, 9, 11, 12, 13, 14, 16, 26, 27, 28, 29, 30], "relu": [2, 6, 8, 12, 24, 26], "element": [2, 6, 8, 9, 12, 24, 26, 30], "revers": [2, 6, 10, 12, 14, 23, 26, 27, 30, 31], "sequenc": [2, 6, 12, 14, 26, 27, 30], "wall": [2, 6, 12, 26], "2pi": [2, 6, 12, 26, 30, 31], "angular": [2, 6, 12, 26, 29, 30], "radian": [2, 6, 7, 9, 12, 21, 26, 31], "process": [2, 6, 12, 26, 31], "wrap": [2, 6, 12, 23, 25, 26, 48], "pi": [2, 3, 6, 9, 10, 12, 24, 25, 26, 30, 31, 32, 33, 42, 46, 47, 48], "inf": [2, 6, 9, 12, 13, 15, 24, 26, 29, 35, 36, 38, 46], "non": [2, 6, 7, 11, 12, 13, 21, 24, 26, 28, 31, 47], "writen": [2, 6, 12, 26], "center": [2, 3, 6, 12, 26, 48], "l2": [2, 6, 8, 12, 24, 26], "regularis": [2, 6, 12, 26], "fraction": [2, 6, 12, 26], "memori": [2, 6, 7, 9, 11, 12, 14, 26, 27, 30], "alloc": [2, 6, 12, 26], "analysi": [2, 3, 6, 12, 26, 34, 40], "sequnti": [2, 12, 26], "custom": [2, 7, 8, 9, 10, 12, 21, 22, 23, 24, 25, 26, 40, 42, 43], "squar": [2, 6, 9, 12, 26, 47, 48], "acdautoencod": [2, 12, 26], "contribut": [2, 12, 18, 25, 26, 31, 32, 47], "atuo_cost": [2, 12, 26], "reg_cost": [2, 12, 26], "sigmoid_loss": [2, 8, 12, 24, 26], "kind": [2, 9, 12, 26, 31, 46], "calls": [2, 12, 26], "regular": [2, 8, 12, 24, 26, 31], "procedur": [2, 12, 26, 29, 31], "gradient": [2, 12, 26], "tape": [2, 12, 26], "manual": [2, 6, 12, 23, 25, 26, 31], "oper": [2, 10, 12, 25, 26, 29, 31, 32], "paramt": [2, 12, 26, 31], "dcit": [2, 12, 26], "500": [2, 9, 12, 15, 26, 32, 39], "repo_sourc": [2, 14], "checksum_fil": [2, 14], "md5": [2, 14], "ignore_checksum": [2, 14, 30], "debug": [2, 6, 8, 9, 14, 24], "download": [2, 14, 15, 30, 31, 42, 45], "obtain": [2, 8, 14, 24, 27, 30, 31], "organ": [2, 9, 14, 40], "readabl": [2, 14], "With": [2, 14, 27, 30, 31], "queri": [2, 14], "pattern": [2, 6, 14, 30], "fly": [2, 14], "alreadi": [2, 6, 11, 12, 14, 27, 29, 30, 31, 48], "exist": [2, 6, 9, 14, 25, 27, 29, 30], "won": [2, 11, 14, 27, 30], "again": [2, 14, 27, 29, 30], "besid": [2, 9, 14, 27, 30, 48], "full": [2, 3, 8, 9, 14, 24, 25, 27, 30, 31], "place": [2, 9, 14, 27, 48], "repo": [2, 14, 30], "dictionari": [2, 6, 9, 13, 14, 25, 27], "summar": [2, 14], "project_nam": [2, 14], "filetyp": [2, 14], "protein_sim": [2, 14], "protein_sim_trajectori": [2, 14], "protein_sim_topologi": [2, 14], "protein_sim_log": [2, 14], "gromac": [2, 14], "traj_comp": [2, 14], "confout": [2, 14], "pyyaml": [2, 14], "pffp_sing": [2, 14], "pffp_single_trajectori": [2, 14], "pffp_singl": [2, 14, 30], "pffp_single_topologi": [2, 14], "pffp_single_input": [2, 14], "pffp": [2, 14], "mdp": [2, 14], "pffp_single_log": [2, 14], "112": [2, 14, 21], "initi": [2, 13, 14, 27, 31, 43], "hash": [2, 14, 30], "tamper": [2, 14], "inject": [2, 14], "malici": [2, 14], "want": [2, 6, 8, 9, 11, 13, 14, 15, 16, 24, 25, 27, 29, 30, 31, 38, 42, 46, 48], "ignor": [2, 9, 14, 29, 31, 32], "checksum": [2, 14], "undergo": [2, 14], "lot": [2, 14], "mdshare": [2, 14, 30], "proj_filetyp": [2, 14], "split": [2, 3, 10, 14, 23, 25, 27], "underli": [2, 14, 25, 30], "character": [2, 9, 14], "tar": [2, 14], "gz": [2, 14], "necessari": [2, 9, 14, 15, 30, 38], "remote_filenam": [2, 14], "working_directori": [2, 14, 30], "max_attempt": [2, 14], "makdedir": [2, 14], "progress_bar": [2, 14], "singular": [2, 14], "displai": [2, 14, 31, 46], "request": [2, 3, 14], "remot": [2, 14], "retriev": [2, 14], "inspect": [2, 14], "getfil": [2, 14], "currentfram": [2, 14], "simpli": [2, 4, 6, 11, 14, 27, 30, 31, 42, 46, 48], "local": [2, 14, 15, 29, 38, 44, 46, 47], "attempt": [2, 14], "report": [2, 8, 14, 24], "lead": [2, 14, 27], "traj_1": [2, 14], "traj_2": [2, 14], "files": [2, 14], "byte": [2, 14, 46], "correctli": [2, 7, 10, 14, 25], "tetrapeptides_singl": [2, 14], "common": [2, 9, 14, 27, 31, 48], "fppf": [2, 14], "piec": [2, 14, 48], "travers": [2, 14], "find": [2, 9, 13, 14, 18, 22, 29, 30, 31, 32, 33, 42, 46, 47, 48], "tarfil": [2, 14], "follw": [2, 14], "fileha": [2, 14], "nice": [2, 9, 10, 14, 25, 30, 31], "associ": [2, 14, 30, 42], "larger": [2, 11, 14, 25, 30, 31], "individu": [2, 14, 25, 27], "sim": [2, 14], "belong": [2, 14, 27, 29], "togeth": [2, 14, 27, 29], "slice": [2, 14, 27, 43], "basename_fn": [2, 14, 27], "callabl": [2, 9, 13, 14, 24, 25, 27], "forward": [2, 3, 25, 30], "face": [2, 3, 30], "singl": [2, 6, 9, 11, 14, 25, 27, 30, 46], "former": 2, "wai": [2, 6, 7, 9, 12, 13, 14, 22, 25, 27, 30, 42, 46], "latter": [2, 14, 27], "mutlipel": 2, "dcd": [2, 11, 14, 27], "That": [2, 8, 22, 24, 29, 42, 46, 48], "There": [2, 29, 30], "hdf5": [2, 7, 9, 11, 14, 27, 43], "amber": 2, "netcdf4": [2, 9], "leav": [2, 25], "share": [2, 14, 27, 29, 31, 32, 43], "let": [2, 9, 13, 14, 22, 27, 29, 30, 31, 46, 47, 48], "sai": [2, 9, 14, 27], "wild": 2, "mutant": [2, 14, 27], "somewhat": 2, "consist": [2, 9, 10, 14, 25, 27], "wt": [2, 14, 27], "traj1": [2, 14, 27], "traj_no_wat": 2, "traj0": 2, "occur": [2, 4], "ther": [2, 30], "filepath": [2, 9], "until": [2, 9, 14, 27, 30], "realli": [2, 9], "acceler": [2, 9, 30], "ensembl": [2, 9, 11, 14, 27, 32, 40], "fashion": [2, 14], "faster": [2, 9, 14, 27, 48], "relax": 2, "crystal": 2, "As": [2, 29, 31, 42, 46], "lazili": 2, "evalu": [2, 25], "delet": [2, 6, 14, 27, 30], "meant": [2, 14, 23, 25, 27, 30], "Of": 2, "cours": 2, "yourself": [2, 11, 14, 27], "folder": [2, 6, 9, 14, 27], "suppli": [2, 8, 9, 14, 24, 27, 48], "lambda": [2, 3, 14, 27, 30, 48], "rcsb": [2, 3, 9, 14, 27, 30], "view": [2, 3, 9, 14, 27, 28, 30, 31, 32], "1ghc": [2, 9, 14, 27], "1yug": [2, 14, 27, 30], "1yuf": [2, 3, 14, 27, 30], "inern": [2, 14, 27], "four": [3, 22], "simpl": [3, 8, 9, 10, 14, 23, 24, 25, 27, 29, 31, 42, 48], "nn": [3, 9, 42, 48], "dens": [3, 8, 10, 23, 24, 25, 46], "fulli": 3, "ae": 3, "reg": 3, "rewrit": 3, "atomist": 3, "similar": [3, 14, 25, 27, 30, 46, 48], "tbe": 3, "ndim": [3, 9, 10, 14, 25, 27], "xy": [3, 9, 13, 46], "torsion": [3, 9, 10, 11, 13, 14, 23, 25, 27], "pdb_link": 3, "text": [3, 6, 13, 30, 31], "splitlin": [3, 30], "growth": 3, "apr": 3, "96": [3, 29, 30, 31, 32, 33, 42, 46, 47, 48], "fake": [3, 13, 31], "stringio": [3, 46], "io": [3, 29, 30, 31, 32, 33, 42, 46, 47, 48], "mda": [3, 30], "u": [3, 29, 30, 31, 42, 46, 47, 48], "720": [3, 14, 27], "ag": [3, 16, 29, 30, 31, 32, 33, 42, 46, 47, 48], "psi_select": 3, "omega_select": 3, "phi_select": 3, "els": [3, 9, 31, 42, 48], "resnam": [3, 15, 38, 39], "val": [3, 14, 27], "segid": 3, "altloc": 3, "r": [3, 6, 9, 30, 32, 48], "deg2rad": 3, "147": 3, "__class__": 3, "__name__": 3, "resolut": 3, "coordinate_arrai": 3, "new_u": 3, "a1": 3, "array_equ": 3, "front": 3, "strew": 4, "luckili": 4, "patienc": 4, "min": [4, 46], "decreas": [4, 31, 42], "wait": 4, "hit": 4, "improv": [4, 6, 15, 18, 25, 31, 38], "halt": 4, "compar": [4, 6, 8, 24, 31, 48], "previou": [4, 23, 25, 29, 31], "messag": [4, 9, 14, 27, 30], "earli": 4, "start_step": 4, "angledihedralcarteisanencodermap": [4, 14, 27], "deafult": 4, "current_cartesian_cost_scal": 4, "mix": [4, 14, 23, 25, 27], "verbos": [4, 8, 24], "zero": [4, 9, 13, 23, 25, 30, 46], "Will": 4, "log_bool": 4, "stuff": [4, 9, 48], "current_training_step": 4, "variant": [6, 48], "special": [6, 23, 25], "sophist": 6, "accuraci": [6, 25], "especi": 6, "achiev": 6, "cartesian_cost": [6, 15, 38], "validation_data": 6, "yet": [6, 9, 15, 38], "support": [6, 9, 13, 14, 15, 16, 22, 23, 25, 27, 38], "restor": [6, 31], "quantiti": [6, 22], "2d": [6, 9, 16, 29, 46], "equal": [6, 14, 16, 27, 47], "n_input": 6, "row": [6, 9, 13, 16, 29, 31], "treat": [6, 10, 14, 23], "valid": [6, 7, 9, 14, 27, 30, 31], "origin": [6, 9, 13, 14, 15, 27, 30, 39, 48], "session": [6, 15, 38], "cartes": 6, "pdb_path": [6, 15, 45], "dihedral_trajectori": 6, "rough_n_point": 6, "peptid": [6, 31], "rotat": [6, 9, 13, 30, 31], "around": [6, 32, 48], "axi": [6, 9, 14, 27, 30, 47, 48], "overlap": 6, "quit": [6, 30, 46], "well": [6, 9, 25, 30, 31, 48], "traj_length": 6, "number_of_dihedr": 6, "step_siz": 6, "subset": [6, 9, 14, 27, 30], "max": [6, 15, 31, 38], "central_atom_indic": 6, "no_omega": 6, "atom_nam": 6, "bond_partn": 6, "angle_to_previ": 6, "bond_length": 6, "central_atom_nam": 6, "h_cartesian": 6, "o_cartesian": 6, "r_h": 6, "r_l": 6, "flat": [6, 9, 15, 31, 38], "n_point": [6, 9], "sigma": [6, 9, 13, 15, 29, 35, 36], "axis_unit_vec": 6, "smallest": [6, 9], "file_path": 6, "search_pattern": 6, "replac": [6, 14, 27, 47], "out_path": 6, "backup": 6, "renam": [6, 9], "bak": 6, "sig": [6, 9], "attach": [6, 8, 24], "sever": [6, 31], "visual": [6, 9, 18, 46, 47], "analysisbas": 6, "final": [6, 15, 38], "ve": 6, "gather": 6, "loop": [6, 8, 14, 24, 27], "worri": [6, 42], "normalis": 6, "deal": [6, 31, 48], "were": [6, 9, 25, 30, 31], "200": [6, 13, 29, 30], "graph": [6, 9, 25, 46], "interpol": [6, 31], "line": [6, 29, 30, 31, 32, 33, 42, 46, 47, 48], "switch": [6, 31], "d": [6, 29, 48], "mous": [6, 13], "ever": [6, 48], "plt": [6, 13, 15, 29, 30, 31, 32, 33, 35, 36, 38, 39, 45, 46, 47], "subplot": [6, 15, 29, 31, 32, 33, 35, 39, 45, 46], "vert": [6, 13], "resiz": 6, "background": [6, 13, 30], "y": [6, 9, 13, 14, 25, 27, 46, 47, 48], "effici": [6, 9, 16], "redraw": 6, "artist": [6, 13], "mymanualpath": 6, "mol_data": 6, "save_path": 6, "vmd_path": [6, 15, 39], "inherit": [6, 7, 30, 48], "vmd": [6, 13, 15, 28, 39], "fed": [6, 10, 25], "three": [6, 8, 9, 14, 24, 27, 29, 48], "npy": [6, 11, 14, 27, 30, 32], "keep": [6, 9, 10, 11, 13, 14, 25, 27, 30], "mind": [6, 9], "suffici": 6, "mess": [6, 15, 38], "amino": 6, "bank": 6, "separ": [6, 14, 27, 31, 32], "sigmoid_paramet": [6, 13], "low_d_max": [6, 13], "histogram": [6, 9, 13, 15, 29, 33, 39, 46], "deriv": [6, 7, 13, 29, 30], "number_of": 6, "_column": 6, "ore": 6, "upper": [6, 13, 14, 27, 29], "limit": [6, 7, 13, 21], "low_d": [6, 13], "pyemma": [7, 9, 11, 14, 21, 27, 43, 46], "add_custom_featur": [7, 21, 30], "put": [7, 9, 14, 21, 27, 30, 47, 48], "describe_last_feat": [7, 21], "nan": [7, 14, 21, 27, 28], "distancefeatur": [7, 21, 28], "prefix": [7, 9, 21], "distance_index": [7, 21], "serial": [7, 21], "definit": [7, 21], "unambigu": [7, 21], "entri": [7, 21], "n_angl": [7, 21], "indic": [7, 9, 13, 14, 21, 23, 25, 27, 29, 31, 48], "selectionfeatur": [7, 21], "anglefeatur": [7, 21], "centerangl": [7, 21, 28], "angle_index": [7, 21], "deg": [7, 21], "cossin": [7, 21], "centerdist": [7, 21], "centerpo": [7, 21], "manyu": [7, 21], "dihedralfeatur": [7, 21], "selstr": [7, 21, 30], "generic_label": [7, 21], "consid": [7, 14, 21, 27, 30], "atom_select": [7, 14, 21, 27], "html": [7, 9, 13, 14, 21, 27, 28], "degre": [7, 14, 21, 27, 48], "radion": [7, 21], "pair": [7, 9, 14, 21, 27], "sin": [7, 10, 21, 23, 47], "co": [7, 10, 21, 23, 47], "tica": [7, 21], "pca": [7, 21], "recogn": [7, 9, 21, 48], "boundari": [7, 21], "condit": [7, 21], "under": [7, 9, 14, 21, 27], "minimum": [7, 21], "convent": [7, 9, 21], "_phi_ind": [7, 21], "_psi_ind": [7, 21], "_omega_ind": [7, 21], "sidechangl": [7, 21], "retrun": [7, 21], "sidechdist": [7, 21], "sidechpo": [7, 21], "chi1": [7, 9, 10, 11, 21, 25], "chi5": [7, 10, 11, 21, 25], "_prefix_label_length": [7, 21], "chi2": [7, 10, 21, 25], "chi3": [7, 10, 21, 25], "chi4": [7, 10, 21, 25], "str_": [7, 9, 14], "uri": [7, 9, 14, 27], "feayur": 7, "easi": [7, 22, 30, 31], "typeerror": [7, 14, 27], "twice": [7, 8, 24], "metaclass": 7, "conflict": [7, 15, 30, 35], "strict": 7, "subclass": [7, 10, 13, 23, 25, 30, 37, 42], "autograph": [8, 24], "warn": [8, 9, 24, 29, 31, 32], "could": [8, 9, 11, 14, 24, 25, 27, 29, 30, 31, 32, 46], "0x00000264ab761040": [8, 24], "team": [8, 24], "linux": [8, 9, 12, 14, 24], "export": [8, 24], "autograph_verbos": [8, 24], "caus": [8, 15, 24, 30, 38], "gast": [8, 24], "silenc": [8, 24], "decor": [8, 24], "experiment": [8, 24, 25], "do_not_convert": [8, 24], "noth": [8, 11, 13, 24], "One": [8, 13, 14, 24, 27], "cond": [8, 24, 48], "scalar": [8, 13, 23, 24, 25, 30, 31, 37, 40, 42, 47], "predict": [8, 24, 25, 42], "precis": [8, 9, 23, 24, 25], "distinct": [8, 24], "sketch": [8, 24], "assum": [8, 24, 46, 48], "insensit": [8, 24], "scale_callback": [8, 24], "log_callback": [8, 24], "print_current_scal": [8, 24], "cost_funct": [8, 24], "soft_start": [8, 24], "made": [8, 24], "outer": [8, 24, 47], "1st": [8, 9, 24], "2nd": [8, 9, 24], "cost_scal": [8, 24], "integ": [8, 9, 14, 24, 25, 27, 30, 31], "unittest": [8, 18, 24, 28], "greater": [8, 24, 30, 48], "propos": [8, 24], "articl": [8, 14, 18, 24, 30], "ceriotti2011simplifi": [8, 24], "titl": [8, 14, 24, 30], "simplifi": [8, 13, 24, 30], "represent": [8, 24, 29, 30, 31], "complex": [8, 24, 30, 31, 48], "energi": [8, 24, 46], "landscap": [8, 24, 31, 46], "author": [8, 9, 14, 24, 30], "ceriotti": [8, 24], "michel": [8, 24], "tribello": [8, 24], "gareth": [8, 24], "parrinello": [8, 24], "journal": [8, 14, 18, 24, 30], "proceed": [8, 24], "nation": [8, 24], "academi": [8, 24], "scienc": [8, 14, 24], "volum": [8, 14, 24, 30], "13023": [8, 24], "13028": [8, 24], "year": [8, 14, 24, 30], "2011": [8, 24], "acad": [8, 24], "sum": [8, 14, 24, 25, 27, 46, 47], "set_se": [8, 24, 29, 31, 32], "doctest": [8, 24, 48], "kernel_regular": [8, 24], "bundl": [8, 24, 30], "reg_loss": [8, 24], "regress": [8, 24, 25, 48], "why": [8, 24, 30], "histori": [8, 24], "weird": [8, 24], "contrapt": [8, 24], "somehow": [8, 15, 24, 35, 38], "recosntruct": [8, 24], "y_true": [8, 24, 25, 47, 48], "y_pred": [8, 24, 25, 47, 48], "arbitrari": [8, 24], "math": [8, 9, 24, 31, 33, 42], "add_n": [8, 24], "upon": [9, 14, 27, 30], "nackmap": 9, "martini": 9, "quaternion": 9, "matric": 9, "multi": [9, 25], "adapt": [9, 14, 46], "expand_dim": [9, 46], "fame": 9, "displac": 9, "vector": [9, 30], "bondgraph": 9, "edge_indic": 9, "far": [9, 31], "networkx": 9, "near_sid": 9, "far_sid": 9, "backbone_posit": 9, "cluster_no": 9, "nglview": [9, 14, 27, 31, 43], "stack_atom": 9, "shorten": 9, "max_fram": 9, "col": [9, 14, 27], "cluster_membership": [9, 30], "subunit": 9, "ref_align_str": 9, "base_traj": 9, "concaten": 9, "trajecotri": [9, 14, 27], "wrong": [9, 14, 27, 31], "construct": [9, 11, 14, 27, 32], "panda": [9, 42, 46, 47, 48], "datafram": 9, "clsuter_no": 9, "mutlipl": [9, 31], "pictur": 9, "interpenetr": 9, "roughli": 9, "ten": 9, "certain": 9, "stationari": 9, "render": [9, 13, 31, 46], "along": [9, 13, 14, 15, 27, 30, 31, 32, 45, 46], "extend": [9, 21], "direct": 9, "desir": 9, "someth": [9, 30, 46, 48], "feed": [9, 29, 46], "otherwis": [9, 14, 25, 27], "dummy_traj": [9, 13], "render_vmd": 9, "cmap": [9, 15, 29, 35, 45, 46], "viridi": 9, "scipi": 9, "spatial": 9, "cdist": 9, "matrix": [9, 30, 48], "hollow": [9, 30], "diagon": [9, 30], "euclidean": [9, 10, 23], "otpion": 9, "lower": [9, 29], "triangl": 9, "mimic": 9, "pdist": 9, "box": 9, "maximum": 9, "convert_to_tensor": 9, "68318531": 9, "bad": 9, "miscellan": 9, "interpret": [9, 14], "feature_nam": [9, 14, 30], "portabl": [9, 12, 14], "now": [9, 12, 13, 14, 15, 16, 27, 29, 30, 31, 33, 38, 42, 46, 47, 48], "2022": [9, 12, 14], "07": [9, 12, 14], "13t16": [9, 12, 14], "04": [9, 12, 14, 28], "00": [9, 12, 14, 28], "13_16": [9, 12, 14], "model_nest": 9, "input_dim": 9, "return_model": 9, "flatten": [9, 11], "nest": [9, 14, 23, 25, 47], "points_along_edg": 9, "05": [9, 13, 15, 35, 36], "same_colored_edg": 9, "unit": [9, 10, 14, 25, 27], "hyper": [9, 10, 23], "cube": [9, 31, 34, 40, 44], "hypercube_graph": 9, "shift": [9, 46], "gaussian": [9, 29, 46], "nois": [9, 29], "introduc": [9, 30, 40, 43], "same_color_edg": 9, "later": [9, 10, 22, 25, 29, 30, 31, 42], "better": [9, 14, 30, 31, 46], "coord": [9, 30], "substr": [9, 14, 27], "examppl": 9, "o": [9, 13, 15, 21, 29, 30, 31, 33, 35, 38, 39, 42, 45], "makedir": [9, 42], "run1": [9, 29], "run2": 9, "listdir": 9, "desper": 9, "rework": 9, "custom_object": 9, "engin": 9, "autoencoder_class": 9, "autoencoderclass": 9, "model_nam": 9, "numer": 9, "ba": 9, "inp_class_nam": 9, "current_step": 9, "mainli": [9, 10, 23], "iumag": 9, "datapoint": [9, 13], "hist2d": 9, "whith": 9, "matpltlib": 9, "assertionerror": [9, 10, 25], "homogen": 9, "4x4": 9, "translat": [9, 31], "reflect": [9, 31], "shear": 9, "orthogon": 9, "superimpos": 9, "3d": [9, 15, 29, 35], "convert": [9, 25], "euler": 9, "arcbal": 9, "control": [9, 13, 30, 48], "decompos": 9, "christoph": [9, 14, 30], "gohlk": 9, "laboratori": 9, "fluoresc": 9, "california": 9, "irvin": 9, "2013": 9, "06": 9, "cpython": 9, "recommend": [9, 23, 25, 29], "speedup": 9, "stabl": 9, "revis": 9, "epydoc": 9, "invert": [9, 46], "linalg": 9, "inv": 9, "dot": [9, 13, 22], "m0": 9, "m1": 9, "v": [9, 30], "right": 9, "storag": 9, "contigu": 9, "compon": [9, 10, 23, 31], "transpos": 9, "graphic": 9, "opengl": 9, "glmultmatrixd": 9, "carri": [9, 30, 48], "float64": 9, "unless": [9, 25], "w": [9, 29, 31, 32], "ix": 9, "jy": 9, "kz": 9, "z": [9, 14, 27, 47], "tripl": 9, "charact": 9, "sxyz": 9, "ryxi": 9, "tatic": 9, "otat": 9, "success": 9, "inner": [9, 47], "rightmost": 9, "pariti": 9, "odd": 9, "repetit": 9, "ronald": 9, "goldman": 9, "gem": 9, "pp": 9, "475": 9, "morgan": 9, "kaufmann": 9, "1990": 9, "pseudo": [9, 30], "perspect": 9, "ii": [9, 18], "320": 9, "323": 9, "1991": [9, 28], "spencer": 9, "thoma": 9, "recov": 9, "324": 9, "331": 9, "convers": [9, 25], "ken": 9, "shoemak": 9, "iv": 9, "222": [9, 14, 27], "229": 9, "1994": 9, "175": 9, "attitud": 9, "jame": 9, "diebel": 9, "2006": 9, "solut": [9, 42], "relat": [9, 31], "kabsch": 9, "acta": 9, "cryst": 9, "1978": 9, "a34": 9, "827": 9, "828": 9, "absolut": 9, "orient": 9, "bkp": 9, "horn": 9, "j": [9, 23, 25], "opt": [9, 14, 27, 29, 30, 31, 32, 33, 42, 46, 47, 48], "soc": 9, "1987": 9, "629": 9, "642": 9, "sfu": 9, "jwa3": 9, "cmpt461": 9, "quatut": 9, "pdf": 9, "jmp": 9, "van": 9, "waveren": 9, "2005": 9, "intel": 9, "cd": [9, 15, 16, 21, 31, 38, 39, 42], "asmo": 9, "na": 9, "eng": 9, "293748": 9, "htm": 9, "uniform": 9, "iii": 9, "124": 9, "132": 9, "1992": 9, "cff": 9, "karnei": 9, "mol": 9, "mod": 9, "595": 9, "604": 9, "itzhack": 9, "contr": 9, "2000": 9, "23": [9, 30], "1085": 9, "1087": 9, "geometri": 9, "vision": 9, "hartlei": 9, "zissermann": 9, "cambridg": 9, "ed": 9, "2004": 9, "chapter": 9, "algorithm": [9, 16, 30], "130": 9, "steve": 9, "hollasch": 9, "net": 9, "cgindex": 9, "vec": 9, "beta": [9, 11], "gamma": 9, "123": 9, "234": 9, "345": 9, "xaxi": 9, "yaxi": 9, "zaxi": 9, "identity_matrix": 9, "rx": 9, "ry": 9, "rz": 9, "concatenate_matric": 9, "euler_from_matrix": 9, "rxyz": 9, "allclos": 9, "euler_matrix": 9, "is_same_transform": 9, "al": 9, "ga": 9, "qx": 9, "quaternion_about_axi": 9, "qy": 9, "qz": 9, "q": 9, "quaternion_multipli": 9, "rq": 9, "quaternion_matrix": 9, "scale_matrix": 9, "translation_matrix": 9, "shear_matrix": 9, "random_rotation_matrix": 9, "rand": 9, "tran": 9, "persp": 9, "decompose_matrix": 9, "tan": 9, "compose_matrix": 9, "v0": 9, "v1": [9, 14, 17], "random_vector": 9, "angle_between_vector": 9, "vector_product": 9, "v2": 9, "unit_vector": 9, "_py_": 9, "namespac": [9, 47, 48], "clash": [9, 47], "underscor": [9, 30], "check_n_fram": 9, "xr": [9, 14, 27, 30], "dataarrai": [9, 14, 27], "per": [9, 14, 25, 27], "membership": [9, 11, 30], "assign": [9, 11, 14, 27, 30], "seri": 9, "terminu": 9, "datarrat": 9, "custom_featur": 9, "OF": 9, "1ly": 9, "fall": [9, 11, 30], "h1": 9, "IN": 9, "expand": 9, "choosen": 9, "freeli": 9, "backbone_tors": [9, 10, 25, 30], "sens": [9, 30, 31], "least": 9, "potenti": [9, 48], "expaned": 9, "z_coordin": 9, "da": 9, "time_unit": 9, "feat": [9, 21, 30], "input_data": 9, "put_indices_into_attr": 9, "ramachandran": [9, 30], "3xphi": 9, "3xpsi": 9, "zip": 9, "active_featur": 9, "yield": [9, 14, 27, 29, 48], "real": [9, 14, 25], "collat": 9, "determin": 9, "schedul": [9, 37, 40], "being": 9, "get_schedul": 9, "path_or_fil": 9, "unlimited_dim": 9, "hashabl": 9, "multifil": 9, "invalid_netcdf": 9, "datastor": 9, "netcdf": [9, 11, 14, 27, 30], "to_netcdf": [9, 30], "doc": [9, 31], "save_mfdataset": 9, "fname": [9, 14, 27], "sparsiti": [10, 23], "print_nam": [10, 23], "multiples_shap": [10, 23], "inp_shap": [10, 23], "trainabl": [10, 23, 25], "who": [10, 23, 25], "know": [10, 23, 25, 42, 46], "toroid": [10, 23], "manifold": [10, 23, 48], "li": [10, 23], "periodicinputlay": [10, 23], "shold": [10, 23], "sparse_dense_matmul": [10, 23], "todo": [10, 25], "input_dataset": [10, 25], "reload_lay": [10, 25], "intermix": [10, 25], "backbone_angl": [10, 25], "commonli": [10, 25], "known": [10, 25, 30], "cartesian_coordin": [10, 25], "backbone_dist": [10, 25], "sidechain_tors": [10, 25], "pack": [10, 25], "unpack": [10, 14, 25, 48], "doubl": [10, 25], "enough": [10, 25, 30], "unit_circl": [10, 25], "sequentialmodel": [10, 25, 37], "functionalmodel": [10, 25], "circl": [10, 25], "gradian": [10, 25], "recalcul": [10, 25], "backbone_dihedr": [10, 25], "explan": [10, 25], "abov": [10, 13, 23, 25, 29, 31, 32], "circular": [10, 25], "input_shap": [10, 23, 25], "too": [11, 14, 27], "tfrecord": 11, "capabl": 11, "write_traj": 11, "fmt": 11, "nc": [11, 14, 27, 30], "term": 11, "simul": [11, 15, 30, 31, 38], "termini": 11, "spin": 11, "categori": [11, 30], "ascrib": 11, "charg": 11, "cartesioan": 11, "residue1": 11, "residue2": 11, "ch1": 11, "ensu": 11, "track": [11, 14, 27, 30, 49], "bother": [11, 29, 31], "trajetcori": 11, "manag": [11, 14, 27], "forget": [11, 48], "empti": [11, 14, 27], "conjunct": 11, "comprehens": [11, 30], "ascii": 12, "acdparamt": 12, "good": [12, 30, 31, 48], "anim": 13, "tooltip": 13, "hover": 13, "over": [13, 14, 27, 48], "closest": 13, "catch": 13, "movi": 13, "templat": 13, "less": [13, 31, 46], "ax1": 13, "ax2": 13, "red": 13, "linewidth": [13, 15, 29, 33, 35, 45, 47], "roikwarg": 13, "arrowkwarg": 13, "zoom": 13, "effect": 13, "mpl": [13, 30, 31, 46], "connectionpatch": 13, "seem": 13, "arrow": 13, "idea": [13, 14, 30, 46, 48], "galleri": 13, "widget": [13, 14, 27, 31], "lassoselector": 13, "lasso_selector_demo_sgskip": 13, "polygonselector": 13, "polygon_selector_demo": 13, "gist": 13, "github": [13, 16, 29, 30, 31, 32, 33, 42, 46, 47, 48], "gavincangan": 13, "b88a978e878e9bb1c0f8804e3af8de3c": 13, "k": [13, 14, 30, 46], "polynomi": 13, "b\u00e9zier": 13, "curv": [13, 31], "control_polygon": 13, "ax_main": 13, "ax_bernstein": 13, "builder": 13, "receiv": [13, 25], "no_item": 13, "gap_spac": 13, "width": [13, 46], "height": 13, "labelstr": 13, "hoverprop": 13, "on_select": 13, "standalon": [13, 25], "agg_filt": 13, "unset": 13, "antialias": 13, "bound": [13, 15, 38], "capstyl": 13, "clip_box": 13, "clip_on": 13, "clip_path": 13, "edgecolor": [13, 46], "facecolor": 13, "fill": [13, 46], "gid": 13, "hatch": 13, "hover_prop": 13, "in_layout": 13, "joinstyl": 13, "linestyl": [13, 31], "mouseov": 13, "path_effect": 13, "picker": 13, "raster": 13, "sketch_param": 13, "snap": 13, "visibl": 13, "zorder": 13, "dpi": 13, "offset": 13, "bottom": 13, "corner": 13, "aa": 13, "butt": 13, "bbox": 13, "ec": 13, "fc": [13, 31], "miter": 13, "bevel": 13, "l": 13, "seq": 13, "lw": 13, "abstractpatheffect": 13, "cursor": 13, "rest": [13, 31, 48], "rgba": [13, 31, 46], "black": [13, 29], "notat": [13, 22], "unknonwn": 13, "blue": 13, "alpha_oth": 13, "fade": 13, "reduc": [13, 31, 49], "perman": 13, "alter": [13, 30, 42], "highlight": 13, "fulfil": 13, "idl": 13, "info_dict": 13, "min_topfil": 13, "list_of_fram": 13, "domain": 13, "suitabl": [13, 14, 27], "green": 13, "dssp": [13, 30], "h": [13, 15, 21, 38, 39, 46], "legth": 13, "uniqu": [13, 14, 27], "sorted_": 13, "progbar": 13, "letter": [13, 14, 27], "151": 13, "75": [13, 30], "becom": [13, 30, 31], "imshow": [13, 15, 39], "digit": 13, "sha1": 14, "statist": 14, "long": [14, 15, 29, 38], "great": 14, "converg": 14, "sampl": [14, 25, 33], "establish": 14, "statisticalbiophysicsblog": 14, "92": 14, "mismatch": [14, 27], "fanci": [14, 27], "consider": [14, 27], "fifth": [14, 27], "trajector": [14, 27], "hypothet": [14, 27, 30, 46], "addition": [14, 27, 31, 46], "extra": [14, 27, 30], "identifi": [14, 27, 30], "easier": [14, 27], "bookkep": [14, 27], "arr": [14, 27], "new_traj": [14, 27, 30], "trace": [14, 27, 48], "frame_num": [14, 27, 28], "28": [14, 27, 28, 30], "trajecoti": [14, 27], "ram": [14, 27, 30], "lammpstrj": [14, 27], "textfil": [14, 27], "ident": [14, 27], "clearli": [14, 27], "unspecifi": [14, 27], "trajensemblefeaturetyp": [14, 27], "attr_nam": [14, 27, 28, 30], "variou": [14, 23, 25, 27], "easiest": [14, 22, 27, 30], "txt": [14, 15, 27, 30, 38], "whatev": [14, 27], "highd": [14, 22, 27, 46], "dist": [14, 27], "feature1": [14, 27], "feature1_err": [14, 27], "feature2_err": [14, 27], "fase": [14, 27], "impli": [14, 27], "think": [14, 27, 30, 46], "ly": [14, 27], "independ": [14, 27, 48], "encembl": [14, 27], "inplac": [14, 27], "optional": [14, 27], "stride": [14, 27], "1000": [14, 15, 27, 30, 32, 33, 36, 38, 42], "cosnid": [14, 27], "wherea": [14, 27], "problem": [14, 15, 27, 38], "core": [14, 27, 29, 31, 32, 48], "minim": [14, 25, 27, 29, 48], "yoi": [14, 27], "_top_fil": [14, 27], "_traj_fil": [14, 27], "accordingli": [14, 27], "single_mdtraj": [14, 27], "unitcel": [14, 27], "anomali": 14, "detect": 14, "furthermor": [14, 27, 29], "oftentim": [14, 27], "raw": [14, 27, 29, 30, 31, 32, 33, 42, 46, 47, 48], "tack": [14, 27], "nanomet": [14, 27], "picosecond": [14, 27], "protein1_traj1": [14, 27], "protein1_traj2": [14, 27], "sameprotein1": [14, 27], "advanc": [14, 27, 40, 43, 44], "traj2": [14, 27], "complic": [14, 27], "exyens": [14, 27], "context": [14, 27], "objetc": [14, 27], "traceback": [14, 27, 29, 30, 31, 32, 33, 42, 46, 47, 48], "exit": [14, 27], "unwant": [14, 27], "done": [14, 27, 30, 46, 48], "initila": [14, 27], "teh": [14, 27], "trr": [14, 27], "protein2_traj": [14, 27], "protein2": [14, 27], "protein1": [14, 27], "liek": [14, 27], "add_new_traj": [14, 27], "openmm_box": [14, 27], "openmm_posit": [14, 27], "timestep": [14, 25, 27, 30], "unitcell_vector": [14, 27], "unitcell_length": [14, 27], "unitcell_angl": [14, 27], "_check_valid_unitcel": [14, 27], "_distance_unit": [14, 27], "_have_unitcel": [14, 27], "_rmsd_trace": [14, 27], "_saver": [14, 27], "_string_summary_bas": [14, 27], "_time": [14, 27], "_time_default_to_arang": [14, 27], "_topologi": [14, 27], "_unitcell_angl": [14, 27], "_unitcell_length": [14, 27], "_xyz": [14, 27], "setter": [14, 27], "atom_indic": [14, 27, 48], "pdb_id": [14, 27], "recognit": [14, 27], "lose": [14, 27], "singletrajfeaturetyp": [14, 27], "acces": [14, 27, 47], "multidimension": [14, 27], "featurzi": [14, 27], "enumer": [14, 27], "f": [14, 27, 30, 31, 46], "nmr": [14, 27], "datafield": [14, 27], "centerdih": [14, 27], "met": [14, 27, 28], "filenotfounderror": [14, 27], "ioerror": [14, 27], "new_backend": [14, 27], "Be": [14, 27], "awar": [14, 27], "fileformat": [14, 27], "forc": [14, 27, 30], "got": [14, 27, 46], "purpos": [14, 27, 46, 47], "sel_str": [14, 27], "against": [14, 23, 25, 27], "resseq": [14, 27, 30], "met1": [14, 27], "gui": [14, 27], "ref_atom_indic": [14, 27, 48], "ream": [14, 27], "rm": [14, 27], "whcih": [14, 27], "openmp": [14, 27, 48], "superposit": [14, 27], "polym": [14, 27], "nomenclatur": [14, 27], "molecul": [14, 18, 27, 31], "pathlib": [14, 27, 31], "disc": 14, "datatyp": 14, "arang": 14, "unadulter": 14, "everyht": 14, "load_fram": 14, "endpoint": 14, "webserv": 14, "wehmey": [14, 30], "markovmodel": [14, 30], "hi": [14, 30], "smaller": 14, "suffic": 14, "wehmeyer2018introduct": 14, "introduct": 14, "markov": [14, 30], "softwar": 14, "scherer": 14, "martin": 14, "hempel": 14, "tim": 14, "husic": 14, "brook": 14, "olsson": 14, "simon": 14, "frank": 14, "live": [14, 23, 25], "5965": 14, "2018": 14, "high_d_data": [15, 29, 33, 35], "low_d_project": [15, 29, 31, 33, 35, 45], "mpl_toolkit": [15, 29, 35], "mplot3d": [15, 29, 35], "earlier": [15, 35], "axes3d": [15, 29, 35], "add_subplot": [15, 29, 35, 46, 47], "111": [15, 21, 29, 31, 35, 46], "marker": [15, 29, 31, 33, 35, 45], "tab10": [15, 29, 35], "molnam": [15, 38, 39], "kaggl": [15, 38, 45], "andrejberg": [15, 38], "ubiquitin": [15, 38], "dimer": [15, 38], "structure_path": [15, 38, 39], "trajectory_path": [15, 38, 39], "02d": [15, 38, 39], "uni": [15, 38, 39], "selected_atom": [15, 38, 39], "select_atom": [15, 38, 39], "o1": [15, 38, 39], "pro": [15, 38, 39], "care": [15, 29, 38], "bondlength": [15, 38], "total_step": [15, 38], "50000": [15, 38, 39, 45], "c_alpha": [15, 38], "third": [15, 38], "400": [15, 38], "choic": [15, 29, 38], "pwd": [15, 38], "setlocal": [15, 38], "lc_numer": [15, 38], "en_u": [15, 38], "dummy_paramet": [15, 38], "deepcopi": [15, 30, 38], "angle_cost": [15, 38], "dihedral_cost": [15, 38], "savetxt": [15, 30, 38], "adc_cost_mean": [15, 38], "ckpt_path": [15, 38], "ckpt": [15, 38, 39], "run_id": [15, 39], "selection_for_align": [15, 39], "77": [15, 28, 30, 39], "xedg": [15, 39, 46], "yedg": [15, 39, 46], "histogram2d": [15, 39, 46], "fig1": [15, 39], "axe1": [15, 39], "cax": [15, 39, 45, 46], "extent": [15, 39], "aspect": [15, 39, 47], "cbar": [15, 39, 45], "set_label": [15, 39, 45, 46], "ln": [15, 39], "labelpad": [15, 39], "set_titl": [15, 39], "home": [15, 28, 39], "sorted_atom": [15, 39], "fig2": [15, 39], "axe2": [15, 39], "data_path": [15, 45], "csv_path": [15, 31, 33, 45], "trp_cage": [15, 45], "csv": [15, 16, 31, 33, 42, 45, 46, 47, 48], "tobiasl": [15, 45], "loadtxt": [15, 16, 31, 33, 45], "skiprow": [15, 31, 45], "delimit": [15, 16, 31, 33, 45], "nipy_spectr": [15, 45], "helix": [15, 45], "rmsd": [15, 45, 48], "trp_cage_extend": [15, 45], "usabl": 16, "tf1": 16, "tf2": [16, 17, 49], "pip3": 16, "virtual": 16, "clone": 16, "peter": [16, 18, 29, 30, 31, 32, 33, 42, 46, 47, 48], "encoder_map_priv": 16, "site": [16, 29, 30, 31, 32, 33, 42, 46, 47, 48], "packag": [16, 17, 19, 20, 23, 25, 29, 30, 31, 32, 33, 42, 46, 47, 48], "edit": 16, "high_dimensional_data": 16, "my_high_d_data": 16, "low_dimensional_project": 16, "contrast": [16, 31, 48], "low_d_point": 16, "newly_generated_high_d_point": 16, "brought": 17, "__version__": [17, 29, 30, 31, 32, 33, 42, 46, 47, 48], "executing_eagerli": 17, "disable_eager_execut": 17, "quick": 18, "intro": 18, "video": 18, "approach": 18, "faq": 18, "depth": 18, "concept": 18, "cite": 18, "lp19": 18, "lbjp19": 18, "tobia": 18, "lemk": 18, "andrej": 18, "berg": 18, "alok": 18, "jain": 18, "christin": [18, 30], "motion": 18, "chemic": 18, "59": [18, 30], "4550": 18, "4560": 18, "2019": 18, "theori": 18, "1209": 18, "1215": 18, "submodul": 19, "content": [19, 27], "add_kac_backbone_bond": 21, "acetyl": [21, 30], "lysin": [21, 30], "add_kac_sidechain_bond": 21, "indent": 21, "kac11": 21, "102": 21, "104": 21, "cb": 21, "cg": 21, "106": [21, 28], "107": 21, "ce": [21, 25], "nz": 21, "109": 21, "hz": 21, "ch": 21, "oi2": 21, "ci1": 21, "113": 21, "114": [21, 31], "115": 21, "anyfeatur": 21, "descript": 21, "decrib": 21, "buri": 22, "safe": 22, "inhomogen": 22, "observ": [22, 31], "emap": [22, 31, 32], "endoermap": 22, "callind": 22, "visit": 22, "pretti": 22, "tabl": [22, 31, 33], "affect": 22, "accompani": 22, "experi": 22, "pairwisedist": 23, "sparsereshap": 23, "reshap": 23, "reshapa": 23, "logic": [23, 25], "invoc": [23, 25], "init_scop": [23, 25], "subject": [23, 25], "rule": [23, 25, 29], "explicitli": [23, 25], "cannot": [23, 25, 29, 31, 32], "cast": [23, 25], "mask": [23, 25, 31], "input_spec": [23, 25], "savedmodel": [23, 25], "integr": [23, 25], "ecosystem": [23, 25], "tfmot": [23, 25], "tflite": [23, 25], "reserv": [23, 25], "infer": [23, 25], "did": [23, 25, 31], "come": [23, 25, 29, 30], "came": [23, 25], "basic_loss_combin": 24, "old_distance_loss": 24, "side_dihedral_loss": 24, "periodicity_overwrit": 24, "closur": [24, 47], "adcsequentialmodel": 25, "reappli": 25, "op": 25, "overridden": 25, "__call__": 25, "reli": 25, "masking_and_pad": 25, "call_and_map_back": 25, "train_step": [25, 48], "classif": [25, 48], "task": [25, 30, 48], "discard": [25, 48], "1e": 25, "binarycrossentropi": 25, "binaryaccuraci": 25, "falseneg": 25, "signatur": 25, "fn": 25, "ground": 25, "truth": 25, "d0": 25, "dn": 25, "categor": 25, "crossentropi": 25, "loss_weight": 25, "typic": 25, "output_a": 25, "output_b": 25, "acc": 25, "categoricalaccuraci": 25, "sparsecategoricalaccuraci": 25, "target": [25, 48], "weighted_metr": 25, "coeffici": 25, "sample_weight": 25, "class_weight": 25, "run_eagerli": 25, "parameterserverstrategi": 25, "steps_per_execut": 25, "tpu": 25, "small": [25, 31], "overhead": 25, "At": 25, "truncat": 25, "on_batch_begin": 25, "on_batch_end": 25, "jit_compil": 25, "xla": [25, 29, 31, 32], "machin": [25, 29, 31, 32], "enabl": [25, 29, 31, 32], "necessarili": 25, "known_issu": 25, "get_loss": 25, "concret": 25, "customizing_what_happens_in_fit": 25, "make_train_funct": 25, "mathemat": 25, "backpropag": 25, "strategi": 25, "callbacklist": 25, "substitut": 25, "never": [25, 48], "throw": [25, 30], "unexpect": 25, "unrel": 25, "workflow": 25, "invalid": 25, "agnost": 25, "properli": [25, 29, 31, 32], "within": [25, 28], "sparsefunctionalmodel": 25, "sparsemodel": 25, "sparse_tensor": 25, "01t15": 28, "durat": 28, "386": 28, "skip": [28, 48], "test_loss": 28, "testlossesperiod": 28, "test_losses_period": 28, "839": 28, "testlossesnonperiod": 28, "test_losses_not_period": 28, "676": 28, "testlossesadcautoencod": 28, "test_losses_adc": 28, "54": [28, 30, 31], "testdistancelossscipi": 28, "test_non_period": 28, "test_period": 28, "test_angl": 28, "testangl": 28, "test_ala10_angl": 28, "runner": 28, "test_chain_in_plan": 28, "548": 28, "116": [28, 30], "test_backmapping_em1_em2": 28, "testbackmappingem1em2": 28, "test_backmapping_wo_angl": 28, "main_input": 28, "943": 28, "17": [28, 30, 31, 32, 46], "testcomparesplit": 28, "test_random_shap": 28, "split_and_reverse_cartesian": 28, "split_and_reverse_dihedr": 28, "test_dihedral_to_cartesian": 28, "testdihedraltocartesiantf": 28, "test_straight_tetrahedral_chain_with_bond_lenght": 28, "test_straight_to_helix_arrai": 28, "test_straight_to_helix_v2": 28, "test_featur": 28, "testfeatur": 28, "test_add_al": 28, "test_add_angl": 28, "test_add_backbone_tors": 28, "test_add_chi1_tors": 28, "test_add_contact": 28, "contactfeatur": 28, "test_add_custom_featur": 28, "test_add_dihedr": 28, "test_add_distances_ca": 28, "test_add_group_com": 28, "test_add_inverse_dist": 28, "test_add_minrmsd_to_ref": 28, "test_add_residue_com": 28, "test_add_residue_mindist": 28, "test_add_select": 28, "test_add_sidechain_tors": 28, "test_ala_dipeptide_correct_number_of_residu": 28, "test_encodermap_features_1am7": 28, "446": 28, "test_encodermap_features_ala10": 28, "test_encodermap_features_cartesian": 28, "test_interactive_plot": 28, "testinteractiveplot": 28, "tmp": 28, "93mfor": 28, "ssupdat": 28, "sscach": 28, "tcl": 28, "thrown": 28, "0m": 28, "test_moldata": 28, "testtrajinfo": 28, "test_compare_moldata_tf1_tf2": 28, "test_moldata_tf1": 28, "test_moldata_tf2": 28, "test_non_backbone_atom": 28, "testnonbackboneatom": 28, "test_guess_amide_h": 28, "test_guess_amide_o": 28, "470": 28, "test_optional_import": 28, "testoptionalimport": 28, "test_non_working_import": 28, "test_working_import": 28, "test_pairwise_dist": 28, "testsigmoiddist": 28, "test_sigmoid": 28, "159": 28, "testperiodicdist": 28, "test_periodic_distance_np": 28, "test_periodic_distance_tf": 28, "test_periodic_many_point": 28, "202": 28, "testpairwisedist": 28, "test_compare_pairwise_dist_and_periodic_pairwise_dist": 28, "test_pairwise_dist_flat": 28, "test_pairwise_dist_period": 28, "test_pairwise_dist_periodic_not_periodic_cas": 28, "117": 28, "testdistancesem1em2": 28, "test_periodic_dist": 28, "test_trajinfo": 28, "testtraj": 28, "test_cv_slicing_singletraj": 28, "test_cvs_for_trajensemble_containing_only_single_fram": 28, "test_cvs_in_fil": 28, "test_cvs_stay_after_subsampl": 28, "traj_nam": 28, "u14": 28, "1am7_correct": [28, 30], "int64": 28, "u106": 28, "5e": 28, "6e": 28, "86": [28, 30], "867": 28, "test_singletraj_equ": 28, "test_singletraj_mdtraj_dupl": 28, "test_singletraj_raises_error_on_wrong_dtype_for_traj": 28, "test_singletraj_subsampl": 28, "test_singletraj_subsample_h5": 28, "test_singletraj_subsample_without_load": 28, "test_singletraj_throws_error_on_wrong_way_round": 28, "test_adding_mixed_pyemma_features_with_custom_nam": 28, "test_addition_along_trajensembl": 28, "test_atom_slic": 28, "test_double_sl": 28, "test_from_pdbid": 28, "test_gen_ensembl": 28, "test_gen_ensemble_no_fil": 28, "test_info_all_load_cvs_from_fil": 28, "test_info_all_load_cvs_from_numpi": 28, "test_info_all_load": 28, "test_join": 28, "test_load_cvs_trajensembl": 28, "mulitpl": 28, "test_load_cvs_for_single_traj_as_str": 28, "misalign": 28, "traj_fram": 28, "1am7_center_of_mass": 28, "81903247": 28, "93509809": 28, "85774657": 28, "center_of_mass_x": 28, "npy_data": 28, "test_load_cvs_from_other_sourc": 28, "pos_arr": 28, "ones2": 28, "ones3": 28, "test_load_h5": 28, "test_load_h5_with_integer_index": 28, "test_load_info_all_with_trajs_and_one_top_does_not_raise_error": 28, "test_load_pdb_with_mdtraj_backend": 28, "test_load_singletraj_with_traj_and_top": 28, "test_load_uri_with_index": 28, "test_load_url": 28, "test_load_xtc": 28, "test_n_frames_in_h5_fil": 28, "test_pyemma_indexing_and_get_single_fram": 28, "test_single_traj_double_index_with_int": 28, "test_singletraj_raises_error_on_file_not_found": 28, "test_slicing_and_cvs_xtc_and_h5": 28, "test_slicing_and_indexing_mix": 28, "36": [28, 30], "test_stack": 28, "test_traj_ensemble_equ": 28, "test_traj_id": 28, "test_traj_join": 28, "test_wrong_formatted_cv": 28, "49": [28, 30, 31], "59189999": 28, "31840003": 28, "91500002": 28, "0763": 28, "08410001": 28, "64749998": 28, "7823": 28, "91110003": 28, "66850001": 28, "51679999": 28, "04900002": 28, "03410006": 28, "21349999": 28, "77909994": 28, "02849996": 28, "1358": 28, "00769997": 28, "85170001": 28, "38049999": 28, "75810003": 28, "30719995": 28, "70069999": 28, "39890003": 28, "2476": 28, "40360001": 28, "13050008": 28, "17399999": 28, "01880002": 28, "74220002": 28, "58289999": 28, "43149996": 28, "60360003": 28, "56169999": 28, "09739995": 28, "0785": 28, "40530002": 28, "88139999": 28, "12980001": 28, "40279999": 28, "40400001": 28, "45919999": 28, "65540004": 28, "13979995": 28, "2282": 28, "30620003": 28, "83399999": 28, "test_vers": 28, "testvers": 28, "add_one_by_on": 28, "littl": [29, 31], "toi": 29, "uncom": [29, 30, 31, 32, 33, 42, 46, 47, 48], "wget": [29, 30, 31, 33, 42, 46, 47, 48], "githubusercont": [29, 30, 31, 32, 33, 42, 46, 47, 48], "install_encodermap_google_colab": [29, 30, 31, 33, 42, 46, 47, 48], "sh": [29, 30, 31, 33, 42, 46, 47, 48], "sudo": [29, 30, 31, 33, 42, 46, 47, 48], "bash": [29, 30, 31, 33, 42, 46, 47, 48], "modulenotfounderror": [29, 30, 31, 32, 33, 42, 46, 47, 48], "recent": [29, 30, 31, 32, 33, 42, 46, 47, 48], "gt": [29, 30, 31, 32, 33, 42, 46, 47, 48], "hostedtoolcach": [29, 30, 31, 32, 33, 42, 46, 47, 48], "x64": [29, 30, 31, 32, 33, 42, 46, 47, 48], "lib": [29, 30, 31, 32, 33, 42, 46, 47, 48], "python3": [29, 30, 31, 32, 33, 42, 46, 47, 48], "88": [29, 30, 31, 32, 33, 42, 46, 47, 48], "90": [29, 30, 31, 32, 33, 42, 46, 47, 48], "95": [29, 30, 31, 32, 33, 42, 46, 47, 48], "97": [29, 30, 31, 32, 33, 42, 46, 47, 48], "99": [29, 30, 31, 32, 33, 42, 46, 47, 48], "adit": 29, "inlin": [29, 31, 32, 46, 47], "reproduc": [29, 31, 32], "27": [29, 30, 31, 32], "092677": 29, "platform": [29, 31, 32], "cpu_feature_guard": [29, 31, 32], "cc": [29, 31, 32], "binari": [29, 30, 31, 32], "oneapi": [29, 31, 32], "deep": [29, 31, 32], "onednn": [29, 31, 32], "critic": [29, 31, 32], "fma": [29, 31, 32], "flag": [29, 31, 32], "239429": 29, "stream_executor": [29, 31, 32], "dso_load": [29, 31, 32], "64": [29, 30, 31, 32], "libcudart": [29, 31, 32], "dlerror": [29, 31, 32], "ld_library_path": [29, 31, 32], "239458": 29, "cuda": [29, 31, 32], "cudart_stub": [29, 31, 32], "cudart": [29, 31, 32], "185329": 29, "libnvinf": [29, 31, 32], "185467": 29, "libnvinfer_plugin": [29, 31, 32], "185484": 29, "tf2tensorrt": [29, 31, 32], "py_util": [29, 31, 32], "trt": [29, 31, 32], "dlopen": [29, 31, 32], "tensorrt": [29, 31, 32], "nvidia": [29, 31, 32], "mention": [29, 31, 32], "our": [29, 30, 31, 37, 42, 47, 48], "randomli": [29, 48], "nameerror": [29, 30, 31, 32, 33, 42, 46, 47, 48], "fine": 29, "helper": 29, "run0": [29, 31], "forth": 29, "sensit": 29, "preserv": 29, "stem": 29, "region": 29, "interest": [29, 31], "hardli": 29, "somewher": 29, "neighbor": 29, "distenc": 29, "ideal": 29, "irrelev": 29, "n_dimensions_l": 29, "n_dimensions_h": 29, "further": [29, 31], "literatur": 29, "feel": 29, "plai": [29, 31, 32], "invers": 29, "probabl": [29, 31], "perfect": 29, "lost": 29, "vice": 29, "versa": 29, "emploi": 30, "few": 30, "descriptor": 30, "reaction": 30, "pathwai": 30, "higher": [30, 48], "receptor": 30, "ligand": 30, "speci": 30, "rel": 30, "understand": [30, 31], "appar": 30, "clever": 30, "scientist": 30, "field": 30, "dai": 30, "abil": 30, "fluent": 30, "natur": 30, "scope": 30, "my": 30, "head": 30, "diemsnion": 30, "fold": 30, "approxim": 30, "mathrm": 30, "c_": 30, "captur": 30, "symmetr": 30, "binom": 30, "membran": 30, "lie": [30, 48], "energet": 30, "favor": 30, "modifi": [30, 48], "phosphoryl": 30, "methyl": 30, "ubiquityl": 30, "chi_1": 30, "chi_5": 30, "unfold": 30, "hyperparamet": 30, "temperatur": 30, "phase": 30, "gromo": [30, 31], "thank": 30, "gigabyt": 30, "autoreload": [30, 31, 32], "load_ext": [30, 31, 32, 42, 46, 47, 48], "get_ipython": [30, 31, 32, 33, 46], "run_line_mag": [30, 31, 32, 33, 46], "pf": 30, "lt": [30, 31, 47], "anytim": 30, "anywher": 30, "1am7": 30, "c23": 30, "glob": 30, "ngl": 30, "fast": 30, "coprehens": 30, "magic": 30, "howver": 30, "multitud": 30, "traj_xtc": 30, "databas": 30, "traj_pdb": 30, "encpdermap": 30, "traj_proj": 30, "traj_mdtraj": 30, "garbag": 30, "hasattr": [30, 31], "__dict__": 30, "kept": [30, 48], "nonetheless": 30, "compute_dssp": 30, "tolist": 30, "compute_center_of_mass": 30, "danci": 30, "down": 30, "andvanc": 30, "possibli": 30, "wiht": 30, "traj_h5": 30, "printed_hdf_annot": 30, "greet": 30, "restart": [30, 31], "kernel": 30, "37": 30, "ask": 30, "random_raman_angl": 30, "phi_angl": 30, "psi_angl": 30, "raman_label": 30, "raman": 30, "random_integers_per_fram": 30, "randint": 30, "intend": 30, "unambig": 30, "loc": [30, 31], "frame_no": 30, "45": [30, 31, 32], "raman_fil": 30, "cluster_membership_fil": 30, "full_cv_dataset": 30, "emma": 30, "latest": 30, "add_backbone_tors": 30, "add_": 30, "startswith": 30, "getattr": 30, "advantag": [30, 33], "themselv": 30, "cap": 30, "backbonetorsionfeatur": 30, "seen": [30, 31], "scrambl": 30, "regard": 30, "level": [30, 46, 47, 49], "appear": [30, 31], "57": 30, "randomintforatomfeatur": 30, "customfeatur": 30, "randomintoforatomfeatur": 30, "serializ": 30, "super": [30, 31, 46, 48], "lsit": 30, "getlbl": 30, "astyp": [30, 32, 42, 46, 47, 48], "myawesomefeatur": 30, "58": 30, "61": 30, "nemat": 30, "coars": 30, "grain": 30, "carbon": 30, "hydrat": 30, "telechel": 30, "mukherjee2012deriv": 30, "multiscal": 30, "liquid": 30, "crystallin": 30, "transit": 30, "mukherje": 30, "biswaroop": 30, "dell": 30, "luigi": 30, "kremer": 30, "kurt": 30, "physic": 30, "chemistri": 30, "8474": 30, "8484": 30, "2012": 30, "ac": 30, "flachmuller2021coars": 30, "aggreg": 30, "polyethylen": 30, "nanocryst": 30, "flachm": 30, "ller": 30, "alexand": 30, "meck": 30, "stefan": 30, "condens": 30, "matter": [30, 48], "264001": 30, "2021": 30, "iop": 30, "almost": [30, 47], "instantan": 30, "62": 30, "1am7_all_cv": 30, "63": 30, "66": 30, "80": [30, 32], "81": 30, "85": 30, "notebooks_start": [31, 42], "vast": 31, "identif": 31, "hepta": 31, "aspart": 31, "acid": 31, "use_jedi": [31, 32, 33], "338251": 31, "489542": 31, "489571": 31, "442706": 31, "442843": 31, "442857": 31, "principl": 31, "suit": 31, "translation": 31, "rotation": 31, "invari": 31, "cluster_id": [31, 42, 46, 47, 48], "nv": 31, "show_mdtraj": 31, "add_represent": 31, "hyperbal": 31, "attributeerror": 31, "adaptor": 31, "datafil": 31, "get_vers": 31, "asestructur": 31, "asetrajectori": 31, "biopythonstructur": 31, "filestructur": 31, "htmdtrajectori": 31, "iodatastructur": 31, "iotbxstructur": 31, "mdanalysistrajectori": 31, "mdtrajtrajectori": 31, "rdkitstructur": 31, "textstructur": 31, "nglwidget": 31, "demo": 31, "show_pdbid": 31, "show_biopython": 31, "pdbid": 31, "traitlet": 31, "caselessstrenum": 31, "unicod": 31, "componentview": 31, "obj": 31, "colormakerregistri": 31, "_colormakerregistri": 31, "_singleton": 31, "getinst": 31, "cl": 31, "_ipython_display_": 31, "_readi": 31, "similarli": [31, 48], "grei": 31, "maptlotlib": 31, "c0": 31, "c1": 31, "c2": 31, "colors_from_cluster_id": 31, "max_clust": 31, "fill_valu": 31, "to_rgb": 31, "legend": [31, 32], "rec": 31, "didn": 31, "unsuit": 31, "goe": 31, "neet": 31, "And": [31, 42], "logdir": [31, 42, 46, 47, 48], "command": 31, "navig": [31, 42], "shell": 31, "docker": 31, "consol": 31, "exec": 31, "notebooks_easi": [31, 47], "abl": [31, 42, 46, 47], "webbrows": [31, 42], "6006": [31, 42], "127": [31, 42], "tab": 31, "among": 31, "overal": [31, 32], "encount": 31, "refresh": 31, "web": 31, "kill": 31, "reload_multifil": [31, 42, 46, 47, 48], "strain": 31, "3000": 31, "gool": 31, "bit": 31, "longer": [31, 32], "constant": [31, 42], "influenc": 31, "smooth": 31, "rougher": 31, "go": [31, 41, 44], "satisfi": 31, "frequenc": 31, "patamet": 31, "driectori": 31, "editor": 31, "loaded_paramet": 31, "latest_checkpoint_fil": 31, "rglob": 31, "getmtim": 31, "rstrip": 31, "_decod": 31, "loaded_e_map": 31, "indexerror": 31, "low_dimension": 31, "markers": 31, "lh": 31, "legendhandl": 31, "legmark": 31, "set_alpha": 31, "explor": [31, 48], "fron": 31, "hear": 31, "feedback": 31, "matploltib": [31, 46], "qt5": [31, 32], "abruptli": 31, "sensibl": 31, "smoother": 31, "strong": 31, "monitor": 31, "previous": 31, "trainign": 32, "test_requir": 32, "650347": 32, "803308": 32, "803340": 32, "741465": 32, "741587": 32, "741602": 32, "glu7": 32, "asp7": [32, 40, 42, 44, 46, 47, 48], "geometr": 32, "gradual": 32, "250": [32, 47], "125": 32, "asp7_glu7_asp8": 32, "path_point": 32, "knowledg": 33, "my_data": 33, "evrei": 33, "10th": 33, "ref": 34, "diubi": [34, 40], "trp": [34, 40], "cage": [34, 40], "colab": [37, 41, 43, 44, 49], "topic": 40, "starter": 40, "usag": [40, 44, 48], "intermedi": [40, 48], "learningrateschedul": 42, "pd": [42, 46, 47, 48], "wil": 42, "lr_schedul": 42, "exist_ok": 42, "logger": 42, "learningratelogg": 42, "name_scop": [42, 46, 48], "lr": 42, "df": [42, 46, 47, 48], "read_csv": [42, 46, 47, 48], "iloc": [42, 46, 47, 48], "005": 42, "Or": 42, "exp": 42, "below": 42, "builtin": 42, "overtrain": 42, "slightli": [42, 48], "power": 42, "modular": 42, "plug": 42, "demand": 43, "wrtite": 43, "addtion": 46, "buffer": 46, "png": 46, "puffer": 46, "But": 46, "densiti": 46, "correl": 46, "surfac": 46, "pure": 46, "middl": 46, "fring": 46, "xy_data": 46, "vstack": 46, "20000": 46, "to_free_energi": 46, "plot_free_energi": 46, "nonzero": 46, "mappabl": 46, "contourf": [46, 47], "turbo": 46, "kt": 46, "agg": 46, "buf": 46, "bytesio": 46, "bytecod": 46, "free_energy_tensorboard": 46, "savefig": 46, "seek": 46, "decode_png": 46, "getvalu": 46, "cerat": 46, "custom_imag": 46, "freedom": 46, "drive": 46, "trhough": 46, "polar": 46, "ll": [46, 48], "radii": 46, "diff": 46, "subcalss": 46, "customcallback": 46, "on_epoch_begin": 46, "on_epoch_end": 46, "on_train_batch_begin": 46, "_polar_plot": 46, "polarhistogramcallback": 46, "inp_data": 46, "n_summary_step": 46, "create_imag": 46, "push": 47, "equat": 47, "linspac": 47, "line2d": 47, "0x7f306a4b44f0": 47, "distance_to_unit_circle_2d": 47, "ab": [47, 48], "distance_to_unit_circl": 47, "xx": 47, "yy": 47, "grid": 47, "meshgrid": 47, "contour": 47, "quadcontourset": 47, "0x7f30683b1f40": 47, "print_msg": 47, "msg": 47, "enclos": 47, "printer": 47, "hello": 47, "abbrevi": 47, "reduce_mean": [47, 48], "circle_loss": 47, "demonstr": 47, "purpo": 47, "circle_loss_fn": 47, "circle_cost": 47, "reduce_sum": 47, "bump": 47, "stronger": 47, "interfer": 47, "custom_loss": 47, "instani": 47, "_circle_loss": 47, "fragment": 48, "auto_cost_funct": 48, "elif": 48, "norm": 48, "write_bool": 48, "true_fn": 48, "false_fn": 48, "ict": 48, "Then": 48, "mathbb": 48, "hypertoroid": 48, "mathematician": 48, "frac": 48, "periodicti": 48, "custom_scalar": 48, "mymodel": 48, "inpt": 48, "my_model": 48, "ill": 48, "inbetween": 48, "parent_class_out": 48, "reach": 48, "comparison_auto_cost": 48, "talk": 48, "p_dist": 48, "judg": 48, "involv": 48, "mertric": 48, "_rmsd": 48, "precent": 48, "particular": 48, "measur": 48, "array_lik": 48, "those": 48, "rmsd_trace": 48, "center_coordin": 48, "unsaf": 48, "date": 48, "incorrect": 48, "03076187": 48, "02549562": 48, "06230228": 48, "00666826": 48, "24364147": 48, "across": 48, "thread": 48, "launch": 48, "omp_num_thread": 48, "root": 48, "deviat": 48, "th": 48, "link": 49, "tensorflow2": 49}, "objects": {"": [[2, 0, 0, "-", "encodermap"]], "encodermap": [[2, 1, 1, "", "ADCParameters"], [2, 1, 1, "", "AngleDihedralCartesianEncoderMap"], [2, 1, 1, "", "Autoencoder"], [2, 1, 1, "", "EncoderMap"], [2, 1, 1, "", "EncoderMapBaseCallback"], [2, 1, 1, "", "Featurizer"], [2, 1, 1, "", "InteractivePlotting"], [2, 1, 1, "", "MolData"], [2, 1, 1, "", "Parameters"], [2, 1, 1, "", "Repository"], [2, 0, 0, "-", "_optional_imports"], [2, 0, 0, "-", "_typing"], [2, 0, 0, "-", "_version"], [3, 0, 0, "-", "autoencoder"], [4, 0, 0, "-", "callbacks"], [6, 0, 0, "-", "encodermap_tf1"], [2, 5, 1, "", "function"], [2, 5, 1, "", "load"], [7, 0, 0, "-", "loading"], [8, 0, 0, "-", "loss_functions"], [9, 0, 0, "-", "misc"], [10, 0, 0, "-", "models"], [11, 0, 0, "-", "moldata"], [12, 0, 0, "-", "parameters"], [13, 0, 0, "-", "plot"], [14, 0, 0, "-", "trajinfo"]], "encodermap.ADCParameters": [[2, 2, 1, "", "__init__"], [2, 3, 1, "", "activation_functions"], [2, 3, 1, "", "angle_cost_reference"], [2, 3, 1, "", "angle_cost_scale"], [2, 3, 1, "", "angle_cost_variant"], [2, 3, 1, "", "cartesian_cost_reference"], [2, 3, 1, "", "cartesian_cost_scale"], [2, 3, 1, "", "cartesian_cost_scale_soft_start"], [2, 3, 1, "", "cartesian_cost_variant"], [2, 3, 1, "", "cartesian_dist_sig_parameters"], [2, 3, 1, "", "cartesian_distance_cost_scale"], [2, 3, 1, "", "cartesian_pwd_start"], [2, 3, 1, "", "cartesian_pwd_step"], [2, 3, 1, "", "cartesian_pwd_stop"], [2, 3, 1, "", "defaults"], [2, 2, 1, "", "defaults_description"], [2, 3, 1, "", "dihedral_cost_reference"], [2, 3, 1, "", "dihedral_cost_scale"], [2, 3, 1, "", "dihedral_cost_variant"], [2, 3, 1, "", "n_neurons"], [2, 3, 1, "", "side_dihedral_cost_reference"], [2, 3, 1, "", "side_dihedral_cost_scale"], [2, 3, 1, "", "side_dihedral_cost_variant"], [2, 3, 1, "", "use_backbone_angles"], [2, 3, 1, "", "use_sidechains"]], "encodermap.AngleDihedralCartesianEncoderMap": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "_setup_callbacks"], [2, 2, 1, "", "encode"], [2, 2, 1, "", "from_checkpoint"], [2, 2, 1, "", "generate"], [2, 2, 1, "", "get_train_data_from_trajs"], [2, 4, 1, "", "loss"], [2, 2, 1, "", "save"], [2, 2, 1, "", "train"]], "encodermap.Autoencoder": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "_setup_callbacks"], [2, 2, 1, "id0", "add_images_to_tensorboard"], [2, 3, 1, "", "callbacks"], [2, 2, 1, "", "close"], [2, 3, 1, "", "dataset"], [2, 2, 1, "id7", "decode"], [2, 4, 1, "id8", "decoder"], [2, 2, 1, "id9", "encode"], [2, 4, 1, "id10", "encoder"], [2, 2, 1, "id11", "from_checkpoint"], [2, 2, 1, "id12", "generate"], [2, 4, 1, "", "loss"], [2, 3, 1, "", "metrics"], [2, 4, 1, "", "model"], [2, 3, 1, "", "optimizer"], [2, 3, 1, "", "p"], [2, 2, 1, "id13", "plot_network"], [2, 3, 1, "", "read_only"], [2, 2, 1, "", "save"], [2, 2, 1, "id14", "train"], [2, 3, 1, "", "train_data"]], "encodermap.EncoderMap": [[2, 2, 1, "", "from_checkpoint"], [2, 4, 1, "", "loss"]], "encodermap.EncoderMapBaseCallback": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "on_checkpoint_step"], [2, 2, 1, "", "on_summary_step"], [2, 2, 1, "", "on_train_batch_end"], [2, 3, 1, "", "steps_counter"]], "encodermap.InteractivePlotting": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "accept"], [2, 3, 1, "", "ax"], [2, 2, 1, "", "bezier"], [2, 4, 1, "", "cluster_zoomed"], [2, 2, 1, "", "ellipse"], [2, 3, 1, "", "fig"], [2, 2, 1, "", "lasso"], [2, 3, 1, "", "menu"], [2, 3, 1, "", "menu_ax"], [2, 4, 1, "id15", "mode"], [2, 2, 1, "", "on_click"], [2, 2, 1, "", "on_click_menu"], [2, 2, 1, "", "on_click_tool"], [2, 2, 1, "", "on_enter_ax"], [2, 2, 1, "", "on_leave_ax"], [2, 2, 1, "", "path"], [2, 2, 1, "", "polygon"], [2, 3, 1, "", "pts"], [2, 2, 1, "", "rectangle"], [2, 2, 1, "", "render_move"], [2, 2, 1, "", "reset"], [2, 2, 1, "", "set_points"], [2, 3, 1, "", "status_menu_ax"], [2, 3, 1, "", "statusmenu"], [2, 3, 1, "", "tool"], [2, 3, 1, "", "trajs"], [2, 2, 1, "", "write"]], "encodermap.MolData": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "sort_key"], [2, 2, 1, "", "write"]], "encodermap.Parameters": [[2, 2, 1, "", "__init__"], [2, 3, 1, "id16", "activation_functions"], [2, 3, 1, "", "analysis_path"], [2, 3, 1, "", "auto_cost_scale"], [2, 3, 1, "", "auto_cost_variant"], [2, 3, 1, "", "batch_size"], [2, 3, 1, "", "batched"], [2, 3, 1, "", "center_cost_scale"], [2, 3, 1, "", "checkpoint_step"], [2, 3, 1, "id17", "defaults"], [2, 2, 1, "", "defaults_description"], [2, 3, 1, "", "dist_sig_parameters"], [2, 3, 1, "", "distance_cost_scale"], [2, 3, 1, "", "gpu_memory_fraction"], [2, 3, 1, "", "id"], [2, 3, 1, "", "l2_reg_constant"], [2, 3, 1, "", "learning_rate"], [2, 3, 1, "", "loss"], [2, 3, 1, "", "main_path"], [2, 3, 1, "", "model_api"], [2, 3, 1, "id18", "n_neurons"], [2, 3, 1, "", "n_steps"], [2, 3, 1, "", "periodicity"], [2, 3, 1, "", "seed"], [2, 3, 1, "", "summary_step"], [2, 3, 1, "", "tensorboard"], [2, 3, 1, "", "training"]], "encodermap.Repository": [[2, 2, 1, "", "__init__"], [2, 2, 1, "", "_get_connection"], [2, 2, 1, "", "_split_proj_filetype"], [2, 4, 1, "", "catalogue"], [2, 3, 1, "", "current_path"], [2, 3, 1, "", "data"], [2, 4, 1, "", "datasets"], [2, 2, 1, "", "fetch"], [2, 3, 1, "", "files"], [2, 3, 1, "", "files_dict"], [2, 2, 1, "", "get_sizes"], [2, 2, 1, "", "load_project"], [2, 2, 1, "", "lookup"], [2, 3, 1, "", "maintainer"], [2, 2, 1, "", "print_catalogue"], [2, 4, 1, "", "projects"], [2, 2, 1, "", "search"], [2, 2, 1, "", "stack"], [2, 3, 1, "", "url"]], "encodermap._optional_imports": [[2, 5, 1, "", "_optional_import"]], "encodermap.autoencoder": [[3, 0, 0, "-", "autoencoder"]], "encodermap.autoencoder.autoencoder": [[20, 1, 1, "", "AngleDihedralCartesianEncoderMap"], [20, 1, 1, "", "Autoencoder"], [3, 1, 1, "", "DihedralEncoderMap"], [20, 1, 1, "", "EncoderMap"]], "encodermap.autoencoder.autoencoder.AngleDihedralCartesianEncoderMap": [[20, 2, 1, "", "__init__"], [20, 2, 1, "", "_setup_callbacks"], [20, 2, 1, "", "encode"], [20, 2, 1, "", "from_checkpoint"], [20, 2, 1, "", "generate"], [20, 2, 1, "", "get_train_data_from_trajs"], [20, 4, 1, "", "loss"], [20, 2, 1, "", "save"], [20, 2, 1, "", "train"]], "encodermap.autoencoder.autoencoder.Autoencoder": [[20, 2, 1, "", "__init__"], [20, 2, 1, "", "_setup_callbacks"], [20, 2, 1, "id0", "add_images_to_tensorboard"], [20, 3, 1, "", "callbacks"], [20, 2, 1, "", "close"], [20, 3, 1, "", "dataset"], [20, 2, 1, "id1", "decode"], [20, 4, 1, "id2", "decoder"], [20, 2, 1, "id3", "encode"], [20, 4, 1, "id4", "encoder"], [20, 2, 1, "id5", "from_checkpoint"], [20, 2, 1, "id6", "generate"], [20, 4, 1, "", "loss"], [20, 3, 1, "", "metrics"], [20, 4, 1, "", "model"], [20, 3, 1, "", "optimizer"], [20, 3, 1, "", "p"], [20, 2, 1, "id7", "plot_network"], [20, 3, 1, "", "read_only"], [20, 2, 1, "", "save"], [20, 2, 1, "id8", "train"], [20, 3, 1, "", "train_data"]], "encodermap.autoencoder.autoencoder.DihedralEncoderMap": [[3, 2, 1, "", "generate"]], "encodermap.autoencoder.autoencoder.EncoderMap": [[20, 2, 1, "", "from_checkpoint"], [20, 4, 1, "", "loss"]], "encodermap.callbacks": [[4, 0, 0, "-", "callbacks"], [4, 0, 0, "-", "metrics"]], "encodermap.callbacks.callbacks": [[4, 1, 1, "", "CheckpointSaver"], [4, 1, 1, "", "EarlyStop"], [4, 1, 1, "", "IncreaseCartesianCost"], [4, 1, 1, "", "ProgressBar"], [4, 1, 1, "", "TensorboardWriteBool"]], "encodermap.callbacks.callbacks.CheckpointSaver": [[4, 2, 1, "", "on_checkpoint_step"]], "encodermap.callbacks.callbacks.EarlyStop": [[4, 2, 1, "", "__init__"], [4, 2, 1, "", "on_train_batch_end"], [4, 2, 1, "", "on_train_begin"], [4, 2, 1, "", "on_train_end"]], "encodermap.callbacks.callbacks.IncreaseCartesianCost": [[4, 2, 1, "", "__init__"], [4, 2, 1, "", "calc_current_cartesian_cost_scale"], [4, 2, 1, "", "on_train_batch_end"]], "encodermap.callbacks.callbacks.ProgressBar": [[4, 2, 1, "", "on_summary_step"], [4, 2, 1, "", "on_train_batch_end"], [4, 2, 1, "", "on_train_begin"], [4, 2, 1, "", "on_train_end"]], "encodermap.callbacks.callbacks.TensorboardWriteBool": [[4, 2, 1, "", "__init__"], [4, 2, 1, "", "on_train_batch_end"]], "encodermap.encodermap_tf1": [[6, 0, 0, "-", "angle_dihedral_cartesian_encodermap"], [6, 0, 0, "-", "autoencoder"], [6, 0, 0, "-", "backmapping"], [6, 0, 0, "-", "encodermap"], [6, 0, 0, "-", "misc"], [6, 0, 0, "-", "moldata"], [6, 0, 0, "-", "parameters"], [6, 0, 0, "-", "plot"]], "encodermap.encodermap_tf1.angle_dihedral_cartesian_encodermap": [[6, 1, 1, "", "AngleDihedralCartesianEncoderMap"], [6, 1, 1, "", "AngleDihedralCartesianEncoderMapDummy"]], "encodermap.encodermap_tf1.angle_dihedral_cartesian_encodermap.AngleDihedralCartesianEncoderMap": [[6, 2, 1, "", "__init__"], [6, 2, 1, "", "_angle_cost"], [6, 2, 1, "", "_cartesian_cost"], [6, 2, 1, "", "_cartesian_distance_cost"], [6, 2, 1, "", "_dihedral_cost"], [6, 2, 1, "", "_distance_cost"], [6, 2, 1, "", "_prepare_data"], [6, 2, 1, "", "_setup_cost"], [6, 2, 1, "", "_setup_network"], [6, 2, 1, "", "generate"]], "encodermap.encodermap_tf1.angle_dihedral_cartesian_encodermap.AngleDihedralCartesianEncoderMapDummy": [[6, 2, 1, "", "_setup_network"]], "encodermap.encodermap_tf1.autoencoder": [[6, 1, 1, "", "Autoencoder"]], "encodermap.encodermap_tf1.autoencoder.Autoencoder": [[6, 2, 1, "", "__init__"], [6, 2, 1, "", "_auto_cost"], [6, 2, 1, "", "_center_cost"], [6, 2, 1, "", "_encode"], [6, 2, 1, "", "_generate"], [6, 2, 1, "", "_l2_reg_cost"], [6, 2, 1, "", "_prepare_data"], [6, 2, 1, "", "_random_batch"], [6, 2, 1, "", "_setup_cost"], [6, 2, 1, "", "_setup_data_iterator"], [6, 2, 1, "", "_setup_network"], [6, 2, 1, "", "_step"], [6, 2, 1, "", "close"], [6, 2, 1, "", "encode"], [6, 2, 1, "", "generate"], [6, 2, 1, "", "profile"], [6, 2, 1, "", "train"]], "encodermap.encodermap_tf1.backmapping": [[6, 5, 1, "", "_expand_universe"], [6, 5, 1, "", "_set_dihedral"], [6, 5, 1, "", "chain_in_plane"], [6, 5, 1, "", "dihedral_backmapping"], [6, 5, 1, "", "dihedral_to_cartesian_tf_one_way"], [6, 5, 1, "", "dihedrals_to_cartesian_tf"], [6, 5, 1, "", "dihedrals_to_cartesian_tf_old"], [6, 5, 1, "", "guess_amide_H"], [6, 5, 1, "", "guess_amide_O"], [6, 5, 1, "", "guess_sp2_atom"], [6, 5, 1, "", "merge_cartesians"], [6, 5, 1, "", "straight_tetrahedral_chain"]], "encodermap.encodermap_tf1.encodermap": [[6, 1, 1, "", "EncoderMap"]], "encodermap.encodermap_tf1.encodermap.EncoderMap": [[6, 2, 1, "", "_distance_cost"], [6, 2, 1, "", "_setup_cost"]], "encodermap.encodermap_tf1.misc": [[6, 5, 1, "", "add_layer_summaries"], [6, 5, 1, "", "create_dir"], [6, 5, 1, "", "distance_cost"], [6, 5, 1, "", "pairwise_dist"], [6, 5, 1, "", "pairwise_dist_periodic"], [6, 5, 1, "", "periodic_distance"], [6, 5, 1, "", "periodic_distance_np"], [6, 5, 1, "", "potential_energy"], [6, 5, 1, "", "random_on_cube_edges"], [6, 5, 1, "", "read_from_log"], [6, 5, 1, "", "rotation_matrix"], [6, 5, 1, "", "run_path"], [6, 5, 1, "", "search_and_replace"], [6, 5, 1, "", "sigmoid"], [6, 5, 1, "", "variable_summaries"]], "encodermap.encodermap_tf1.moldata": [[6, 1, 1, "", "Angles"], [6, 1, 1, "", "MolData"], [6, 1, 1, "", "Positions"]], "encodermap.encodermap_tf1.moldata.Angles": [[6, 2, 1, "", "_conclude"], [6, 2, 1, "", "_prepare"], [6, 2, 1, "", "_single_frame"]], "encodermap.encodermap_tf1.moldata.MolData": [[6, 2, 1, "", "__init__"], [6, 2, 1, "", "sort_key"], [6, 2, 1, "", "write"]], "encodermap.encodermap_tf1.moldata.Positions": [[6, 2, 1, "", "_conclude"], [6, 2, 1, "", "_prepare"], [6, 2, 1, "", "_single_frame"]], "encodermap.encodermap_tf1.parameters": [[6, 1, 1, "", "ADCParameters"], [6, 1, 1, "", "Parameters"], [6, 1, 1, "", "ParametersFramework"]], "encodermap.encodermap_tf1.parameters.ParametersFramework": [[6, 2, 1, "", "_setattrs"], [6, 2, 1, "", "load"], [6, 2, 1, "", "save"]], "encodermap.encodermap_tf1.plot": [[6, 1, 1, "", "ManualPath"], [6, 1, 1, "", "PathGenerateCartesians"], [6, 1, 1, "", "PathGenerateDihedrals"], [6, 1, 1, "", "PathSelect"], [6, 5, 1, "", "distance_histogram"]], "encodermap.encodermap_tf1.plot.ManualPath": [[6, 2, 1, "", "__init__"], [6, 2, 1, "", "_add_point_interp"], [6, 2, 1, "", "_free_draw"], [6, 2, 1, "", "_free_draw_callback"], [6, 2, 1, "", "_grab_background"], [6, 2, 1, "", "_interpolate"], [6, 2, 1, "", "_on_click"], [6, 2, 1, "", "_on_key"], [6, 2, 1, "", "_reset_lines"], [6, 2, 1, "", "_update_interp"], [6, 2, 1, "", "_update_lines"], [6, 2, 1, "", "use_points"]], "encodermap.encodermap_tf1.plot.PathGenerateCartesians": [[6, 2, 1, "", "__init__"], [6, 2, 1, "", "use_points"]], "encodermap.encodermap_tf1.plot.PathGenerateDihedrals": [[6, 2, 1, "", "__init__"], [6, 2, 1, "", "use_points"]], "encodermap.encodermap_tf1.plot.PathSelect": [[6, 2, 1, "", "__init__"], [6, 2, 1, "", "use_points"]], "encodermap.loading": [[21, 0, 0, "-", "features"], [7, 0, 0, "-", "featurizer"], [7, 0, 0, "-", "pipeline"], [7, 0, 0, "-", "utils"]], "encodermap.loading.features": [[21, 1, 1, "", "AllBondDistances"], [21, 1, 1, "", "AllCartesians"], [21, 1, 1, "", "CentralAngles"], [21, 1, 1, "", "CentralBondDistances"], [21, 1, 1, "", "CentralCartesians"], [21, 1, 1, "", "CentralDihedrals"], [21, 1, 1, "", "SideChainAngles"], [21, 1, 1, "", "SideChainBondDistances"], [21, 1, 1, "", "SideChainCartesians"], [21, 1, 1, "", "SideChainDihedrals"], [21, 5, 1, "", "add_KAC_backbone_bonds"], [21, 5, 1, "", "add_KAC_sidechain_bonds"], [21, 5, 1, "", "describe_last_feats"]], "encodermap.loading.features.AllBondDistances": [[21, 3, 1, "", "__serialize_fields"], [21, 3, 1, "", "__serialize_version"], [21, 2, 1, "", "describe"], [21, 2, 1, "", "generic_describe"], [21, 4, 1, "id0", "indexes"], [21, 4, 1, "", "name"], [21, 3, 1, "id3", "prefix_label"], [21, 3, 1, "", "top"]], "encodermap.loading.features.AllCartesians": [[21, 2, 1, "", "__init__"], [21, 3, 1, "", "__serialize_fields"], [21, 3, 1, "", "__serialize_version"], [21, 2, 1, "", "describe"], [21, 3, 1, "", "indexes"], [21, 4, 1, "", "name"], [21, 3, 1, "id4", "prefix_label"], [21, 3, 1, "", "top"]], "encodermap.loading.features.CentralAngles": [[21, 3, 1, "", "__serialize_fields"], [21, 3, 1, "", "__serialize_version"], [21, 2, 1, "", "describe"], [21, 2, 1, "", "generic_describe"], [21, 4, 1, "id5", "indexes"], [21, 4, 1, "", "name"], [21, 3, 1, "id6", "prefix_label"], [21, 3, 1, "", "top"]], "encodermap.loading.features.CentralBondDistances": [[21, 3, 1, "", "__serialize_fields"], [21, 3, 1, "", "__serialize_version"], [21, 4, 1, "id7", "indexes"], [21, 4, 1, "", "name"], [21, 3, 1, "id8", "prefix_label"], [21, 3, 1, "", "top"]], "encodermap.loading.features.CentralCartesians": [[21, 3, 1, "", "__serialize_fields"], [21, 3, 1, "", "__serialize_version"], [21, 2, 1, "", "describe"], [21, 2, 1, "", "generic_describe"], [21, 3, 1, "", "indexes"], [21, 4, 1, "", "name"], [21, 3, 1, "id9", "prefix_label"], [21, 3, 1, "", "top"]], "encodermap.loading.features.CentralDihedrals": [[21, 2, 1, "", "__init__"], [21, 3, 1, "", "__serialize_fields"], [21, 3, 1, "", "__serialize_version"], [21, 4, 1, "", "dask_transform"], [21, 2, 1, "", "describe"], [21, 2, 1, "", "generic_describe"], [21, 4, 1, "id10", "indexes"], [21, 4, 1, "", "name"], [21, 3, 1, "", "top"]], "encodermap.loading.features.SideChainAngles": [[21, 3, 1, "", "__serialize_fields"], [21, 3, 1, "", "__serialize_version"], [21, 2, 1, "", "describe"], [21, 4, 1, "id11", "indexes"], [21, 4, 1, "", "name"], [21, 3, 1, "id12", "prefix_label"], [21, 3, 1, "", "top"]], "encodermap.loading.features.SideChainBondDistances": [[21, 3, 1, "", "__serialize_fields"], [21, 3, 1, "", "__serialize_version"], [21, 4, 1, "id13", "indexes"], [21, 4, 1, "", "name"], [21, 3, 1, "id14", "prefix_label"], [21, 3, 1, "", "top"]], "encodermap.loading.features.SideChainCartesians": [[21, 3, 1, "", "__serialize_fields"], [21, 3, 1, "", "__serialize_version"], [21, 3, 1, "", "indexes"], [21, 4, 1, "", "name"], [21, 3, 1, "id15", "prefix_label"], [21, 3, 1, "", "top"]], "encodermap.loading.features.SideChainDihedrals": [[21, 3, 1, "", "__serialize_fields"], [21, 3, 1, "", "__serialize_version"], [21, 2, 1, "", "describe"], [21, 2, 1, "", "generic_describe"], [21, 4, 1, "id16", "indexes"], [21, 4, 1, "", "name"], [21, 3, 1, "id17", "options"], [21, 3, 1, "", "top"]], "encodermap.loading.featurizer": [[7, 1, 1, "", "Featurizer"], [7, 5, 1, "", "_validate_uri"]], "encodermap.loading.utils": [[7, 5, 1, "", "put_nan_back_in"]], "encodermap.loss_functions": [[24, 0, 0, "-", "loss_functions"]], "encodermap.loss_functions.loss_functions": [[24, 5, 1, "", "_do_nothing"], [24, 5, 1, "", "_summary_cost"], [24, 5, 1, "", "angle_loss"], [24, 5, 1, "", "auto_loss"], [24, 5, 1, "", "basic_loss_combinator"], [24, 5, 1, "", "cartesian_distance_loss"], [24, 5, 1, "", "cartesian_loss"], [24, 5, 1, "", "center_loss"], [24, 5, 1, "", "dihedral_loss"], [24, 5, 1, "", "distance_loss"], [24, 5, 1, "", "loss_combinator"], [24, 5, 1, "", "old_distance_loss"], [24, 5, 1, "", "reconstruction_loss"], [24, 5, 1, "", "regularization_loss"], [24, 5, 1, "", "side_dihedral_loss"], [24, 5, 1, "", "sigmoid_loss"]], "encodermap.misc": [[9, 0, 0, "-", "backmapping"], [9, 0, 0, "-", "clustering"], [9, 0, 0, "-", "distances"], [9, 0, 0, "-", "errors"], [9, 0, 0, "-", "function_def"], [9, 0, 0, "-", "misc"], [9, 0, 0, "-", "saving_loading_models"], [9, 0, 0, "-", "summaries"], [9, 0, 0, "-", "transformations"], [9, 0, 0, "-", "xarray"], [9, 0, 0, "-", "xarray_save_wrong_hdf5"]], "encodermap.misc.backmapping": [[9, 5, 1, "", "_dihedral"], [9, 5, 1, "", "_displacement"], [9, 5, 1, "", "_get_far_and_near_networkx"], [9, 5, 1, "", "backbone_hydrogen_oxygen_crossproduct"]], "encodermap.misc.clustering": [[9, 5, 1, "", "_gen_dummy_traj_single"], [9, 5, 1, "", "gen_dummy_traj"], [9, 5, 1, "", "get_cluster_frames"]], "encodermap.misc.distances": [[9, 5, 1, "", "pairwise_dist"], [9, 5, 1, "", "pairwise_dist_periodic"], [9, 5, 1, "", "periodic_distance"], [9, 5, 1, "", "periodic_distance_np"], [9, 5, 1, "", "sigmoid"]], "encodermap.misc.errors": [[9, 6, 1, "", "BadError"]], "encodermap.misc.function_def": [[9, 5, 1, "", "function"]], "encodermap.misc.misc": [[9, 5, 1, "", "_can_be_feature"], [9, 5, 1, "", "_datetime_windows_and_linux_compatible"], [9, 5, 1, "", "_flatten_model"], [9, 5, 1, "", "_validate_uri"], [9, 5, 1, "", "create_n_cube"], [9, 5, 1, "", "get_full_common_str_and_ref"], [9, 5, 1, "", "plot_model"], [9, 5, 1, "", "run_path"]], "encodermap.misc.saving_loading_models": [[9, 5, 1, "", "load_list_of_models"], [9, 5, 1, "", "load_model"], [9, 5, 1, "", "model_sort_key"], [9, 5, 1, "", "save_model"]], "encodermap.misc.summaries": [[9, 5, 1, "", "_gen_hist"], [9, 5, 1, "", "_gen_nan_image"], [9, 5, 1, "", "_gen_scatter"], [9, 5, 1, "", "add_layer_summaries"], [9, 5, 1, "", "image_summary"]], "encodermap.misc.transformations": [[9, 5, 1, "", "_import_module"]], "encodermap.misc.xarray": [[9, 5, 1, "", "_validate_uri"], [9, 5, 1, "", "construct_xarray_from_numpy"], [9, 5, 1, "", "unpack_data_and_feature"]], "encodermap.misc.xarray_save_wrong_hdf5": [[9, 5, 1, "", "_get_scheduler"], [9, 5, 1, "", "_to_netcdf"], [9, 5, 1, "", "_validate_attrs"], [9, 5, 1, "", "_validate_dataset_names"], [9, 5, 1, "", "save_netcdf_alongside_mdtraj"]], "encodermap.models": [[23, 0, 0, "-", "layers"], [25, 0, 0, "-", "models"]], "encodermap.models.layers": [[23, 1, 1, "", "BackMapLayer"], [23, 1, 1, "", "MeanAngles"], [23, 1, 1, "", "PairwiseDistances"], [23, 1, 1, "", "PeriodicInput"], [23, 1, 1, "", "PeriodicOutput"], [23, 1, 1, "", "Sparse"], [23, 1, 1, "", "SparseReshape"]], "encodermap.models.layers.BackMapLayer": [[23, 2, 1, "", "__init__"], [23, 2, 1, "", "call"]], "encodermap.models.layers.MeanAngles": [[23, 2, 1, "", "__init__"], [23, 2, 1, "", "call"]], "encodermap.models.layers.PairwiseDistances": [[23, 2, 1, "", "__init__"], [23, 2, 1, "", "call"]], "encodermap.models.layers.PeriodicInput": [[23, 2, 1, "", "__init__"], [23, 2, 1, "", "call"]], "encodermap.models.layers.PeriodicOutput": [[23, 2, 1, "", "__init__"], [23, 2, 1, "", "call"]], "encodermap.models.layers.Sparse": [[23, 2, 1, "", "call"]], "encodermap.models.layers.SparseReshape": [[23, 2, 1, "", "call"]], "encodermap.models.models": [[25, 1, 1, "", "ADCSequentialModel"], [25, 1, 1, "", "FunctionalModel"], [25, 1, 1, "", "SequentialModel"], [25, 1, 1, "", "Sparse"], [25, 1, 1, "", "SparseFunctionalModel"], [25, 1, 1, "", "SparseModel"], [25, 5, 1, "", "gen_functional_model"], [25, 5, 1, "", "gen_sequential_model"]], "encodermap.models.models.ADCSequentialModel": [[25, 2, 1, "", "call"], [25, 2, 1, "", "call_and_map_back"], [25, 2, 1, "", "train_step"]], "encodermap.models.models.FunctionalModel": [[25, 2, 1, "", "compile"], [25, 2, 1, "", "decoder"], [25, 2, 1, "", "encoder"], [25, 2, 1, "", "get_loss"], [25, 2, 1, "", "train_step"]], "encodermap.models.models.SequentialModel": [[25, 2, 1, "", "build"], [25, 2, 1, "", "call"], [25, 2, 1, "", "compile"], [25, 2, 1, "", "decoder"], [25, 2, 1, "", "encoder"], [25, 2, 1, "", "train_step"]], "encodermap.models.models.Sparse": [[25, 2, 1, "", "call"]], "encodermap.models.models.SparseFunctionalModel": [[25, 2, 1, "", "get_loss"]], "encodermap.models.models.SparseModel": [[25, 2, 1, "", "call"]], "encodermap.moldata": [[11, 0, 0, "-", "moldata"]], "encodermap.moldata.moldata": [[11, 1, 1, "", "NewMolData"]], "encodermap.moldata.moldata.NewMolData": [[11, 2, 1, "", "__init__"], [11, 2, 1, "", "write_tfrecords"]], "encodermap.parameters": [[12, 0, 0, "-", "parameters"]], "encodermap.parameters.parameters": [[26, 1, 1, "", "ADCParameters"], [26, 1, 1, "", "Parameters"], [12, 5, 1, "", "_datetime_windows_and_linux_compatible"]], "encodermap.parameters.parameters.ADCParameters": [[26, 2, 1, "", "__init__"], [26, 3, 1, "", "activation_functions"], [26, 3, 1, "", "angle_cost_reference"], [26, 3, 1, "", "angle_cost_scale"], [26, 3, 1, "", "angle_cost_variant"], [26, 3, 1, "", "cartesian_cost_reference"], [26, 3, 1, "", "cartesian_cost_scale"], [26, 3, 1, "", "cartesian_cost_scale_soft_start"], [26, 3, 1, "", "cartesian_cost_variant"], [26, 3, 1, "", "cartesian_dist_sig_parameters"], [26, 3, 1, "", "cartesian_distance_cost_scale"], [26, 3, 1, "", "cartesian_pwd_start"], [26, 3, 1, "", "cartesian_pwd_step"], [26, 3, 1, "", "cartesian_pwd_stop"], [26, 3, 1, "", "defaults"], [26, 2, 1, "", "defaults_description"], [26, 3, 1, "", "dihedral_cost_reference"], [26, 3, 1, "", "dihedral_cost_scale"], [26, 3, 1, "", "dihedral_cost_variant"], [26, 3, 1, "", "n_neurons"], [26, 3, 1, "", "side_dihedral_cost_reference"], [26, 3, 1, "", "side_dihedral_cost_scale"], [26, 3, 1, "", "side_dihedral_cost_variant"], [26, 3, 1, "", "use_backbone_angles"], [26, 3, 1, "", "use_sidechains"]], "encodermap.parameters.parameters.Parameters": [[26, 2, 1, "", "__init__"], [26, 3, 1, "id0", "activation_functions"], [26, 3, 1, "", "analysis_path"], [26, 3, 1, "", "auto_cost_scale"], [26, 3, 1, "", "auto_cost_variant"], [26, 3, 1, "", "batch_size"], [26, 3, 1, "", "batched"], [26, 3, 1, "", "center_cost_scale"], [26, 3, 1, "", "checkpoint_step"], [26, 3, 1, "id2", "defaults"], [26, 2, 1, "", "defaults_description"], [26, 3, 1, "", "dist_sig_parameters"], [26, 3, 1, "", "distance_cost_scale"], [26, 3, 1, "", "gpu_memory_fraction"], [26, 3, 1, "", "id"], [26, 3, 1, "", "l2_reg_constant"], [26, 3, 1, "", "learning_rate"], [26, 3, 1, "", "loss"], [26, 3, 1, "", "main_path"], [26, 3, 1, "", "model_api"], [26, 3, 1, "id3", "n_neurons"], [26, 3, 1, "", "n_steps"], [26, 3, 1, "", "periodicity"], [26, 3, 1, "", "seed"], [26, 3, 1, "", "summary_step"], [26, 3, 1, "", "tensorboard"], [26, 3, 1, "", "training"]], "encodermap.plot": [[13, 0, 0, "-", "interactive_plotting"], [13, 0, 0, "-", "jinja_template"], [13, 0, 0, "-", "plotting"], [13, 0, 0, "-", "utils"]], "encodermap.plot.interactive_plotting": [[13, 1, 1, "", "InteractivePlotting"]], "encodermap.plot.interactive_plotting.InteractivePlotting": [[13, 2, 1, "", "__init__"], [13, 2, 1, "", "accept"], [13, 3, 1, "", "ax"], [13, 2, 1, "", "bezier"], [13, 4, 1, "", "cluster_zoomed"], [13, 2, 1, "", "ellipse"], [13, 3, 1, "", "fig"], [13, 2, 1, "", "lasso"], [13, 3, 1, "", "menu"], [13, 3, 1, "", "menu_ax"], [13, 4, 1, "id0", "mode"], [13, 2, 1, "", "on_click"], [13, 2, 1, "", "on_click_menu"], [13, 2, 1, "", "on_click_tool"], [13, 2, 1, "", "on_enter_ax"], [13, 2, 1, "", "on_leave_ax"], [13, 2, 1, "", "path"], [13, 2, 1, "", "polygon"], [13, 3, 1, "", "pts"], [13, 2, 1, "", "rectangle"], [13, 2, 1, "", "render_move"], [13, 2, 1, "", "reset"], [13, 2, 1, "", "set_points"], [13, 3, 1, "", "status_menu_ax"], [13, 3, 1, "", "statusmenu"], [13, 3, 1, "", "tool"], [13, 3, 1, "", "trajs"], [13, 2, 1, "", "write"]], "encodermap.plot.plotting": [[13, 5, 1, "", "_zoomingBoxManual"], [13, 5, 1, "", "distance_histogram"]], "encodermap.plot.utils": [[13, 5, 1, "", "Bernstein"], [13, 5, 1, "", "Bezier"], [13, 1, 1, "", "BezierBuilder"], [13, 1, 1, "", "DummyTool"], [13, 1, 1, "", "Menu"], [13, 1, 1, "", "MenuItem"], [13, 1, 1, "", "ModeButton"], [13, 1, 1, "", "Props"], [13, 1, 1, "", "SelectFromCollection"], [13, 1, 1, "", "StatusMenu"], [13, 5, 1, "", "_check_all_templates_defined"], [13, 5, 1, "", "_create_readme"], [13, 5, 1, "", "_get_system_info"], [13, 5, 1, "", "_match_tops_and_trajs"], [13, 5, 1, "", "_unpack_cluster_info"], [13, 5, 1, "", "_unpack_path_info"], [13, 5, 1, "", "abc_to_rgb"], [13, 5, 1, "", "calculate_dssps"], [13, 5, 1, "", "correct_missing_uniques"], [13, 5, 1, "", "digitize_dssp"]], "encodermap.plot.utils.BezierBuilder": [[13, 2, 1, "", "__init__"], [13, 2, 1, "", "_build_bezier"], [13, 2, 1, "", "_update_bernstein"], [13, 2, 1, "", "_update_bezier"], [13, 2, 1, "", "disconnect"], [13, 4, 1, "", "ind"]], "encodermap.plot.utils.DummyTool": [[13, 2, 1, "", "disconnect"]], "encodermap.plot.utils.Menu": [[13, 2, 1, "", "add_items"], [13, 2, 1, "", "get_coords"], [13, 2, 1, "", "on_move"]], "encodermap.plot.utils.MenuItem": [[13, 2, 1, "", "check_select"], [13, 2, 1, "", "draw"], [13, 2, 1, "", "set"], [13, 2, 1, "", "set_axes"], [13, 2, 1, "", "set_data"], [13, 2, 1, "", "set_figure"], [13, 2, 1, "", "set_hover"], [13, 2, 1, "", "set_hover_props"], [13, 2, 1, "", "set_transform"]], "encodermap.plot.utils.ModeButton": [[13, 2, 1, "", "_on_select_rotation"], [13, 2, 1, "", "check_select"], [13, 2, 1, "", "set"], [13, 2, 1, "", "set_hover"]], "encodermap.plot.utils.Props": [[13, 2, 1, "", "__init__"], [13, 2, 1, "", "_setattr"], [13, 2, 1, "", "_string_summary"], [13, 3, 1, "", "alpha"], [13, 3, 1, "", "bgcolor"], [13, 4, 1, "id2", "bgcolor_rgb"], [13, 3, 1, "id3", "defaults"], [13, 3, 1, "", "fontsize"], [13, 3, 1, "", "labelcolor"], [13, 4, 1, "id4", "labelcolor_rgb"]], "encodermap.plot.utils.SelectFromCollection": [[13, 2, 1, "", "_string_summary"], [13, 2, 1, "", "disconnect"], [13, 2, 1, "", "onselect"]], "encodermap.plot.utils.StatusMenu": [[13, 2, 1, "", "add_items"], [13, 2, 1, "", "on_click"], [13, 2, 1, "", "set_idle"]], "encodermap.trajinfo": [[14, 0, 0, "-", "hash_files"], [14, 0, 0, "-", "info_all"], [14, 0, 0, "-", "info_single"], [14, 0, 0, "-", "load_traj"], [14, 0, 0, "-", "repository"], [14, 0, 0, "-", "trajinfo_utils"]], "encodermap.trajinfo.hash_files": [[14, 5, 1, "", "hash_files"]], "encodermap.trajinfo.info_all": [[27, 1, 1, "", "TrajEnsemble"], [14, 5, 1, "", "_can_be_feature"], [14, 5, 1, "", "_datetime_windows_and_linux_compatible"]], "encodermap.trajinfo.info_all.TrajEnsemble": [[27, 4, 1, "id5", "CVs"], [27, 4, 1, "", "CVs_in_file"], [27, 4, 1, "id6", "_CVs"], [27, 2, 1, "", "__add__"], [27, 2, 1, "", "__init__"], [27, 2, 1, "", "_pyemma_indexing"], [27, 2, 1, "", "_return_trajs_by_index"], [27, 2, 1, "", "_string_summary"], [27, 4, 1, "id7", "basenames"], [27, 4, 1, "", "frames"], [27, 2, 1, "", "from_textfile"], [27, 2, 1, "", "from_xarray"], [27, 2, 1, "", "get_single_frame"], [27, 4, 1, "", "id"], [27, 4, 1, "id8", "index_arr"], [27, 2, 1, "", "iterframes"], [27, 2, 1, "", "itertrajs"], [27, 2, 1, "", "load_CVs"], [27, 2, 1, "", "load_trajs"], [27, 4, 1, "id9", "locations"], [27, 4, 1, "id10", "n_frames"], [27, 4, 1, "", "n_residues"], [27, 4, 1, "id11", "n_trajs"], [27, 4, 1, "id12", "name_arr"], [27, 2, 1, "", "save"], [27, 2, 1, "", "save_CVs"], [27, 2, 1, "", "split_into_frames"], [27, 2, 1, "", "subsample"], [27, 4, 1, "id13", "top"], [27, 4, 1, "", "top_files"], [27, 4, 1, "", "traj_files"], [27, 4, 1, "", "traj_joined"], [27, 4, 1, "", "traj_nums"], [27, 2, 1, "", "unload"], [27, 4, 1, "", "xyz"]], "encodermap.trajinfo.info_single": [[27, 1, 1, "", "SingleTraj"], [14, 5, 1, "", "_load_traj"]], "encodermap.trajinfo.info_single.SingleTraj": [[27, 4, 1, "", "CVs"], [27, 4, 1, "", "CVs_in_file"], [27, 2, 1, "", "__add__"], [27, 2, 1, "", "__enter__"], [27, 2, 1, "", "__eq__"], [27, 2, 1, "", "__exit__"], [27, 2, 1, "", "__getattr__"], [27, 2, 1, "", "__getitem__"], [27, 2, 1, "", "__init__"], [27, 2, 1, "", "__iter__"], [27, 2, 1, "", "__reversed__"], [27, 2, 1, "", "_add_along_traj"], [27, 2, 1, "", "_gen_ensemble"], [27, 3, 1, "", "_mdtraj_attr"], [27, 4, 1, "", "_n_frames_base_h5_file"], [27, 4, 1, "", "_original_frame_indices"], [27, 2, 1, "", "_string_summary"], [27, 4, 1, "", "_traj"], [27, 2, 1, "", "_validate_uri"], [27, 2, 1, "", "atom_slice"], [27, 3, 1, "", "atoms"], [27, 3, 1, "", "backend"], [27, 4, 1, "", "basename"], [27, 3, 1, "", "bonds"], [27, 3, 1, "", "chains"], [27, 3, 1, "", "common_str"], [27, 4, 1, "", "extension"], [27, 2, 1, "", "from_pdb_id"], [27, 2, 1, "", "get_single_frame"], [27, 4, 1, "", "id"], [27, 3, 1, "", "index"], [27, 2, 1, "", "join"], [27, 2, 1, "", "load_CV"], [27, 2, 1, "", "load_traj"], [27, 4, 1, "", "n_atoms"], [27, 4, 1, "", "n_chains"], [27, 4, 1, "", "n_frames"], [27, 4, 1, "", "n_residues"], [27, 3, 1, "", "residues"], [27, 2, 1, "", "save"], [27, 2, 1, "", "save_CV_as_numpy"], [27, 2, 1, "", "select"], [27, 2, 1, "", "show_traj"], [27, 2, 1, "", "stack"], [27, 2, 1, "", "superpose"], [27, 4, 1, "", "top"], [27, 4, 1, "id0", "top_file"], [27, 4, 1, "", "traj"], [27, 4, 1, "id4", "traj_file"], [27, 3, 1, "", "traj_num"], [27, 2, 1, "", "unload"]], "encodermap.trajinfo.load_traj": [[14, 5, 1, "", "_load_traj"], [14, 5, 1, "", "_load_traj_and_top"], [14, 5, 1, "", "_validate_uri"]], "encodermap.trajinfo.repository": [[14, 1, 1, "", "Repository"]], "encodermap.trajinfo.repository.Repository": [[14, 2, 1, "", "__init__"], [14, 2, 1, "", "_get_connection"], [14, 2, 1, "", "_split_proj_filetype"], [14, 4, 1, "", "catalogue"], [14, 3, 1, "", "current_path"], [14, 3, 1, "", "data"], [14, 4, 1, "", "datasets"], [14, 2, 1, "", "fetch"], [14, 3, 1, "", "files"], [14, 3, 1, "", "files_dict"], [14, 2, 1, "", "get_sizes"], [14, 2, 1, "", "load_project"], [14, 2, 1, "", "lookup"], [14, 3, 1, "", "maintainer"], [14, 2, 1, "", "print_catalogue"], [14, 4, 1, "", "projects"], [14, 2, 1, "", "search"], [14, 2, 1, "", "stack"], [14, 3, 1, "", "url"]], "encodermap.trajinfo.trajinfo_utils": [[14, 5, 1, "", "load_CVs_ensembletraj"], [14, 5, 1, "", "load_CVs_singletraj"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:property", "5": "py:function", "6": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"], "6": ["py", "exception", "Python exception"]}, "titleterms": {"contribut": 0, "pull": 0, "request": 0, "process": 0, "code": [0, 34], "format": 0, "type": 0, "hint": 0, "mypi": 0, "unittest": 0, "coverag": [0, 18], "build": [0, 20, 22, 47], "document": [0, 22], "sphinx": 0, "vultur": 0, "pycodestyl": 0, "flake8": 0, "lint": 0, "black": 0, "autom": 0, "us": 0, "pre": 0, "commit": 0, "hook": 0, "nekto": 0, "act": 0, "ad": [0, 46, 47, 48], "yourself": 0, "an": 0, "author": 0, "encodermap": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 30, 32, 37, 43, 46, 47, 48], "packag": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "subpackag": 2, "submodul": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "_optional_import": 2, "modul": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 22], "_type": 2, "_version": 2, "content": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "autoencod": [3, 6, 20], "callback": [4, 46], "metric": [4, 48], "data": [5, 22, 29, 33, 43, 48], "encodermap_tf1": 6, "angle_dihedral_cartesian_encodermap": 6, "backmap": [6, 9], "misc": [6, 9], "moldata": [6, 11], "paramet": [6, 12, 22, 26, 29, 33, 48], "plot": [6, 13, 32, 33], "load": [7, 29, 30, 31, 32, 33], "dask_featur": 7, "delai": 7, "featur": [7, 21, 22, 30], "todo": [7, 8, 9, 11, 13, 21, 24], "pipelin": 7, "util": [7, 13], "loss_funct": 8, "cluster": 9, "distanc": [9, 15, 36], "error": 9, "function_def": 9, "saving_loading_model": 9, "summari": [9, 48], "transform": 9, "requir": 9, "note": 9, "refer": [9, 22], "exampl": [9, 16, 29, 30, 31, 34, 35, 36], "xarrai": 9, "xarray_save_wrong_hdf5": 9, "see": 9, "also": 9, "model": [10, 20, 22, 25, 48], "layer": [10, 22, 23], "interactive_plot": 13, "jinja_templ": 13, "trajinfo": 14, "hash_fil": 14, "info_al": 14, "info_singl": 14, "load_traj": 14, "repositori": 14, "trajinfo_deprec": 14, "trajinfo_util": 14, "exmapl": 15, "script": 15, "cube": [15, 29, 35, 36], "analysi": [15, 36, 39], "dihedr": [15, 38, 39], "cartesian": [15, 38, 39], "diubi": [15, 38, 39], "trp": [15, 45], "cage": [15, 45], "get": [16, 29, 48], "start": 16, "come": 16, "from": [16, 30, 47], "2": [16, 17, 30], "0": [16, 49], "instal": [16, 32], "minim": 16, "chang": [17, 48], "between": 17, "tensorflow": 17, "1": [17, 30], "compat": 17, "mode": 17, "test": [18, 28], "report": [18, 28], "citat": 18, "doi1": 18, "doi2": 18, "neural": [20, 22], "network": [20, 22], "learn": [20, 31, 37, 42, 43], "angledihedralcartesianencodermap": [20, 32], "api": 22, "work": [22, 30], "md": [22, 43], "train": [22, 32, 46, 47, 48], "lower": 22, "level": 22, "loss": [22, 24, 47], "function": [22, 24, 46, 47], "complet": 22, "class": [26, 27, 30], "adcparamet": 26, "trajectori": [27, 30, 32, 43], "singletraj": [27, 30], "trajensembl": 27, "basic": 29, "usag": [29, 31], "For": [29, 30, 31, 33, 42, 46, 47, 48], "googl": [29, 30, 31, 32, 33, 42, 46, 47, 48], "colab": [29, 30, 31, 32, 33, 42, 46, 47, 48], "onli": [29, 30, 31, 33, 42, 46, 47, 48], "import": [29, 32], "librari": [29, 33], "select": 29, "more": 29, "info": 29, "about": 29, "perform": 29, "dimension": [29, 33], "reduct": [29, 33], "gener": [29, 31], "high": 29, "conclus": [29, 31, 42, 46, 47], "ensembl": [30, 43], "primer": [30, 31, 33, 42, 46, 47, 48], "collect": 30, "variabl": 30, "cv": 30, "share": 30, "file": 30, "The": 30, "new": [30, 32, 46, 48], "initi": 30, "On": 30, "demand": 30, "take": 30, "look": 30, "nglview": 30, "attribut": 30, "duplic": 30, "mdtraj": 30, "index": 30, "advanc": [30, 31], "slice": 30, "hdf5": 30, "numpi": 30, "pyemma": 30, "wrtite": 30, "custom": [30, 37, 46, 47, 48], "No": 30, "write": [30, 42, 46, 47, 48], "save": [30, 31], "one": 30, "asp7": 31, "visual": 31, "tensorboard": [31, 42], "run": [31, 33, 48], "local": 31, "molecular": 31, "conform": 31, "differ": 32, "topologi": 32, "creat": 32, "result": [32, 33], "your": 33, "set": [33, 48], "how": [37, 43], "user": 40, "guid": 40, "intermedi": 41, "notebook": [41, 44], "rate": 42, "schedul": 42, "log": [42, 46, 48], "current": 42, "handl": 43, "starter": 44, "imag": 46, "via": 46, "matplotlib": 46, "implement": 46, "provid": 46, "thi": 46, "our": 46, "output": [46, 47], "subclass": [46, 48], "kera": 46, "unit": 47, "circl": 47, "includ": 47, "scalar": 48, "tf": 48, "input": 48, "sequentialmodel": 48, "what": 48, "happen": 48, "step": 48, "second": 48, "wai": 48, "changelog": 49, "2021": 49, "02": 49, "01": 49, "version": 49, "3": 49, "25": 49}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "nbsphinx": 4, "sphinxcontrib.bibtex": 9, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Contributing": [[0, "contributing"]], "Pull Request Process": [[0, "pull-request-process"]], "Code formatting": [[0, "code-formatting"]], "Type hints and MyPy": [[0, "type-hints-and-mypy"]], "Unittests and Coverage": [[0, "unittests-and-coverage"]], "Building the documentation and Sphinx": [[0, "building-the-documentation-and-sphinx"]], "Vulture, pycodestyle, flake8 (linting) and black": [[0, "vulture-pycodestyle-flake8-linting-and-black"]], "Automate using pre-commit-hooks": [[0, "automate-using-pre-commit-hooks"]], "NektOS act": [[0, "nektos-act"]], "Adding yourself as an author": [[0, "adding-yourself-as-an-author"]], "encodermap package": [[2, "encodermap-package"]], "Subpackages": [[2, "subpackages"]], "Submodules": [[2, "submodules"], [3, "submodules"], [4, "submodules"], [5, "submodules"], [6, "submodules"], [7, "submodules"], [8, "submodules"], [9, "submodules"], [10, "submodules"], [11, "submodules"], [12, "submodules"], [13, "submodules"], [14, "submodules"]], "encodermap._optional_imports module": [[2, "module-encodermap._optional_imports"]], "encodermap._typing module": [[2, "module-encodermap._typing"]], "encodermap._version module": [[2, "module-encodermap._version"]], "Module contents": [[2, "module-encodermap"], [3, "module-encodermap.autoencoder"], [4, "module-encodermap.callbacks"], [5, "module-contents"], [6, "module-encodermap.encodermap_tf1"], [7, "module-encodermap.loading"], [8, "module-encodermap.loss_functions"], [9, "module-encodermap.misc"], [10, "module-encodermap.models"], [11, "module-encodermap.moldata"], [12, "module-encodermap.parameters"], [13, "module-encodermap.plot"], [14, "module-encodermap.trajinfo"]], "encodermap.autoencoder package": [[3, "encodermap-autoencoder-package"]], "encodermap.autoencoder.autoencoder module": [[3, "module-encodermap.autoencoder.autoencoder"]], "encodermap.callbacks package": [[4, "encodermap-callbacks-package"]], "encodermap.callbacks.callbacks module": [[4, "module-encodermap.callbacks.callbacks"]], "encodermap.callbacks.metrics module": [[4, "module-encodermap.callbacks.metrics"]], "encodermap.data package": [[5, "encodermap-data-package"]], "encodermap.data.data module": [[5, "encodermap-data-data-module"]], "encodermap.encodermap_tf1 package": [[6, "encodermap-encodermap-tf1-package"]], "encodermap.encodermap_tf1.angle_dihedral_cartesian_encodermap module": [[6, "module-encodermap.encodermap_tf1.angle_dihedral_cartesian_encodermap"]], "encodermap.encodermap_tf1.autoencoder module": [[6, "module-encodermap.encodermap_tf1.autoencoder"]], "encodermap.encodermap_tf1.backmapping module": [[6, "module-encodermap.encodermap_tf1.backmapping"]], "encodermap.encodermap_tf1.encodermap module": [[6, "module-encodermap.encodermap_tf1.encodermap"]], "encodermap.encodermap_tf1.misc module": [[6, "module-encodermap.encodermap_tf1.misc"]], "encodermap.encodermap_tf1.moldata module": [[6, "module-encodermap.encodermap_tf1.moldata"]], "encodermap.encodermap_tf1.parameters module": [[6, "module-encodermap.encodermap_tf1.parameters"]], "encodermap.encodermap_tf1.plot module": [[6, "module-encodermap.encodermap_tf1.plot"]], "encodermap.loading package": [[7, "encodermap-loading-package"]], "encodermap.loading.dask_featurizer module": [[7, "encodermap-loading-dask-featurizer-module"]], "encodermap.loading.delayed module": [[7, "encodermap-loading-delayed-module"]], "encodermap.loading.features module": [[7, "module-encodermap.loading.features"]], "Todo": [[7, "id1"], [7, "id17"], [7, "id18"], [8, "id1"], [9, "id1"], [9, "id2"], [11, "id1"], [13, "id1"], [13, "id5"], [21, "id2"], [24, "id2"]], "encodermap.loading.featurizer module": [[7, "module-encodermap.loading.featurizer"]], "encodermap.loading.pipeline module": [[7, "module-encodermap.loading.pipeline"]], "encodermap.loading.utils module": [[7, "module-encodermap.loading.utils"]], "encodermap.loss_functions package": [[8, "encodermap-loss-functions-package"]], "encodermap.loss_functions.loss_functions module": [[8, "module-encodermap.loss_functions.loss_functions"]], "encodermap.misc package": [[9, "encodermap-misc-package"]], "encodermap.misc.backmapping module": [[9, "module-encodermap.misc.backmapping"]], "encodermap.misc.clustering module": [[9, "module-encodermap.misc.clustering"]], "encodermap.misc.distances module": [[9, "module-encodermap.misc.distances"]], "encodermap.misc.errors module": [[9, "module-encodermap.misc.errors"]], "encodermap.misc.function_def module": [[9, "module-encodermap.misc.function_def"]], "encodermap.misc.misc module": [[9, "module-encodermap.misc.misc"]], "encodermap.misc.saving_loading_models module": [[9, "module-encodermap.misc.saving_loading_models"]], "encodermap.misc.summaries module": [[9, "module-encodermap.misc.summaries"]], "encodermap.misc.transformations module": [[9, "module-encodermap.misc.transformations"]], "Requirements": [[9, "requirements"]], "Notes": [[9, "notes"]], "References": [[9, "references"]], "Examples": [[9, "examples"]], "encodermap.misc.xarray module": [[9, "module-encodermap.misc.xarray"]], "encodermap.misc.xarray_save_wrong_hdf5 module": [[9, "module-encodermap.misc.xarray_save_wrong_hdf5"]], "See Also": [[9, "see-also"]], "encodermap.models package": [[10, "encodermap-models-package"]], "encodermap.models.layers module": [[10, "module-encodermap.models.layers"]], "encodermap.models.models module": [[10, "module-encodermap.models.models"]], "encodermap.moldata package": [[11, "encodermap-moldata-package"]], "encodermap.moldata.moldata module": [[11, "module-encodermap.moldata.moldata"]], "encodermap.parameters package": [[12, "encodermap-parameters-package"]], "encodermap.parameters.parameters module": [[12, "module-encodermap.parameters.parameters"]], "encodermap.plot package": [[13, "encodermap-plot-package"]], "encodermap.plot.interactive_plotting module": [[13, "module-encodermap.plot.interactive_plotting"]], "encodermap.plot.jinja_template module": [[13, "module-encodermap.plot.jinja_template"]], "encodermap.plot.plotting module": [[13, "module-encodermap.plot.plotting"]], "encodermap.plot.utils module": [[13, "module-encodermap.plot.utils"]], "encodermap.trajinfo package": [[14, "encodermap-trajinfo-package"]], "encodermap.trajinfo.hash_files module": [[14, "module-encodermap.trajinfo.hash_files"]], "encodermap.trajinfo.info_all module": [[14, "module-encodermap.trajinfo.info_all"]], "encodermap.trajinfo.info_single module": [[14, "module-encodermap.trajinfo.info_single"]], "encodermap.trajinfo.load_traj module": [[14, "module-encodermap.trajinfo.load_traj"]], "encodermap.trajinfo.repository module": [[14, "module-encodermap.trajinfo.repository"]], "encodermap.trajinfo.trajinfo_deprecated module": [[14, "encodermap-trajinfo-trajinfo-deprecated-module"]], "encodermap.trajinfo.trajinfo_utils module": [[14, "module-encodermap.trajinfo.trajinfo_utils"]], "Exmaple Scripts": [[15, "exmaple-scripts"]], "Cube": [[15, "cube"]], "Cube Distance Analysis": [[15, "cube-distance-analysis"]], "Dihedral to Cartesian DiUbi": [[15, "dihedral-to-cartesian-diubi"]], "Dihedral to Cartesian DiUbi Analysis": [[15, "dihedral-to-cartesian-diubi-analysis"]], "Trp Cage": [[15, "trp-cage"]], "Getting started": [[16, "getting-started"]], "Coming from EncoderMap 2.0?": [[16, "coming-from-encodermap-2-0"]], "Installation": [[16, "installation"]], "Minimal Example": [[16, "minimal-example"]], "Changes between Tensorflow 1 and Tensorflow 2 and EncoderMap": [[17, "changes-between-tensorflow-1-and-tensorflow-2-and-encodermap"]], "Tensorflow 2": [[17, "tensorflow-2"]], "Tensorflow 2 in Tensorflow 1 compatibility mode": [[17, "tensorflow-2-in-tensorflow-1-compatibility-mode"]], "Encodermap": [[18, "encodermap"]], "Test and Coverage Reports": [[18, "test-and-coverage-reports"]], "Citations DOI1 DOI2": [[18, "citations-doi1-doi2"]], "EncoderMap": [[19, "encodermap"], [20, "encodermap"]], "Neural Network model building and learning": [[20, "neural-network-model-building-and-learning"]], "Autoencoder": [[20, "autoencoder"]], "AngleDihedralCartesianEncoderMap": [[20, "angledihedralcartesianencodermap"]], "Featurization": [[21, "featurization"], [22, "featurization"]], "Features": [[21, "module-encodermap.loading.features"]], "API reference": [[22, "api-reference"]], "Working with MD data": [[22, "working-with-md-data"]], "Neural network model building and training": [[22, "neural-network-model-building-and-training"]], "Parameters": [[22, "parameters"], [26, "parameters"]], "Lower-level modules": [[22, "lower-level-modules"]], "Models": [[22, "models"], [25, "models"]], "Layers": [[22, "layers"], [23, "layers"]], "Loss functions": [[22, "loss-functions"], [24, "module-encodermap.loss_functions.loss_functions"]], "Complete API documentation": [[22, "complete-api-documentation"]], "Parameter Classes": [[26, "parameter-classes"]], "ADCParameters": [[26, "adcparameters"]], "Trajectory classes": [[27, "trajectory-classes"]], "SingleTraj": [[27, "singletraj"]], "TrajEnsemble": [[27, "trajensemble"]], "Test Report": [[28, "test-report"]], "Cube Example - Basic Usage": [[29, "Cube-Example---Basic-Usage"]], "For Google colab only:": [[29, "For-Google-colab-only:"], [30, "For-Google-colab-only:"], [31, "For-Google-colab-only:"], [33, "For-Google-colab-only:"], [42, "For-Google-colab-only:"], [46, "For-Google-colab-only:"], [47, "For-Google-colab-only:"], [48, "For-Google-colab-only:"]], "Import Libraries": [[29, "Import-Libraries"]], "Load Data": [[29, "Load-Data"]], "Select Parameters": [[29, "Select-Parameters"]], "Get more info about parameters": [[29, "Get-more-info-about-parameters"]], "Performe Dimensionality Reduction": [[29, "Performe-Dimensionality-Reduction"]], "Generate High-Dimensional Data": [[29, "Generate-High-Dimensional-Data"]], "Conclusion": [[29, "Conclusion"], [31, "Conclusion"], [42, "Conclusion"], [46, "Conclusion"], [47, "Conclusion"]], "Working with trajectory ensembles": [[30, "Working-with-trajectory-ensembles"]], "Primer": [[30, "Primer"], [31, "Primer"], [33, "Primer"], [42, "Primer"], [46, "Primer"], [47, "Primer"], [48, "Primer"]], "Collective Variables": [[30, "Collective-Variables"]], "Example CVs": [[30, "Example-CVs"]], "Sharing Trajectory files": [[30, "Sharing-Trajectory-files"]], "Classes for Trajectory Ensembles": [[30, "Classes-for-Trajectory-Ensembles"]], "The new SingleTraj class": [[30, "The-new-SingleTraj-class"]], "Initialize.": [[30, "Initialize."]], "On demand loading": [[30, "On-demand-loading"]], "Take a look with nglview": [[30, "Take-a-look-with-nglview"]], "Class attributes": [[30, "Class-attributes"]], "Duplication of mdtraj": [[30, "Duplication-of-mdtraj"]], "Indexing": [[30, "Indexing"]], "Advanced slicing": [[30, "Advanced-slicing"]], "Advanced slicing with HDF5": [[30, "Advanced-slicing-with-HDF5"]], "Loading CVs": [[30, "Loading-CVs"]], "From numpy": [[30, "From-numpy"]], "Slicing with CVs.": [[30, "Slicing-with-CVs."]], "Loading from files": [[30, "Loading-from-files"], [30, "id1"]], "Loading with PyEMMA featurizer": [[30, "Loading-with-PyEMMA-featurizer"], [30, "id2"]], "Loading with Encodermap Features": [[30, "Loading-with-Encodermap-Features"], [30, "id3"]], "Wrtiting custom features No 1": [[30, "Wrtiting-custom-features-No-1"], [30, "id4"]], "Writing custom features No 2": [[30, "Writing-custom-features-No-2"], [30, "id5"]], "Saving trajectory and CVs into one file": [[30, "Saving-trajectory-and-CVs-into-one-file"], [30, "id6"]], "Asp7 Example - Advanced Usage": [[31, "Asp7-Example---Advanced-Usage"]], "Visualize Learning with TensorBoard": [[31, "Visualize-Learning-with-TensorBoard"]], "Running tensorboard on Google colab": [[31, "Running-tensorboard-on-Google-colab"]], "Running tensorboard locally": [[31, "Running-tensorboard-locally"]], "Save and Load": [[31, "Save-and-Load"]], "Generate Molecular Conformations": [[31, "Generate-Molecular-Conformations"]], "Training with different topologies": [[32, "Training-with-different-topologies"]], "Install encodermap on Google colab": [[32, "Install-encodermap-on-Google-colab"]], "Imports": [[32, "Imports"]], "Load the trajectories": [[32, "Load-the-trajectories"]], "Create the AngleDihedralCartesianEncoderMap": [[32, "Create-the-AngleDihedralCartesianEncoderMap"]], "Plot the result": [[32, "Plot-the-result"]], "Create a new trajectory": [[32, "Create-a-new-trajectory"]], "Your Data": [[33, "Your-Data"]], "Load Libraries": [[33, "Load-Libraries"]], "Load Your Data": [[33, "Load-Your-Data"]], "Set Parameters": [[33, "Set-Parameters"]], "Run the Dimensionality Reduction": [[33, "Run-the-Dimensionality-Reduction"]], "Plot the Results": [[33, "Plot-the-Results"]], "Code examples": [[34, "code-examples"]], "Cube example": [[35, "cube-example"]], "Cube example distance analysis": [[36, "cube-example-distance-analysis"]], "Learn how to Customize EncoderMap": [[37, "learn-how-to-customize-encodermap"]], "Dihedral to cartesian diubi": [[38, "dihedral-to-cartesian-diubi"]], "Dihedral to cartesian diubi analysis": [[39, "dihedral-to-cartesian-diubi-analysis"]], "User Guide": [[40, "user-guide"]], "Intermediate notebooks": [[41, "intermediate-notebooks"]], "Learning Rate Scheduler": [[42, "Learning-Rate-Scheduler"]], "Log the current learning rate to Tensorboard": [[42, "Log-the-current-learning-rate-to-Tensorboard"]], "Write a learning rate scheduler.": [[42, "Write-a-learning-rate-scheduler."]], "Learn how EncoderMap handles MD data and trajectory ensembles": [[43, "learn-how-encodermap-handles-md-data-and-trajectory-ensembles"]], "Starter notebooks": [[44, "starter-notebooks"]], "Trp cage": [[45, "trp-cage"]], "Logging Custom Images": [[46, "Logging-Custom-Images"]], "Logging via a custom function.": [[46, "Logging-via-a-custom-function."]], "Matplotlib implementation": [[46, "Matplotlib-implementation"]], "Provide this function to EncoderMap": [[46, "Provide-this-function-to-EncoderMap"]], "Train EncoderMap with our new function.": [[46, "Train-EncoderMap-with-our-new-function."]], "Output": [[46, "Output"], [46, "id1"], [47, "Output"]], "Writing custom callbacks": [[46, "Writing-custom-callbacks"]], "Matplotlib": [[46, "Matplotlib"]], "Subclassing a keras callback": [[46, "Subclassing-a-keras-callback"]], "Adding the callback to EncoderMap": [[46, "Adding-the-callback-to-EncoderMap"]], "Writing Custom Loss Functions": [[47, "Writing-Custom-Loss-Functions"]], "Adding a unit circle loss": [[47, "Adding-a-unit-circle-loss"]], "Build a loss function from that:": [[47, "Build-a-loss-function-from-that:"]], "Include the loss function in EncoderMap": [[47, "Include-the-loss-function-in-EncoderMap"]], "Train": [[47, "Train"]], "Logging Custom Scalars": [[48, "Logging-Custom-Scalars"]], "Subclassing a model and adding tf.summary": [[48, "Subclassing-a-model-and-adding-tf.summary"]], "Getting input data": [[48, "Getting-input-data"]], "Setting parameters": [[48, "Setting-parameters"]], "Subclassing the SequentialModel": [[48, "Subclassing-the-SequentialModel"]], "Changing what happens in a training step": [[48, "Changing-what-happens-in-a-training-step"]], "Running EncoderMap with the new model": [[48, "Running-EncoderMap-with-the-new-model"]], "Second way: Writing custom metrics.": [[48, "Second-way:-Writing-custom-metrics."]], "Changelog": [[49, "changelog"]], "2021-02-01": [[49, "id2"]], "Version 3.0.0 (2021-01-25)": [[49, "version-3-0-0-2021-01-25"]]}, "indexentries": {"adcparameters (class in encodermap)": [[2, "encodermap.ADCParameters"]], "angledihedralcartesianencodermap (class in encodermap)": [[2, "encodermap.AngleDihedralCartesianEncoderMap"]], "autoencoder (class in encodermap)": [[2, "encodermap.Autoencoder"]], "encodermap (class in encodermap)": [[2, "encodermap.EncoderMap"]], "encodermapbasecallback (class in encodermap)": [[2, "encodermap.EncoderMapBaseCallback"]], "featurizer (class in encodermap)": [[2, "encodermap.Featurizer"]], "interactiveplotting (class in encodermap)": [[2, "encodermap.InteractivePlotting"]], "moldata (class in encodermap)": [[2, "encodermap.MolData"]], "parameters (class in encodermap)": [[2, "encodermap.Parameters"]], "repository (class in encodermap)": [[2, "encodermap.Repository"]], "__init__() (encodermap.adcparameters method)": [[2, "encodermap.ADCParameters.__init__"]], "__init__() (encodermap.angledihedralcartesianencodermap method)": [[2, "encodermap.AngleDihedralCartesianEncoderMap.__init__"]], "__init__() (encodermap.autoencoder method)": [[2, "encodermap.Autoencoder.__init__"]], "__init__() (encodermap.encodermapbasecallback method)": [[2, "encodermap.EncoderMapBaseCallback.__init__"]], "__init__() (encodermap.interactiveplotting method)": [[2, "encodermap.InteractivePlotting.__init__"]], "__init__() (encodermap.moldata method)": [[2, "encodermap.MolData.__init__"]], "__init__() (encodermap.parameters method)": [[2, "encodermap.Parameters.__init__"]], "__init__() (encodermap.repository method)": [[2, "encodermap.Repository.__init__"]], "_get_connection() (encodermap.repository method)": [[2, "encodermap.Repository._get_connection"]], "_optional_import() (in module encodermap._optional_imports)": [[2, "encodermap._optional_imports._optional_import"]], "_setup_callbacks() (encodermap.angledihedralcartesianencodermap method)": [[2, "encodermap.AngleDihedralCartesianEncoderMap._setup_callbacks"]], "_setup_callbacks() (encodermap.autoencoder method)": [[2, "encodermap.Autoencoder._setup_callbacks"]], "_split_proj_filetype() (encodermap.repository static method)": [[2, "encodermap.Repository._split_proj_filetype"]], "accept() (encodermap.interactiveplotting method)": [[2, "encodermap.InteractivePlotting.accept"]], "activation_functions (encodermap.adcparameters attribute)": [[2, "encodermap.ADCParameters.activation_functions"]], "activation_functions (encodermap.parameters attribute)": [[2, "encodermap.Parameters.activation_functions"], [2, "id16"]], "add_images_to_tensorboard() (encodermap.autoencoder method)": [[2, "encodermap.Autoencoder.add_images_to_tensorboard"], [2, "id0"]], "analysis_path (encodermap.parameters attribute)": [[2, "encodermap.Parameters.analysis_path"]], "angle_cost_reference (encodermap.adcparameters attribute)": [[2, "encodermap.ADCParameters.angle_cost_reference"]], "angle_cost_scale (encodermap.adcparameters attribute)": [[2, "encodermap.ADCParameters.angle_cost_scale"]], "angle_cost_variant (encodermap.adcparameters attribute)": [[2, "encodermap.ADCParameters.angle_cost_variant"]], "auto_cost_scale (encodermap.parameters attribute)": [[2, "encodermap.Parameters.auto_cost_scale"]], "auto_cost_variant (encodermap.parameters attribute)": [[2, "encodermap.Parameters.auto_cost_variant"]], "ax (encodermap.interactiveplotting attribute)": [[2, "encodermap.InteractivePlotting.ax"]], "batch_size (encodermap.parameters attribute)": [[2, "encodermap.Parameters.batch_size"]], "batched (encodermap.parameters attribute)": [[2, "encodermap.Parameters.batched"]], "bezier() (encodermap.interactiveplotting method)": [[2, "encodermap.InteractivePlotting.bezier"]], "callbacks (encodermap.autoencoder attribute)": [[2, "encodermap.Autoencoder.callbacks"]], "cartesian_cost_reference (encodermap.adcparameters attribute)": [[2, "encodermap.ADCParameters.cartesian_cost_reference"]], "cartesian_cost_scale (encodermap.adcparameters attribute)": [[2, "encodermap.ADCParameters.cartesian_cost_scale"]], "cartesian_cost_scale_soft_start (encodermap.adcparameters attribute)": [[2, "encodermap.ADCParameters.cartesian_cost_scale_soft_start"]], "cartesian_cost_variant (encodermap.adcparameters attribute)": [[2, "encodermap.ADCParameters.cartesian_cost_variant"]], "cartesian_dist_sig_parameters (encodermap.adcparameters attribute)": [[2, "encodermap.ADCParameters.cartesian_dist_sig_parameters"]], "cartesian_distance_cost_scale (encodermap.adcparameters attribute)": [[2, "encodermap.ADCParameters.cartesian_distance_cost_scale"]], "cartesian_pwd_start (encodermap.adcparameters attribute)": [[2, "encodermap.ADCParameters.cartesian_pwd_start"]], "cartesian_pwd_step (encodermap.adcparameters attribute)": [[2, "encodermap.ADCParameters.cartesian_pwd_step"]], "cartesian_pwd_stop (encodermap.adcparameters attribute)": [[2, "encodermap.ADCParameters.cartesian_pwd_stop"]], "catalogue (encodermap.repository property)": [[2, "encodermap.Repository.catalogue"]], "center_cost_scale (encodermap.parameters attribute)": [[2, "encodermap.Parameters.center_cost_scale"]], "checkpoint_step (encodermap.parameters attribute)": [[2, "encodermap.Parameters.checkpoint_step"]], "close() (encodermap.autoencoder method)": [[2, "encodermap.Autoencoder.close"]], "cluster_zoomed (encodermap.interactiveplotting property)": [[2, "encodermap.InteractivePlotting.cluster_zoomed"]], "current_path (encodermap.repository attribute)": [[2, "encodermap.Repository.current_path"]], "data (encodermap.repository attribute)": [[2, "encodermap.Repository.data"]], "dataset (encodermap.autoencoder attribute)": [[2, "encodermap.Autoencoder.dataset"]], "datasets (encodermap.repository property)": [[2, "encodermap.Repository.datasets"]], "decode() (encodermap.autoencoder method)": [[2, "encodermap.Autoencoder.decode"], [2, "id7"]], "decoder (encodermap.autoencoder attribute)": [[2, "encodermap.Autoencoder.decoder"]], "decoder (encodermap.autoencoder property)": [[2, "id8"]], "defaults (encodermap.adcparameters attribute)": [[2, "encodermap.ADCParameters.defaults"]], "defaults (encodermap.parameters attribute)": [[2, "encodermap.Parameters.defaults"], [2, "id17"]], "defaults_description() (encodermap.adcparameters class method)": [[2, "encodermap.ADCParameters.defaults_description"]], "defaults_description() (encodermap.parameters class method)": [[2, "encodermap.Parameters.defaults_description"]], "dihedral_cost_reference (encodermap.adcparameters attribute)": [[2, "encodermap.ADCParameters.dihedral_cost_reference"]], "dihedral_cost_scale (encodermap.adcparameters attribute)": [[2, "encodermap.ADCParameters.dihedral_cost_scale"]], "dihedral_cost_variant (encodermap.adcparameters attribute)": [[2, "encodermap.ADCParameters.dihedral_cost_variant"]], "dist_sig_parameters (encodermap.parameters attribute)": [[2, "encodermap.Parameters.dist_sig_parameters"]], "distance_cost_scale (encodermap.parameters attribute)": [[2, "encodermap.Parameters.distance_cost_scale"]], "ellipse() (encodermap.interactiveplotting method)": [[2, "encodermap.InteractivePlotting.ellipse"]], "encode() (encodermap.angledihedralcartesianencodermap method)": [[2, "encodermap.AngleDihedralCartesianEncoderMap.encode"]], "encode() (encodermap.autoencoder method)": [[2, "encodermap.Autoencoder.encode"], [2, "id9"]], "encoder (encodermap.autoencoder attribute)": [[2, "encodermap.Autoencoder.encoder"]], "encoder (encodermap.autoencoder property)": [[2, "id10"]], "encodermap": [[2, "module-encodermap"]], "encodermap._optional_imports": [[2, "module-encodermap._optional_imports"]], "encodermap._typing": [[2, "module-encodermap._typing"]], "encodermap._version": [[2, "module-encodermap._version"]], "fetch() (encodermap.repository method)": [[2, "encodermap.Repository.fetch"]], "fig (encodermap.interactiveplotting attribute)": [[2, "encodermap.InteractivePlotting.fig"]], "files (encodermap.repository attribute)": [[2, "encodermap.Repository.files"]], "files_dict (encodermap.repository attribute)": [[2, "encodermap.Repository.files_dict"]], "from_checkpoint() (encodermap.angledihedralcartesianencodermap class method)": [[2, "encodermap.AngleDihedralCartesianEncoderMap.from_checkpoint"]], "from_checkpoint() (encodermap.autoencoder class method)": [[2, "id11"]], "from_checkpoint() (encodermap.autoencoder method)": [[2, "encodermap.Autoencoder.from_checkpoint"]], "from_checkpoint() (encodermap.encodermap class method)": [[2, "encodermap.EncoderMap.from_checkpoint"]], "function() (in module encodermap)": [[2, "encodermap.function"]], "generate() (encodermap.angledihedralcartesianencodermap method)": [[2, "encodermap.AngleDihedralCartesianEncoderMap.generate"]], "generate() (encodermap.autoencoder method)": [[2, "encodermap.Autoencoder.generate"], [2, "id12"]], "get_sizes() (encodermap.repository method)": [[2, "encodermap.Repository.get_sizes"]], "get_train_data_from_trajs() (encodermap.angledihedralcartesianencodermap static method)": [[2, "encodermap.AngleDihedralCartesianEncoderMap.get_train_data_from_trajs"]], "gpu_memory_fraction (encodermap.parameters attribute)": [[2, "encodermap.Parameters.gpu_memory_fraction"]], "id (encodermap.parameters attribute)": [[2, "encodermap.Parameters.id"]], "l2_reg_constant (encodermap.parameters attribute)": [[2, "encodermap.Parameters.l2_reg_constant"]], "lasso() (encodermap.interactiveplotting method)": [[2, "encodermap.InteractivePlotting.lasso"]], "learning_rate (encodermap.parameters attribute)": [[2, "encodermap.Parameters.learning_rate"]], "load() (in module encodermap)": [[2, "encodermap.load"]], "load_project() (encodermap.repository method)": [[2, "encodermap.Repository.load_project"]], "lookup() (encodermap.repository method)": [[2, "encodermap.Repository.lookup"]], "loss (encodermap.angledihedralcartesianencodermap property)": [[2, "encodermap.AngleDihedralCartesianEncoderMap.loss"]], "loss (encodermap.autoencoder property)": [[2, "encodermap.Autoencoder.loss"]], "loss (encodermap.encodermap property)": [[2, "encodermap.EncoderMap.loss"]], "loss (encodermap.parameters attribute)": [[2, "encodermap.Parameters.loss"]], "main_path (encodermap.parameters attribute)": [[2, "encodermap.Parameters.main_path"]], "maintainer (encodermap.repository attribute)": [[2, "encodermap.Repository.maintainer"]], "menu (encodermap.interactiveplotting attribute)": [[2, "encodermap.InteractivePlotting.menu"]], "menu_ax (encodermap.interactiveplotting attribute)": [[2, "encodermap.InteractivePlotting.menu_ax"]], "metrics (encodermap.autoencoder attribute)": [[2, "encodermap.Autoencoder.metrics"]], "mode (encodermap.interactiveplotting attribute)": [[2, "encodermap.InteractivePlotting.mode"]], "mode (encodermap.interactiveplotting property)": [[2, "id15"]], "model (encodermap.autoencoder property)": [[2, "encodermap.Autoencoder.model"]], "model_api (encodermap.parameters attribute)": [[2, "encodermap.Parameters.model_api"]], "module": [[2, "module-encodermap"], [2, "module-encodermap._optional_imports"], [2, "module-encodermap._typing"], [2, "module-encodermap._version"], [3, "module-encodermap.autoencoder"], [3, "module-encodermap.autoencoder.autoencoder"], [4, "module-encodermap.callbacks"], [4, "module-encodermap.callbacks.callbacks"], [4, "module-encodermap.callbacks.metrics"], [6, "module-encodermap.encodermap_tf1"], [6, "module-encodermap.encodermap_tf1.angle_dihedral_cartesian_encodermap"], [6, "module-encodermap.encodermap_tf1.autoencoder"], [6, "module-encodermap.encodermap_tf1.backmapping"], [6, "module-encodermap.encodermap_tf1.encodermap"], [6, "module-encodermap.encodermap_tf1.misc"], [6, "module-encodermap.encodermap_tf1.moldata"], [6, "module-encodermap.encodermap_tf1.parameters"], [6, "module-encodermap.encodermap_tf1.plot"], [7, "module-encodermap.loading"], [7, "module-encodermap.loading.features"], [7, "module-encodermap.loading.featurizer"], [7, "module-encodermap.loading.pipeline"], [7, "module-encodermap.loading.utils"], [8, "module-encodermap.loss_functions"], [8, "module-encodermap.loss_functions.loss_functions"], [9, "module-encodermap.misc"], [9, "module-encodermap.misc.backmapping"], [9, "module-encodermap.misc.clustering"], [9, "module-encodermap.misc.distances"], [9, "module-encodermap.misc.errors"], [9, "module-encodermap.misc.function_def"], [9, "module-encodermap.misc.misc"], [9, "module-encodermap.misc.saving_loading_models"], [9, "module-encodermap.misc.summaries"], [9, "module-encodermap.misc.transformations"], [9, "module-encodermap.misc.xarray"], [9, "module-encodermap.misc.xarray_save_wrong_hdf5"], [10, "module-encodermap.models"], [10, "module-encodermap.models.layers"], [10, "module-encodermap.models.models"], [11, "module-encodermap.moldata"], [11, "module-encodermap.moldata.moldata"], [12, "module-encodermap.parameters"], [12, "module-encodermap.parameters.parameters"], [13, "module-encodermap.plot"], [13, "module-encodermap.plot.interactive_plotting"], [13, "module-encodermap.plot.jinja_template"], [13, "module-encodermap.plot.plotting"], [13, "module-encodermap.plot.utils"], [14, "module-encodermap.trajinfo"], [14, "module-encodermap.trajinfo.hash_files"], [14, "module-encodermap.trajinfo.info_all"], [14, "module-encodermap.trajinfo.info_single"], [14, "module-encodermap.trajinfo.load_traj"], [14, "module-encodermap.trajinfo.repository"], [14, "module-encodermap.trajinfo.trajinfo_utils"], [21, "module-encodermap.loading.features"], [23, "module-encodermap.models.layers"], [24, "module-encodermap.loss_functions.loss_functions"], [25, "module-encodermap.models.models"]], "n_neurons (encodermap.adcparameters attribute)": [[2, "encodermap.ADCParameters.n_neurons"]], "n_neurons (encodermap.parameters attribute)": [[2, "encodermap.Parameters.n_neurons"], [2, "id18"]], "n_steps (encodermap.parameters attribute)": [[2, "encodermap.Parameters.n_steps"]], "on_checkpoint_step() (encodermap.encodermapbasecallback method)": [[2, "encodermap.EncoderMapBaseCallback.on_checkpoint_step"]], "on_click() (encodermap.interactiveplotting method)": [[2, "encodermap.InteractivePlotting.on_click"]], "on_click_menu() (encodermap.interactiveplotting method)": [[2, "encodermap.InteractivePlotting.on_click_menu"]], "on_click_tool() (encodermap.interactiveplotting method)": [[2, "encodermap.InteractivePlotting.on_click_tool"]], "on_enter_ax() (encodermap.interactiveplotting method)": [[2, "encodermap.InteractivePlotting.on_enter_ax"]], "on_leave_ax() (encodermap.interactiveplotting method)": [[2, "encodermap.InteractivePlotting.on_leave_ax"]], "on_summary_step() (encodermap.encodermapbasecallback method)": [[2, "encodermap.EncoderMapBaseCallback.on_summary_step"]], "on_train_batch_end() (encodermap.encodermapbasecallback method)": [[2, "encodermap.EncoderMapBaseCallback.on_train_batch_end"]], "optimizer (encodermap.autoencoder attribute)": [[2, "encodermap.Autoencoder.optimizer"]], "p (encodermap.autoencoder attribute)": [[2, "encodermap.Autoencoder.p"]], "path() (encodermap.interactiveplotting method)": [[2, "encodermap.InteractivePlotting.path"]], "periodicity (encodermap.parameters attribute)": [[2, "encodermap.Parameters.periodicity"]], "plot_network() (encodermap.autoencoder method)": [[2, "encodermap.Autoencoder.plot_network"], [2, "id13"]], "polygon() (encodermap.interactiveplotting method)": [[2, "encodermap.InteractivePlotting.polygon"]], "print_catalogue() (encodermap.repository method)": [[2, "encodermap.Repository.print_catalogue"]], "projects (encodermap.repository property)": [[2, "encodermap.Repository.projects"]], "pts (encodermap.interactiveplotting attribute)": [[2, "encodermap.InteractivePlotting.pts"]], "read_only (encodermap.autoencoder attribute)": [[2, "encodermap.Autoencoder.read_only"]], "rectangle() (encodermap.interactiveplotting method)": [[2, "encodermap.InteractivePlotting.rectangle"]], "render_move() (encodermap.interactiveplotting method)": [[2, "encodermap.InteractivePlotting.render_move"]], "reset() (encodermap.interactiveplotting method)": [[2, "encodermap.InteractivePlotting.reset"]], "save() (encodermap.angledihedralcartesianencodermap method)": [[2, "encodermap.AngleDihedralCartesianEncoderMap.save"]], "save() (encodermap.autoencoder method)": [[2, "encodermap.Autoencoder.save"]], "search() (encodermap.repository method)": [[2, "encodermap.Repository.search"]], "seed (encodermap.parameters attribute)": [[2, "encodermap.Parameters.seed"]], "set_points() (encodermap.interactiveplotting method)": [[2, "encodermap.InteractivePlotting.set_points"]], "side_dihedral_cost_reference (encodermap.adcparameters attribute)": [[2, "encodermap.ADCParameters.side_dihedral_cost_reference"]], "side_dihedral_cost_scale (encodermap.adcparameters attribute)": [[2, "encodermap.ADCParameters.side_dihedral_cost_scale"]], "side_dihedral_cost_variant (encodermap.adcparameters attribute)": [[2, "encodermap.ADCParameters.side_dihedral_cost_variant"]], "sort_key() (encodermap.moldata static method)": [[2, "encodermap.MolData.sort_key"]], "stack() (encodermap.repository method)": [[2, "encodermap.Repository.stack"]], "status_menu_ax (encodermap.interactiveplotting attribute)": [[2, "encodermap.InteractivePlotting.status_menu_ax"]], "statusmenu (encodermap.interactiveplotting attribute)": [[2, "encodermap.InteractivePlotting.statusmenu"]], "steps_counter (encodermap.encodermapbasecallback attribute)": [[2, "encodermap.EncoderMapBaseCallback.steps_counter"]], "summary_step (encodermap.parameters attribute)": [[2, "encodermap.Parameters.summary_step"]], "tensorboard (encodermap.parameters attribute)": [[2, "encodermap.Parameters.tensorboard"]], "tool (encodermap.interactiveplotting attribute)": [[2, "encodermap.InteractivePlotting.tool"]], "train() (encodermap.angledihedralcartesianencodermap method)": [[2, "encodermap.AngleDihedralCartesianEncoderMap.train"]], "train() (encodermap.autoencoder method)": [[2, "encodermap.Autoencoder.train"], [2, "id14"]], "train_data (encodermap.autoencoder attribute)": [[2, "encodermap.Autoencoder.train_data"]], "training (encodermap.parameters attribute)": [[2, "encodermap.Parameters.training"]], "trajs (encodermap.interactiveplotting attribute)": [[2, "encodermap.InteractivePlotting.trajs"]], "url (encodermap.repository attribute)": [[2, "encodermap.Repository.url"]], "use_backbone_angles (encodermap.adcparameters attribute)": [[2, "encodermap.ADCParameters.use_backbone_angles"]], "use_sidechains (encodermap.adcparameters attribute)": [[2, "encodermap.ADCParameters.use_sidechains"]], "write() (encodermap.interactiveplotting method)": [[2, "encodermap.InteractivePlotting.write"]], "write() (encodermap.moldata method)": [[2, "encodermap.MolData.write"]], "angledihedralcartesianencodermap (class in encodermap.autoencoder.autoencoder)": [[3, "encodermap.autoencoder.autoencoder.AngleDihedralCartesianEncoderMap"], [20, "encodermap.autoencoder.autoencoder.AngleDihedralCartesianEncoderMap"]], "autoencoder (class in encodermap.autoencoder.autoencoder)": [[3, "encodermap.autoencoder.autoencoder.Autoencoder"], [20, "encodermap.autoencoder.autoencoder.Autoencoder"]], "dihedralencodermap (class in encodermap.autoencoder.autoencoder)": [[3, "encodermap.autoencoder.autoencoder.DihedralEncoderMap"]], "encodermap (class in encodermap.autoencoder.autoencoder)": [[3, "encodermap.autoencoder.autoencoder.EncoderMap"], [20, "encodermap.autoencoder.autoencoder.EncoderMap"]], "__init__() (encodermap.autoencoder.autoencoder.angledihedralcartesianencodermap method)": [[3, "encodermap.autoencoder.autoencoder.AngleDihedralCartesianEncoderMap.__init__"], [20, "encodermap.autoencoder.autoencoder.AngleDihedralCartesianEncoderMap.__init__"]], "__init__() (encodermap.autoencoder.autoencoder.autoencoder method)": [[3, "encodermap.autoencoder.autoencoder.Autoencoder.__init__"], [20, "encodermap.autoencoder.autoencoder.Autoencoder.__init__"]], "_setup_callbacks() (encodermap.autoencoder.autoencoder.angledihedralcartesianencodermap method)": [[3, "encodermap.autoencoder.autoencoder.AngleDihedralCartesianEncoderMap._setup_callbacks"], [20, "encodermap.autoencoder.autoencoder.AngleDihedralCartesianEncoderMap._setup_callbacks"]], "_setup_callbacks() (encodermap.autoencoder.autoencoder.autoencoder method)": [[3, "encodermap.autoencoder.autoencoder.Autoencoder._setup_callbacks"], [20, "encodermap.autoencoder.autoencoder.Autoencoder._setup_callbacks"]], "add_images_to_tensorboard() (encodermap.autoencoder.autoencoder.autoencoder method)": [[3, "encodermap.autoencoder.autoencoder.Autoencoder.add_images_to_tensorboard"], [3, "id0"], [20, "encodermap.autoencoder.autoencoder.Autoencoder.add_images_to_tensorboard"], [20, "id0"]], "callbacks (encodermap.autoencoder.autoencoder.autoencoder attribute)": [[3, "encodermap.autoencoder.autoencoder.Autoencoder.callbacks"], [20, "encodermap.autoencoder.autoencoder.Autoencoder.callbacks"]], "close() (encodermap.autoencoder.autoencoder.autoencoder method)": [[3, "encodermap.autoencoder.autoencoder.Autoencoder.close"], [20, "encodermap.autoencoder.autoencoder.Autoencoder.close"]], "dataset (encodermap.autoencoder.autoencoder.autoencoder attribute)": [[3, "encodermap.autoencoder.autoencoder.Autoencoder.dataset"], [20, "encodermap.autoencoder.autoencoder.Autoencoder.dataset"]], "decode() (encodermap.autoencoder.autoencoder.autoencoder method)": [[3, "encodermap.autoencoder.autoencoder.Autoencoder.decode"], [3, "id7"], [20, "encodermap.autoencoder.autoencoder.Autoencoder.decode"], [20, "id1"]], "decoder (encodermap.autoencoder.autoencoder.autoencoder attribute)": [[3, "encodermap.autoencoder.autoencoder.Autoencoder.decoder"], [20, "encodermap.autoencoder.autoencoder.Autoencoder.decoder"]], "decoder (encodermap.autoencoder.autoencoder.autoencoder property)": [[3, "id8"], [20, "id2"]], "encode() (encodermap.autoencoder.autoencoder.angledihedralcartesianencodermap method)": [[3, "encodermap.autoencoder.autoencoder.AngleDihedralCartesianEncoderMap.encode"], [20, "encodermap.autoencoder.autoencoder.AngleDihedralCartesianEncoderMap.encode"]], "encode() (encodermap.autoencoder.autoencoder.autoencoder method)": [[3, "encodermap.autoencoder.autoencoder.Autoencoder.encode"], [3, "id9"], [20, "encodermap.autoencoder.autoencoder.Autoencoder.encode"], [20, "id3"]], "encoder (encodermap.autoencoder.autoencoder.autoencoder attribute)": [[3, "encodermap.autoencoder.autoencoder.Autoencoder.encoder"], [20, "encodermap.autoencoder.autoencoder.Autoencoder.encoder"]], "encoder (encodermap.autoencoder.autoencoder.autoencoder property)": [[3, "id10"], [20, "id4"]], "encodermap.autoencoder": [[3, "module-encodermap.autoencoder"]], "encodermap.autoencoder.autoencoder": [[3, "module-encodermap.autoencoder.autoencoder"]], "from_checkpoint() (encodermap.autoencoder.autoencoder.angledihedralcartesianencodermap class method)": [[3, "encodermap.autoencoder.autoencoder.AngleDihedralCartesianEncoderMap.from_checkpoint"], [20, "encodermap.autoencoder.autoencoder.AngleDihedralCartesianEncoderMap.from_checkpoint"]], "from_checkpoint() (encodermap.autoencoder.autoencoder.autoencoder class method)": [[3, "id11"], [20, "id5"]], "from_checkpoint() (encodermap.autoencoder.autoencoder.autoencoder method)": [[3, "encodermap.autoencoder.autoencoder.Autoencoder.from_checkpoint"], [20, "encodermap.autoencoder.autoencoder.Autoencoder.from_checkpoint"]], "from_checkpoint() (encodermap.autoencoder.autoencoder.encodermap class method)": [[3, "encodermap.autoencoder.autoencoder.EncoderMap.from_checkpoint"], [20, "encodermap.autoencoder.autoencoder.EncoderMap.from_checkpoint"]], "generate() (encodermap.autoencoder.autoencoder.angledihedralcartesianencodermap method)": [[3, "encodermap.autoencoder.autoencoder.AngleDihedralCartesianEncoderMap.generate"], [20, "encodermap.autoencoder.autoencoder.AngleDihedralCartesianEncoderMap.generate"]], "generate() (encodermap.autoencoder.autoencoder.autoencoder method)": [[3, "encodermap.autoencoder.autoencoder.Autoencoder.generate"], [3, "id12"], [20, "encodermap.autoencoder.autoencoder.Autoencoder.generate"], [20, "id6"]], "generate() (encodermap.autoencoder.autoencoder.dihedralencodermap method)": [[3, "encodermap.autoencoder.autoencoder.DihedralEncoderMap.generate"]], "get_train_data_from_trajs() (encodermap.autoencoder.autoencoder.angledihedralcartesianencodermap static method)": [[3, "encodermap.autoencoder.autoencoder.AngleDihedralCartesianEncoderMap.get_train_data_from_trajs"], [20, "encodermap.autoencoder.autoencoder.AngleDihedralCartesianEncoderMap.get_train_data_from_trajs"]], "loss (encodermap.autoencoder.autoencoder.angledihedralcartesianencodermap property)": [[3, "encodermap.autoencoder.autoencoder.AngleDihedralCartesianEncoderMap.loss"], [20, "encodermap.autoencoder.autoencoder.AngleDihedralCartesianEncoderMap.loss"]], "loss (encodermap.autoencoder.autoencoder.autoencoder property)": [[3, "encodermap.autoencoder.autoencoder.Autoencoder.loss"], [20, "encodermap.autoencoder.autoencoder.Autoencoder.loss"]], "loss (encodermap.autoencoder.autoencoder.encodermap property)": [[3, "encodermap.autoencoder.autoencoder.EncoderMap.loss"], [20, "encodermap.autoencoder.autoencoder.EncoderMap.loss"]], "metrics (encodermap.autoencoder.autoencoder.autoencoder attribute)": [[3, "encodermap.autoencoder.autoencoder.Autoencoder.metrics"], [20, "encodermap.autoencoder.autoencoder.Autoencoder.metrics"]], "model (encodermap.autoencoder.autoencoder.autoencoder property)": [[3, "encodermap.autoencoder.autoencoder.Autoencoder.model"], [20, "encodermap.autoencoder.autoencoder.Autoencoder.model"]], "optimizer (encodermap.autoencoder.autoencoder.autoencoder attribute)": [[3, "encodermap.autoencoder.autoencoder.Autoencoder.optimizer"], [20, "encodermap.autoencoder.autoencoder.Autoencoder.optimizer"]], "p (encodermap.autoencoder.autoencoder.autoencoder attribute)": [[3, "encodermap.autoencoder.autoencoder.Autoencoder.p"], [20, "encodermap.autoencoder.autoencoder.Autoencoder.p"]], "plot_network() (encodermap.autoencoder.autoencoder.autoencoder method)": [[3, "encodermap.autoencoder.autoencoder.Autoencoder.plot_network"], [3, "id13"], [20, "encodermap.autoencoder.autoencoder.Autoencoder.plot_network"], [20, "id7"]], "read_only (encodermap.autoencoder.autoencoder.autoencoder attribute)": [[3, "encodermap.autoencoder.autoencoder.Autoencoder.read_only"], [20, "encodermap.autoencoder.autoencoder.Autoencoder.read_only"]], "save() (encodermap.autoencoder.autoencoder.angledihedralcartesianencodermap method)": [[3, "encodermap.autoencoder.autoencoder.AngleDihedralCartesianEncoderMap.save"], [20, "encodermap.autoencoder.autoencoder.AngleDihedralCartesianEncoderMap.save"]], "save() (encodermap.autoencoder.autoencoder.autoencoder method)": [[3, "encodermap.autoencoder.autoencoder.Autoencoder.save"], [20, "encodermap.autoencoder.autoencoder.Autoencoder.save"]], "train() (encodermap.autoencoder.autoencoder.angledihedralcartesianencodermap method)": [[3, "encodermap.autoencoder.autoencoder.AngleDihedralCartesianEncoderMap.train"], [20, "encodermap.autoencoder.autoencoder.AngleDihedralCartesianEncoderMap.train"]], "train() (encodermap.autoencoder.autoencoder.autoencoder method)": [[3, "encodermap.autoencoder.autoencoder.Autoencoder.train"], [3, "id14"], [20, "encodermap.autoencoder.autoencoder.Autoencoder.train"], [20, "id8"]], "train_data (encodermap.autoencoder.autoencoder.autoencoder attribute)": [[3, "encodermap.autoencoder.autoencoder.Autoencoder.train_data"], [20, "encodermap.autoencoder.autoencoder.Autoencoder.train_data"]], "checkpointsaver (class in encodermap.callbacks.callbacks)": [[4, "encodermap.callbacks.callbacks.CheckpointSaver"]], "earlystop (class in encodermap.callbacks.callbacks)": [[4, "encodermap.callbacks.callbacks.EarlyStop"]], "increasecartesiancost (class in encodermap.callbacks.callbacks)": [[4, "encodermap.callbacks.callbacks.IncreaseCartesianCost"]], "progressbar (class in encodermap.callbacks.callbacks)": [[4, "encodermap.callbacks.callbacks.ProgressBar"]], "tensorboardwritebool (class in encodermap.callbacks.callbacks)": [[4, "encodermap.callbacks.callbacks.TensorboardWriteBool"]], "__init__() (encodermap.callbacks.callbacks.earlystop method)": [[4, "encodermap.callbacks.callbacks.EarlyStop.__init__"]], "__init__() (encodermap.callbacks.callbacks.increasecartesiancost method)": [[4, "encodermap.callbacks.callbacks.IncreaseCartesianCost.__init__"]], "__init__() (encodermap.callbacks.callbacks.tensorboardwritebool method)": [[4, "encodermap.callbacks.callbacks.TensorboardWriteBool.__init__"]], "calc_current_cartesian_cost_scale() (encodermap.callbacks.callbacks.increasecartesiancost method)": [[4, "encodermap.callbacks.callbacks.IncreaseCartesianCost.calc_current_cartesian_cost_scale"]], "encodermap.callbacks": [[4, "module-encodermap.callbacks"]], "encodermap.callbacks.callbacks": [[4, "module-encodermap.callbacks.callbacks"]], "encodermap.callbacks.metrics": [[4, "module-encodermap.callbacks.metrics"]], "on_checkpoint_step() (encodermap.callbacks.callbacks.checkpointsaver method)": [[4, "encodermap.callbacks.callbacks.CheckpointSaver.on_checkpoint_step"]], "on_summary_step() (encodermap.callbacks.callbacks.progressbar method)": [[4, "encodermap.callbacks.callbacks.ProgressBar.on_summary_step"]], "on_train_batch_end() (encodermap.callbacks.callbacks.earlystop method)": [[4, "encodermap.callbacks.callbacks.EarlyStop.on_train_batch_end"]], "on_train_batch_end() (encodermap.callbacks.callbacks.increasecartesiancost method)": [[4, "encodermap.callbacks.callbacks.IncreaseCartesianCost.on_train_batch_end"]], "on_train_batch_end() (encodermap.callbacks.callbacks.progressbar method)": [[4, "encodermap.callbacks.callbacks.ProgressBar.on_train_batch_end"]], "on_train_batch_end() (encodermap.callbacks.callbacks.tensorboardwritebool method)": [[4, "encodermap.callbacks.callbacks.TensorboardWriteBool.on_train_batch_end"]], "on_train_begin() (encodermap.callbacks.callbacks.earlystop method)": [[4, "encodermap.callbacks.callbacks.EarlyStop.on_train_begin"]], "on_train_begin() (encodermap.callbacks.callbacks.progressbar method)": [[4, "encodermap.callbacks.callbacks.ProgressBar.on_train_begin"]], "on_train_end() (encodermap.callbacks.callbacks.earlystop method)": [[4, "encodermap.callbacks.callbacks.EarlyStop.on_train_end"]], "on_train_end() (encodermap.callbacks.callbacks.progressbar method)": [[4, "encodermap.callbacks.callbacks.ProgressBar.on_train_end"]], "adcparameters (class in encodermap.encodermap_tf1.parameters)": [[6, "encodermap.encodermap_tf1.parameters.ADCParameters"]], "angledihedralcartesianencodermap (class in encodermap.encodermap_tf1.angle_dihedral_cartesian_encodermap)": [[6, "encodermap.encodermap_tf1.angle_dihedral_cartesian_encodermap.AngleDihedralCartesianEncoderMap"]], "angledihedralcartesianencodermapdummy (class in encodermap.encodermap_tf1.angle_dihedral_cartesian_encodermap)": [[6, "encodermap.encodermap_tf1.angle_dihedral_cartesian_encodermap.AngleDihedralCartesianEncoderMapDummy"]], "angles (class in encodermap.encodermap_tf1.moldata)": [[6, "encodermap.encodermap_tf1.moldata.Angles"]], "autoencoder (class in encodermap.encodermap_tf1.autoencoder)": [[6, "encodermap.encodermap_tf1.autoencoder.Autoencoder"]], "encodermap (class in encodermap.encodermap_tf1.encodermap)": [[6, "encodermap.encodermap_tf1.encodermap.EncoderMap"]], "manualpath (class in encodermap.encodermap_tf1.plot)": [[6, "encodermap.encodermap_tf1.plot.ManualPath"]], "moldata (class in encodermap.encodermap_tf1.moldata)": [[6, "encodermap.encodermap_tf1.moldata.MolData"]], "parameters (class in encodermap.encodermap_tf1.parameters)": [[6, "encodermap.encodermap_tf1.parameters.Parameters"]], "parametersframework (class in encodermap.encodermap_tf1.parameters)": [[6, "encodermap.encodermap_tf1.parameters.ParametersFramework"]], "pathgeneratecartesians (class in encodermap.encodermap_tf1.plot)": [[6, "encodermap.encodermap_tf1.plot.PathGenerateCartesians"]], "pathgeneratedihedrals (class in encodermap.encodermap_tf1.plot)": [[6, "encodermap.encodermap_tf1.plot.PathGenerateDihedrals"]], "pathselect (class in encodermap.encodermap_tf1.plot)": [[6, "encodermap.encodermap_tf1.plot.PathSelect"]], "positions (class in encodermap.encodermap_tf1.moldata)": [[6, "encodermap.encodermap_tf1.moldata.Positions"]], "__init__() (encodermap.encodermap_tf1.angle_dihedral_cartesian_encodermap.angledihedralcartesianencodermap method)": [[6, "encodermap.encodermap_tf1.angle_dihedral_cartesian_encodermap.AngleDihedralCartesianEncoderMap.__init__"]], "__init__() (encodermap.encodermap_tf1.autoencoder.autoencoder method)": [[6, "encodermap.encodermap_tf1.autoencoder.Autoencoder.__init__"]], "__init__() (encodermap.encodermap_tf1.moldata.moldata method)": [[6, "encodermap.encodermap_tf1.moldata.MolData.__init__"]], "__init__() (encodermap.encodermap_tf1.plot.manualpath method)": [[6, "encodermap.encodermap_tf1.plot.ManualPath.__init__"]], "__init__() (encodermap.encodermap_tf1.plot.pathgeneratecartesians method)": [[6, "encodermap.encodermap_tf1.plot.PathGenerateCartesians.__init__"]], "__init__() (encodermap.encodermap_tf1.plot.pathgeneratedihedrals method)": [[6, "encodermap.encodermap_tf1.plot.PathGenerateDihedrals.__init__"]], "__init__() (encodermap.encodermap_tf1.plot.pathselect method)": [[6, "encodermap.encodermap_tf1.plot.PathSelect.__init__"]], "_add_point_interp() (encodermap.encodermap_tf1.plot.manualpath method)": [[6, "encodermap.encodermap_tf1.plot.ManualPath._add_point_interp"]], "_angle_cost() (encodermap.encodermap_tf1.angle_dihedral_cartesian_encodermap.angledihedralcartesianencodermap method)": [[6, "encodermap.encodermap_tf1.angle_dihedral_cartesian_encodermap.AngleDihedralCartesianEncoderMap._angle_cost"]], "_auto_cost() (encodermap.encodermap_tf1.autoencoder.autoencoder method)": [[6, "encodermap.encodermap_tf1.autoencoder.Autoencoder._auto_cost"]], "_cartesian_cost() (encodermap.encodermap_tf1.angle_dihedral_cartesian_encodermap.angledihedralcartesianencodermap method)": [[6, "encodermap.encodermap_tf1.angle_dihedral_cartesian_encodermap.AngleDihedralCartesianEncoderMap._cartesian_cost"]], "_cartesian_distance_cost() (encodermap.encodermap_tf1.angle_dihedral_cartesian_encodermap.angledihedralcartesianencodermap method)": [[6, "encodermap.encodermap_tf1.angle_dihedral_cartesian_encodermap.AngleDihedralCartesianEncoderMap._cartesian_distance_cost"]], "_center_cost() (encodermap.encodermap_tf1.autoencoder.autoencoder method)": [[6, "encodermap.encodermap_tf1.autoencoder.Autoencoder._center_cost"]], "_conclude() (encodermap.encodermap_tf1.moldata.angles method)": [[6, "encodermap.encodermap_tf1.moldata.Angles._conclude"]], "_conclude() (encodermap.encodermap_tf1.moldata.positions method)": [[6, "encodermap.encodermap_tf1.moldata.Positions._conclude"]], "_dihedral_cost() (encodermap.encodermap_tf1.angle_dihedral_cartesian_encodermap.angledihedralcartesianencodermap method)": [[6, "encodermap.encodermap_tf1.angle_dihedral_cartesian_encodermap.AngleDihedralCartesianEncoderMap._dihedral_cost"]], "_distance_cost() (encodermap.encodermap_tf1.angle_dihedral_cartesian_encodermap.angledihedralcartesianencodermap method)": [[6, "encodermap.encodermap_tf1.angle_dihedral_cartesian_encodermap.AngleDihedralCartesianEncoderMap._distance_cost"]], "_distance_cost() (encodermap.encodermap_tf1.encodermap.encodermap method)": [[6, "encodermap.encodermap_tf1.encodermap.EncoderMap._distance_cost"]], "_encode() (encodermap.encodermap_tf1.autoencoder.autoencoder method)": [[6, "encodermap.encodermap_tf1.autoencoder.Autoencoder._encode"]], "_expand_universe() (in module encodermap.encodermap_tf1.backmapping)": [[6, "encodermap.encodermap_tf1.backmapping._expand_universe"]], "_free_draw() (encodermap.encodermap_tf1.plot.manualpath method)": [[6, "encodermap.encodermap_tf1.plot.ManualPath._free_draw"]], "_free_draw_callback() (encodermap.encodermap_tf1.plot.manualpath method)": [[6, "encodermap.encodermap_tf1.plot.ManualPath._free_draw_callback"]], "_generate() (encodermap.encodermap_tf1.autoencoder.autoencoder method)": [[6, "encodermap.encodermap_tf1.autoencoder.Autoencoder._generate"]], "_grab_background() (encodermap.encodermap_tf1.plot.manualpath method)": [[6, "encodermap.encodermap_tf1.plot.ManualPath._grab_background"]], "_interpolate() (encodermap.encodermap_tf1.plot.manualpath method)": [[6, "encodermap.encodermap_tf1.plot.ManualPath._interpolate"]], "_l2_reg_cost() (encodermap.encodermap_tf1.autoencoder.autoencoder method)": [[6, "encodermap.encodermap_tf1.autoencoder.Autoencoder._l2_reg_cost"]], "_on_click() (encodermap.encodermap_tf1.plot.manualpath method)": [[6, "encodermap.encodermap_tf1.plot.ManualPath._on_click"]], "_on_key() (encodermap.encodermap_tf1.plot.manualpath method)": [[6, "encodermap.encodermap_tf1.plot.ManualPath._on_key"]], "_prepare() (encodermap.encodermap_tf1.moldata.angles method)": [[6, "encodermap.encodermap_tf1.moldata.Angles._prepare"]], "_prepare() (encodermap.encodermap_tf1.moldata.positions method)": [[6, "encodermap.encodermap_tf1.moldata.Positions._prepare"]], "_prepare_data() (encodermap.encodermap_tf1.angle_dihedral_cartesian_encodermap.angledihedralcartesianencodermap method)": [[6, "encodermap.encodermap_tf1.angle_dihedral_cartesian_encodermap.AngleDihedralCartesianEncoderMap._prepare_data"]], "_prepare_data() (encodermap.encodermap_tf1.autoencoder.autoencoder method)": [[6, "encodermap.encodermap_tf1.autoencoder.Autoencoder._prepare_data"]], "_random_batch() (encodermap.encodermap_tf1.autoencoder.autoencoder method)": [[6, "encodermap.encodermap_tf1.autoencoder.Autoencoder._random_batch"]], "_reset_lines() (encodermap.encodermap_tf1.plot.manualpath method)": [[6, "encodermap.encodermap_tf1.plot.ManualPath._reset_lines"]], "_set_dihedral() (in module encodermap.encodermap_tf1.backmapping)": [[6, "encodermap.encodermap_tf1.backmapping._set_dihedral"]], "_setattrs() (encodermap.encodermap_tf1.parameters.parametersframework method)": [[6, "encodermap.encodermap_tf1.parameters.ParametersFramework._setattrs"]], "_setup_cost() (encodermap.encodermap_tf1.angle_dihedral_cartesian_encodermap.angledihedralcartesianencodermap method)": [[6, "encodermap.encodermap_tf1.angle_dihedral_cartesian_encodermap.AngleDihedralCartesianEncoderMap._setup_cost"]], "_setup_cost() (encodermap.encodermap_tf1.autoencoder.autoencoder method)": [[6, "encodermap.encodermap_tf1.autoencoder.Autoencoder._setup_cost"]], "_setup_cost() (encodermap.encodermap_tf1.encodermap.encodermap method)": [[6, "encodermap.encodermap_tf1.encodermap.EncoderMap._setup_cost"]], "_setup_data_iterator() (encodermap.encodermap_tf1.autoencoder.autoencoder method)": [[6, "encodermap.encodermap_tf1.autoencoder.Autoencoder._setup_data_iterator"]], "_setup_network() (encodermap.encodermap_tf1.angle_dihedral_cartesian_encodermap.angledihedralcartesianencodermap method)": [[6, "encodermap.encodermap_tf1.angle_dihedral_cartesian_encodermap.AngleDihedralCartesianEncoderMap._setup_network"]], "_setup_network() (encodermap.encodermap_tf1.angle_dihedral_cartesian_encodermap.angledihedralcartesianencodermapdummy method)": [[6, "encodermap.encodermap_tf1.angle_dihedral_cartesian_encodermap.AngleDihedralCartesianEncoderMapDummy._setup_network"]], "_setup_network() (encodermap.encodermap_tf1.autoencoder.autoencoder method)": [[6, "encodermap.encodermap_tf1.autoencoder.Autoencoder._setup_network"]], "_single_frame() (encodermap.encodermap_tf1.moldata.angles method)": [[6, "encodermap.encodermap_tf1.moldata.Angles._single_frame"]], "_single_frame() (encodermap.encodermap_tf1.moldata.positions method)": [[6, "encodermap.encodermap_tf1.moldata.Positions._single_frame"]], "_step() (encodermap.encodermap_tf1.autoencoder.autoencoder method)": [[6, "encodermap.encodermap_tf1.autoencoder.Autoencoder._step"]], "_update_interp() (encodermap.encodermap_tf1.plot.manualpath method)": [[6, "encodermap.encodermap_tf1.plot.ManualPath._update_interp"]], "_update_lines() (encodermap.encodermap_tf1.plot.manualpath method)": [[6, "encodermap.encodermap_tf1.plot.ManualPath._update_lines"]], "add_layer_summaries() (in module encodermap.encodermap_tf1.misc)": [[6, "encodermap.encodermap_tf1.misc.add_layer_summaries"]], "chain_in_plane() (in module encodermap.encodermap_tf1.backmapping)": [[6, "encodermap.encodermap_tf1.backmapping.chain_in_plane"]], "close() (encodermap.encodermap_tf1.autoencoder.autoencoder method)": [[6, "encodermap.encodermap_tf1.autoencoder.Autoencoder.close"]], "create_dir() (in module encodermap.encodermap_tf1.misc)": [[6, "encodermap.encodermap_tf1.misc.create_dir"]], "dihedral_backmapping() (in module encodermap.encodermap_tf1.backmapping)": [[6, "encodermap.encodermap_tf1.backmapping.dihedral_backmapping"]], "dihedral_to_cartesian_tf_one_way() (in module encodermap.encodermap_tf1.backmapping)": [[6, "encodermap.encodermap_tf1.backmapping.dihedral_to_cartesian_tf_one_way"]], "dihedrals_to_cartesian_tf() (in module encodermap.encodermap_tf1.backmapping)": [[6, "encodermap.encodermap_tf1.backmapping.dihedrals_to_cartesian_tf"]], "dihedrals_to_cartesian_tf_old() (in module encodermap.encodermap_tf1.backmapping)": [[6, "encodermap.encodermap_tf1.backmapping.dihedrals_to_cartesian_tf_old"]], "distance_cost() (in module encodermap.encodermap_tf1.misc)": [[6, "encodermap.encodermap_tf1.misc.distance_cost"]], "distance_histogram() (in module encodermap.encodermap_tf1.plot)": [[6, "encodermap.encodermap_tf1.plot.distance_histogram"]], "encode() (encodermap.encodermap_tf1.autoencoder.autoencoder method)": [[6, "encodermap.encodermap_tf1.autoencoder.Autoencoder.encode"]], "encodermap.encodermap_tf1": [[6, "module-encodermap.encodermap_tf1"]], "encodermap.encodermap_tf1.angle_dihedral_cartesian_encodermap": [[6, "module-encodermap.encodermap_tf1.angle_dihedral_cartesian_encodermap"]], "encodermap.encodermap_tf1.autoencoder": [[6, "module-encodermap.encodermap_tf1.autoencoder"]], "encodermap.encodermap_tf1.backmapping": [[6, "module-encodermap.encodermap_tf1.backmapping"]], "encodermap.encodermap_tf1.encodermap": [[6, "module-encodermap.encodermap_tf1.encodermap"]], "encodermap.encodermap_tf1.misc": [[6, "module-encodermap.encodermap_tf1.misc"]], "encodermap.encodermap_tf1.moldata": [[6, "module-encodermap.encodermap_tf1.moldata"]], "encodermap.encodermap_tf1.parameters": [[6, "module-encodermap.encodermap_tf1.parameters"]], "encodermap.encodermap_tf1.plot": [[6, "module-encodermap.encodermap_tf1.plot"]], "generate() (encodermap.encodermap_tf1.angle_dihedral_cartesian_encodermap.angledihedralcartesianencodermap method)": [[6, "encodermap.encodermap_tf1.angle_dihedral_cartesian_encodermap.AngleDihedralCartesianEncoderMap.generate"]], "generate() (encodermap.encodermap_tf1.autoencoder.autoencoder method)": [[6, "encodermap.encodermap_tf1.autoencoder.Autoencoder.generate"]], "guess_amide_h() (in module encodermap.encodermap_tf1.backmapping)": [[6, "encodermap.encodermap_tf1.backmapping.guess_amide_H"]], "guess_amide_o() (in module encodermap.encodermap_tf1.backmapping)": [[6, "encodermap.encodermap_tf1.backmapping.guess_amide_O"]], "guess_sp2_atom() (in module encodermap.encodermap_tf1.backmapping)": [[6, "encodermap.encodermap_tf1.backmapping.guess_sp2_atom"]], "load() (encodermap.encodermap_tf1.parameters.parametersframework class method)": [[6, "encodermap.encodermap_tf1.parameters.ParametersFramework.load"]], "merge_cartesians() (in module encodermap.encodermap_tf1.backmapping)": [[6, "encodermap.encodermap_tf1.backmapping.merge_cartesians"]], "pairwise_dist() (in module encodermap.encodermap_tf1.misc)": [[6, "encodermap.encodermap_tf1.misc.pairwise_dist"]], "pairwise_dist_periodic() (in module encodermap.encodermap_tf1.misc)": [[6, "encodermap.encodermap_tf1.misc.pairwise_dist_periodic"]], "periodic_distance() (in module encodermap.encodermap_tf1.misc)": [[6, "encodermap.encodermap_tf1.misc.periodic_distance"]], "periodic_distance_np() (in module encodermap.encodermap_tf1.misc)": [[6, "encodermap.encodermap_tf1.misc.periodic_distance_np"]], "potential_energy() (in module encodermap.encodermap_tf1.misc)": [[6, "encodermap.encodermap_tf1.misc.potential_energy"]], "profile() (encodermap.encodermap_tf1.autoencoder.autoencoder method)": [[6, "encodermap.encodermap_tf1.autoencoder.Autoencoder.profile"]], "random_on_cube_edges() (in module encodermap.encodermap_tf1.misc)": [[6, "encodermap.encodermap_tf1.misc.random_on_cube_edges"]], "read_from_log() (in module encodermap.encodermap_tf1.misc)": [[6, "encodermap.encodermap_tf1.misc.read_from_log"]], "rotation_matrix() (in module encodermap.encodermap_tf1.misc)": [[6, "encodermap.encodermap_tf1.misc.rotation_matrix"]], "run_path() (in module encodermap.encodermap_tf1.misc)": [[6, "encodermap.encodermap_tf1.misc.run_path"]], "save() (encodermap.encodermap_tf1.parameters.parametersframework method)": [[6, "encodermap.encodermap_tf1.parameters.ParametersFramework.save"]], "search_and_replace() (in module encodermap.encodermap_tf1.misc)": [[6, "encodermap.encodermap_tf1.misc.search_and_replace"]], "sigmoid() (in module encodermap.encodermap_tf1.misc)": [[6, "encodermap.encodermap_tf1.misc.sigmoid"]], "sort_key() (encodermap.encodermap_tf1.moldata.moldata static method)": [[6, "encodermap.encodermap_tf1.moldata.MolData.sort_key"]], "straight_tetrahedral_chain() (in module encodermap.encodermap_tf1.backmapping)": [[6, "encodermap.encodermap_tf1.backmapping.straight_tetrahedral_chain"]], "train() (encodermap.encodermap_tf1.autoencoder.autoencoder method)": [[6, "encodermap.encodermap_tf1.autoencoder.Autoencoder.train"]], "use_points() (encodermap.encodermap_tf1.plot.manualpath method)": [[6, "encodermap.encodermap_tf1.plot.ManualPath.use_points"]], "use_points() (encodermap.encodermap_tf1.plot.pathgeneratecartesians method)": [[6, "encodermap.encodermap_tf1.plot.PathGenerateCartesians.use_points"]], "use_points() (encodermap.encodermap_tf1.plot.pathgeneratedihedrals method)": [[6, "encodermap.encodermap_tf1.plot.PathGenerateDihedrals.use_points"]], "use_points() (encodermap.encodermap_tf1.plot.pathselect method)": [[6, "encodermap.encodermap_tf1.plot.PathSelect.use_points"]], "variable_summaries() (in module encodermap.encodermap_tf1.misc)": [[6, "encodermap.encodermap_tf1.misc.variable_summaries"]], "write() (encodermap.encodermap_tf1.moldata.moldata method)": [[6, "encodermap.encodermap_tf1.moldata.MolData.write"]], "allbonddistances (class in encodermap.loading.features)": [[7, "encodermap.loading.features.AllBondDistances"], [21, "encodermap.loading.features.AllBondDistances"]], "allcartesians (class in encodermap.loading.features)": [[7, "encodermap.loading.features.AllCartesians"], [21, "encodermap.loading.features.AllCartesians"]], "centralangles (class in encodermap.loading.features)": [[7, "encodermap.loading.features.CentralAngles"], [21, "encodermap.loading.features.CentralAngles"]], "centralbonddistances (class in encodermap.loading.features)": [[7, "encodermap.loading.features.CentralBondDistances"], [21, "encodermap.loading.features.CentralBondDistances"]], "centralcartesians (class in encodermap.loading.features)": [[7, "encodermap.loading.features.CentralCartesians"], [21, "encodermap.loading.features.CentralCartesians"]], "centraldihedrals (class in encodermap.loading.features)": [[7, "encodermap.loading.features.CentralDihedrals"], [21, "encodermap.loading.features.CentralDihedrals"]], "featurizer (class in encodermap.loading.featurizer)": [[7, "encodermap.loading.featurizer.Featurizer"]], "sidechainangles (class in encodermap.loading.features)": [[7, "encodermap.loading.features.SideChainAngles"], [21, "encodermap.loading.features.SideChainAngles"]], "sidechainbonddistances (class in encodermap.loading.features)": [[7, "encodermap.loading.features.SideChainBondDistances"], [21, "encodermap.loading.features.SideChainBondDistances"]], "sidechaincartesians (class in encodermap.loading.features)": [[7, "encodermap.loading.features.SideChainCartesians"], [21, "encodermap.loading.features.SideChainCartesians"]], "sidechaindihedrals (class in encodermap.loading.features)": [[7, "encodermap.loading.features.SideChainDihedrals"], [21, "encodermap.loading.features.SideChainDihedrals"]], "__init__() (encodermap.loading.features.allcartesians method)": [[7, "encodermap.loading.features.AllCartesians.__init__"], [21, "encodermap.loading.features.AllCartesians.__init__"]], "__init__() (encodermap.loading.features.centraldihedrals method)": [[7, "encodermap.loading.features.CentralDihedrals.__init__"], [21, "encodermap.loading.features.CentralDihedrals.__init__"]], "__serialize_fields (encodermap.loading.features.allbonddistances attribute)": [[7, "encodermap.loading.features.AllBondDistances.__serialize_fields"], [21, "encodermap.loading.features.AllBondDistances.__serialize_fields"]], "__serialize_fields (encodermap.loading.features.allcartesians attribute)": [[7, "encodermap.loading.features.AllCartesians.__serialize_fields"], [21, "encodermap.loading.features.AllCartesians.__serialize_fields"]], "__serialize_fields (encodermap.loading.features.centralangles attribute)": [[7, "encodermap.loading.features.CentralAngles.__serialize_fields"], [21, "encodermap.loading.features.CentralAngles.__serialize_fields"]], "__serialize_fields (encodermap.loading.features.centralbonddistances attribute)": [[7, "encodermap.loading.features.CentralBondDistances.__serialize_fields"], [21, "encodermap.loading.features.CentralBondDistances.__serialize_fields"]], "__serialize_fields (encodermap.loading.features.centralcartesians attribute)": [[7, "encodermap.loading.features.CentralCartesians.__serialize_fields"], [21, "encodermap.loading.features.CentralCartesians.__serialize_fields"]], "__serialize_fields (encodermap.loading.features.centraldihedrals attribute)": [[7, "encodermap.loading.features.CentralDihedrals.__serialize_fields"], [21, "encodermap.loading.features.CentralDihedrals.__serialize_fields"]], "__serialize_fields (encodermap.loading.features.sidechainangles attribute)": [[7, "encodermap.loading.features.SideChainAngles.__serialize_fields"], [21, "encodermap.loading.features.SideChainAngles.__serialize_fields"]], "__serialize_fields (encodermap.loading.features.sidechainbonddistances attribute)": [[7, "encodermap.loading.features.SideChainBondDistances.__serialize_fields"], [21, "encodermap.loading.features.SideChainBondDistances.__serialize_fields"]], "__serialize_fields (encodermap.loading.features.sidechaincartesians attribute)": [[7, "encodermap.loading.features.SideChainCartesians.__serialize_fields"], [21, "encodermap.loading.features.SideChainCartesians.__serialize_fields"]], "__serialize_fields (encodermap.loading.features.sidechaindihedrals attribute)": [[7, "encodermap.loading.features.SideChainDihedrals.__serialize_fields"], [21, "encodermap.loading.features.SideChainDihedrals.__serialize_fields"]], "__serialize_version (encodermap.loading.features.allbonddistances attribute)": [[7, "encodermap.loading.features.AllBondDistances.__serialize_version"], [21, "encodermap.loading.features.AllBondDistances.__serialize_version"]], "__serialize_version (encodermap.loading.features.allcartesians attribute)": [[7, "encodermap.loading.features.AllCartesians.__serialize_version"], [21, "encodermap.loading.features.AllCartesians.__serialize_version"]], "__serialize_version (encodermap.loading.features.centralangles attribute)": [[7, "encodermap.loading.features.CentralAngles.__serialize_version"], [21, "encodermap.loading.features.CentralAngles.__serialize_version"]], "__serialize_version (encodermap.loading.features.centralbonddistances attribute)": [[7, "encodermap.loading.features.CentralBondDistances.__serialize_version"], [21, "encodermap.loading.features.CentralBondDistances.__serialize_version"]], "__serialize_version (encodermap.loading.features.centralcartesians attribute)": [[7, "encodermap.loading.features.CentralCartesians.__serialize_version"], [21, "encodermap.loading.features.CentralCartesians.__serialize_version"]], "__serialize_version (encodermap.loading.features.centraldihedrals attribute)": [[7, "encodermap.loading.features.CentralDihedrals.__serialize_version"], [21, "encodermap.loading.features.CentralDihedrals.__serialize_version"]], "__serialize_version (encodermap.loading.features.sidechainangles attribute)": [[7, "encodermap.loading.features.SideChainAngles.__serialize_version"], [21, "encodermap.loading.features.SideChainAngles.__serialize_version"]], "__serialize_version (encodermap.loading.features.sidechainbonddistances attribute)": [[7, "encodermap.loading.features.SideChainBondDistances.__serialize_version"], [21, "encodermap.loading.features.SideChainBondDistances.__serialize_version"]], "__serialize_version (encodermap.loading.features.sidechaincartesians attribute)": [[7, "encodermap.loading.features.SideChainCartesians.__serialize_version"], [21, "encodermap.loading.features.SideChainCartesians.__serialize_version"]], "__serialize_version (encodermap.loading.features.sidechaindihedrals attribute)": [[7, "encodermap.loading.features.SideChainDihedrals.__serialize_version"], [21, "encodermap.loading.features.SideChainDihedrals.__serialize_version"]], "_validate_uri() (in module encodermap.loading.featurizer)": [[7, "encodermap.loading.featurizer._validate_uri"]], "dask_transform (encodermap.loading.features.centraldihedrals property)": [[7, "encodermap.loading.features.CentralDihedrals.dask_transform"], [21, "encodermap.loading.features.CentralDihedrals.dask_transform"]], "describe() (encodermap.loading.features.allbonddistances method)": [[7, "encodermap.loading.features.AllBondDistances.describe"], [21, "encodermap.loading.features.AllBondDistances.describe"]], "describe() (encodermap.loading.features.allcartesians method)": [[7, "encodermap.loading.features.AllCartesians.describe"], [21, "encodermap.loading.features.AllCartesians.describe"]], "describe() (encodermap.loading.features.centralangles method)": [[7, "encodermap.loading.features.CentralAngles.describe"], [21, "encodermap.loading.features.CentralAngles.describe"]], "describe() (encodermap.loading.features.centralcartesians method)": [[7, "encodermap.loading.features.CentralCartesians.describe"], [21, "encodermap.loading.features.CentralCartesians.describe"]], "describe() (encodermap.loading.features.centraldihedrals method)": [[7, "encodermap.loading.features.CentralDihedrals.describe"], [21, "encodermap.loading.features.CentralDihedrals.describe"]], "describe() (encodermap.loading.features.sidechainangles method)": [[7, "encodermap.loading.features.SideChainAngles.describe"], [21, "encodermap.loading.features.SideChainAngles.describe"]], "describe() (encodermap.loading.features.sidechaindihedrals method)": [[7, "encodermap.loading.features.SideChainDihedrals.describe"], [21, "encodermap.loading.features.SideChainDihedrals.describe"]], "encodermap.loading": [[7, "module-encodermap.loading"]], "encodermap.loading.features": [[7, "module-encodermap.loading.features"], [21, "module-encodermap.loading.features"]], "encodermap.loading.featurizer": [[7, "module-encodermap.loading.featurizer"]], "encodermap.loading.pipeline": [[7, "module-encodermap.loading.pipeline"]], "encodermap.loading.utils": [[7, "module-encodermap.loading.utils"]], "generic_describe() (encodermap.loading.features.allbonddistances method)": [[7, "encodermap.loading.features.AllBondDistances.generic_describe"], [21, "encodermap.loading.features.AllBondDistances.generic_describe"]], "generic_describe() (encodermap.loading.features.centralangles method)": [[7, "encodermap.loading.features.CentralAngles.generic_describe"], [21, "encodermap.loading.features.CentralAngles.generic_describe"]], "generic_describe() (encodermap.loading.features.centralcartesians method)": [[7, "encodermap.loading.features.CentralCartesians.generic_describe"], [21, "encodermap.loading.features.CentralCartesians.generic_describe"]], "generic_describe() (encodermap.loading.features.centraldihedrals method)": [[7, "encodermap.loading.features.CentralDihedrals.generic_describe"], [21, "encodermap.loading.features.CentralDihedrals.generic_describe"]], "generic_describe() (encodermap.loading.features.sidechaindihedrals method)": [[7, "encodermap.loading.features.SideChainDihedrals.generic_describe"], [21, "encodermap.loading.features.SideChainDihedrals.generic_describe"]], "indexes (encodermap.loading.features.allbonddistances attribute)": [[7, "encodermap.loading.features.AllBondDistances.indexes"], [21, "encodermap.loading.features.AllBondDistances.indexes"]], "indexes (encodermap.loading.features.allbonddistances property)": [[7, "id0"], [21, "id0"]], "indexes (encodermap.loading.features.allcartesians attribute)": [[7, "encodermap.loading.features.AllCartesians.indexes"], [21, "encodermap.loading.features.AllCartesians.indexes"]], "indexes (encodermap.loading.features.centralangles attribute)": [[7, "encodermap.loading.features.CentralAngles.indexes"], [21, "encodermap.loading.features.CentralAngles.indexes"]], "indexes (encodermap.loading.features.centralangles property)": [[7, "id4"], [21, "id5"]], "indexes (encodermap.loading.features.centralbonddistances attribute)": [[7, "encodermap.loading.features.CentralBondDistances.indexes"], [21, "encodermap.loading.features.CentralBondDistances.indexes"]], "indexes (encodermap.loading.features.centralbonddistances property)": [[7, "id6"], [21, "id7"]], "indexes (encodermap.loading.features.centralcartesians attribute)": [[7, "encodermap.loading.features.CentralCartesians.indexes"], [21, "encodermap.loading.features.CentralCartesians.indexes"]], "indexes (encodermap.loading.features.centraldihedrals attribute)": [[7, "encodermap.loading.features.CentralDihedrals.indexes"], [21, "encodermap.loading.features.CentralDihedrals.indexes"]], "indexes (encodermap.loading.features.centraldihedrals property)": [[7, "id9"], [21, "id10"]], "indexes (encodermap.loading.features.sidechainangles attribute)": [[7, "encodermap.loading.features.SideChainAngles.indexes"], [21, "encodermap.loading.features.SideChainAngles.indexes"]], "indexes (encodermap.loading.features.sidechainangles property)": [[7, "id10"], [21, "id11"]], "indexes (encodermap.loading.features.sidechainbonddistances attribute)": [[7, "encodermap.loading.features.SideChainBondDistances.indexes"], [21, "encodermap.loading.features.SideChainBondDistances.indexes"]], "indexes (encodermap.loading.features.sidechainbonddistances property)": [[7, "id12"], [21, "id13"]], "indexes (encodermap.loading.features.sidechaincartesians attribute)": [[7, "encodermap.loading.features.SideChainCartesians.indexes"], [21, "encodermap.loading.features.SideChainCartesians.indexes"]], "indexes (encodermap.loading.features.sidechaindihedrals attribute)": [[7, "encodermap.loading.features.SideChainDihedrals.indexes"], [21, "encodermap.loading.features.SideChainDihedrals.indexes"]], "indexes (encodermap.loading.features.sidechaindihedrals property)": [[7, "id15"], [21, "id16"]], "name (encodermap.loading.features.allbonddistances property)": [[7, "encodermap.loading.features.AllBondDistances.name"], [21, "encodermap.loading.features.AllBondDistances.name"]], "name (encodermap.loading.features.allcartesians property)": [[7, "encodermap.loading.features.AllCartesians.name"], [21, "encodermap.loading.features.AllCartesians.name"]], "name (encodermap.loading.features.centralangles property)": [[7, "encodermap.loading.features.CentralAngles.name"], [21, "encodermap.loading.features.CentralAngles.name"]], "name (encodermap.loading.features.centralbonddistances property)": [[7, "encodermap.loading.features.CentralBondDistances.name"], [21, "encodermap.loading.features.CentralBondDistances.name"]], "name (encodermap.loading.features.centralcartesians property)": [[7, "encodermap.loading.features.CentralCartesians.name"], [21, "encodermap.loading.features.CentralCartesians.name"]], "name (encodermap.loading.features.centraldihedrals property)": [[7, "encodermap.loading.features.CentralDihedrals.name"], [21, "encodermap.loading.features.CentralDihedrals.name"]], "name (encodermap.loading.features.sidechainangles property)": [[7, "encodermap.loading.features.SideChainAngles.name"], [21, "encodermap.loading.features.SideChainAngles.name"]], "name (encodermap.loading.features.sidechainbonddistances property)": [[7, "encodermap.loading.features.SideChainBondDistances.name"], [21, "encodermap.loading.features.SideChainBondDistances.name"]], "name (encodermap.loading.features.sidechaincartesians property)": [[7, "encodermap.loading.features.SideChainCartesians.name"], [21, "encodermap.loading.features.SideChainCartesians.name"]], "name (encodermap.loading.features.sidechaindihedrals property)": [[7, "encodermap.loading.features.SideChainDihedrals.name"], [21, "encodermap.loading.features.SideChainDihedrals.name"]], "options (encodermap.loading.features.sidechaindihedrals attribute)": [[7, "encodermap.loading.features.SideChainDihedrals.options"], [7, "id16"], [21, "encodermap.loading.features.SideChainDihedrals.options"], [21, "id17"]], "prefix_label (encodermap.loading.features.allbonddistances attribute)": [[7, "encodermap.loading.features.AllBondDistances.prefix_label"], [7, "id2"], [21, "encodermap.loading.features.AllBondDistances.prefix_label"], [21, "id3"]], "prefix_label (encodermap.loading.features.allcartesians attribute)": [[7, "encodermap.loading.features.AllCartesians.prefix_label"], [7, "id3"], [21, "encodermap.loading.features.AllCartesians.prefix_label"], [21, "id4"]], "prefix_label (encodermap.loading.features.centralangles attribute)": [[7, "encodermap.loading.features.CentralAngles.prefix_label"], [7, "id5"], [21, "encodermap.loading.features.CentralAngles.prefix_label"], [21, "id6"]], "prefix_label (encodermap.loading.features.centralbonddistances attribute)": [[7, "encodermap.loading.features.CentralBondDistances.prefix_label"], [7, "id7"], [21, "encodermap.loading.features.CentralBondDistances.prefix_label"], [21, "id8"]], "prefix_label (encodermap.loading.features.centralcartesians attribute)": [[7, "encodermap.loading.features.CentralCartesians.prefix_label"], [7, "id8"], [21, "encodermap.loading.features.CentralCartesians.prefix_label"], [21, "id9"]], "prefix_label (encodermap.loading.features.sidechainangles attribute)": [[7, "encodermap.loading.features.SideChainAngles.prefix_label"], [7, "id11"], [21, "encodermap.loading.features.SideChainAngles.prefix_label"], [21, "id12"]], "prefix_label (encodermap.loading.features.sidechainbonddistances attribute)": [[7, "encodermap.loading.features.SideChainBondDistances.prefix_label"], [7, "id13"], [21, "encodermap.loading.features.SideChainBondDistances.prefix_label"], [21, "id14"]], "prefix_label (encodermap.loading.features.sidechaincartesians attribute)": [[7, "encodermap.loading.features.SideChainCartesians.prefix_label"], [7, "id14"], [21, "encodermap.loading.features.SideChainCartesians.prefix_label"], [21, "id15"]], "put_nan_back_in() (in module encodermap.loading.utils)": [[7, "encodermap.loading.utils.put_nan_back_in"]], "top (encodermap.loading.features.allbonddistances attribute)": [[7, "encodermap.loading.features.AllBondDistances.top"], [21, "encodermap.loading.features.AllBondDistances.top"]], "top (encodermap.loading.features.allcartesians attribute)": [[7, "encodermap.loading.features.AllCartesians.top"], [21, "encodermap.loading.features.AllCartesians.top"]], "top (encodermap.loading.features.centralangles attribute)": [[7, "encodermap.loading.features.CentralAngles.top"], [21, "encodermap.loading.features.CentralAngles.top"]], "top (encodermap.loading.features.centralbonddistances attribute)": [[7, "encodermap.loading.features.CentralBondDistances.top"], [21, "encodermap.loading.features.CentralBondDistances.top"]], "top (encodermap.loading.features.centralcartesians attribute)": [[7, "encodermap.loading.features.CentralCartesians.top"], [21, "encodermap.loading.features.CentralCartesians.top"]], "top (encodermap.loading.features.centraldihedrals attribute)": [[7, "encodermap.loading.features.CentralDihedrals.top"], [21, "encodermap.loading.features.CentralDihedrals.top"]], "top (encodermap.loading.features.sidechainangles attribute)": [[7, "encodermap.loading.features.SideChainAngles.top"], [21, "encodermap.loading.features.SideChainAngles.top"]], "top (encodermap.loading.features.sidechainbonddistances attribute)": [[7, "encodermap.loading.features.SideChainBondDistances.top"], [21, "encodermap.loading.features.SideChainBondDistances.top"]], "top (encodermap.loading.features.sidechaincartesians attribute)": [[7, "encodermap.loading.features.SideChainCartesians.top"], [21, "encodermap.loading.features.SideChainCartesians.top"]], "top (encodermap.loading.features.sidechaindihedrals attribute)": [[7, "encodermap.loading.features.SideChainDihedrals.top"], [21, "encodermap.loading.features.SideChainDihedrals.top"]], "_do_nothing() (in module encodermap.loss_functions.loss_functions)": [[8, "encodermap.loss_functions.loss_functions._do_nothing"], [24, "encodermap.loss_functions.loss_functions._do_nothing"]], "_summary_cost() (in module encodermap.loss_functions.loss_functions)": [[8, "encodermap.loss_functions.loss_functions._summary_cost"], [24, "encodermap.loss_functions.loss_functions._summary_cost"]], "angle_loss() (in module encodermap.loss_functions.loss_functions)": [[8, "encodermap.loss_functions.loss_functions.angle_loss"], [24, "encodermap.loss_functions.loss_functions.angle_loss"]], "auto_loss() (in module encodermap.loss_functions.loss_functions)": [[8, "encodermap.loss_functions.loss_functions.auto_loss"], [24, "encodermap.loss_functions.loss_functions.auto_loss"]], "cartesian_distance_loss() (in module encodermap.loss_functions.loss_functions)": [[8, "encodermap.loss_functions.loss_functions.cartesian_distance_loss"], [24, "encodermap.loss_functions.loss_functions.cartesian_distance_loss"]], "cartesian_loss() (in module encodermap.loss_functions.loss_functions)": [[8, "encodermap.loss_functions.loss_functions.cartesian_loss"], [24, "encodermap.loss_functions.loss_functions.cartesian_loss"]], "center_loss() (in module encodermap.loss_functions.loss_functions)": [[8, "encodermap.loss_functions.loss_functions.center_loss"], [24, "encodermap.loss_functions.loss_functions.center_loss"]], "dihedral_loss() (in module encodermap.loss_functions.loss_functions)": [[8, "encodermap.loss_functions.loss_functions.dihedral_loss"], [24, "encodermap.loss_functions.loss_functions.dihedral_loss"]], "distance_loss() (in module encodermap.loss_functions.loss_functions)": [[8, "encodermap.loss_functions.loss_functions.distance_loss"], [24, "encodermap.loss_functions.loss_functions.distance_loss"]], "encodermap.loss_functions": [[8, "module-encodermap.loss_functions"]], "encodermap.loss_functions.loss_functions": [[8, "module-encodermap.loss_functions.loss_functions"], [24, "module-encodermap.loss_functions.loss_functions"]], "loss_combinator() (in module encodermap.loss_functions.loss_functions)": [[8, "encodermap.loss_functions.loss_functions.loss_combinator"], [24, "encodermap.loss_functions.loss_functions.loss_combinator"]], "reconstruction_loss() (in module encodermap.loss_functions.loss_functions)": [[8, "encodermap.loss_functions.loss_functions.reconstruction_loss"], [24, "encodermap.loss_functions.loss_functions.reconstruction_loss"]], "regularization_loss() (in module encodermap.loss_functions.loss_functions)": [[8, "encodermap.loss_functions.loss_functions.regularization_loss"], [24, "encodermap.loss_functions.loss_functions.regularization_loss"]], "baderror": [[9, "encodermap.misc.errors.BadError"]], "_can_be_feature() (in module encodermap.misc.misc)": [[9, "encodermap.misc.misc._can_be_feature"]], "_datetime_windows_and_linux_compatible() (in module encodermap.misc.misc)": [[9, "encodermap.misc.misc._datetime_windows_and_linux_compatible"]], "_dihedral() (in module encodermap.misc.backmapping)": [[9, "encodermap.misc.backmapping._dihedral"]], "_displacement() (in module encodermap.misc.backmapping)": [[9, "encodermap.misc.backmapping._displacement"]], "_flatten_model() (in module encodermap.misc.misc)": [[9, "encodermap.misc.misc._flatten_model"]], "_gen_dummy_traj_single() (in module encodermap.misc.clustering)": [[9, "encodermap.misc.clustering._gen_dummy_traj_single"]], "_gen_hist() (in module encodermap.misc.summaries)": [[9, "encodermap.misc.summaries._gen_hist"]], "_gen_nan_image() (in module encodermap.misc.summaries)": [[9, "encodermap.misc.summaries._gen_nan_image"]], "_gen_scatter() (in module encodermap.misc.summaries)": [[9, "encodermap.misc.summaries._gen_scatter"]], "_get_far_and_near_networkx() (in module encodermap.misc.backmapping)": [[9, "encodermap.misc.backmapping._get_far_and_near_networkx"]], "_get_scheduler() (in module encodermap.misc.xarray_save_wrong_hdf5)": [[9, "encodermap.misc.xarray_save_wrong_hdf5._get_scheduler"]], "_import_module() (in module encodermap.misc.transformations)": [[9, "encodermap.misc.transformations._import_module"]], "_to_netcdf() (in module encodermap.misc.xarray_save_wrong_hdf5)": [[9, "encodermap.misc.xarray_save_wrong_hdf5._to_netcdf"]], "_validate_attrs() (in module encodermap.misc.xarray_save_wrong_hdf5)": [[9, "encodermap.misc.xarray_save_wrong_hdf5._validate_attrs"]], "_validate_dataset_names() (in module encodermap.misc.xarray_save_wrong_hdf5)": [[9, "encodermap.misc.xarray_save_wrong_hdf5._validate_dataset_names"]], "_validate_uri() (in module encodermap.misc.misc)": [[9, "encodermap.misc.misc._validate_uri"]], "_validate_uri() (in module encodermap.misc.xarray)": [[9, "encodermap.misc.xarray._validate_uri"]], "add_layer_summaries() (in module encodermap.misc.summaries)": [[9, "encodermap.misc.summaries.add_layer_summaries"]], "backbone_hydrogen_oxygen_crossproduct() (in module encodermap.misc.backmapping)": [[9, "encodermap.misc.backmapping.backbone_hydrogen_oxygen_crossproduct"]], "construct_xarray_from_numpy() (in module encodermap.misc.xarray)": [[9, "encodermap.misc.xarray.construct_xarray_from_numpy"]], "create_n_cube() (in module encodermap.misc.misc)": [[9, "encodermap.misc.misc.create_n_cube"]], "encodermap.misc": [[9, "module-encodermap.misc"]], "encodermap.misc.backmapping": [[9, "module-encodermap.misc.backmapping"]], "encodermap.misc.clustering": [[9, "module-encodermap.misc.clustering"]], "encodermap.misc.distances": [[9, "module-encodermap.misc.distances"]], "encodermap.misc.errors": [[9, "module-encodermap.misc.errors"]], "encodermap.misc.function_def": [[9, "module-encodermap.misc.function_def"]], "encodermap.misc.misc": [[9, "module-encodermap.misc.misc"]], "encodermap.misc.saving_loading_models": [[9, "module-encodermap.misc.saving_loading_models"]], "encodermap.misc.summaries": [[9, "module-encodermap.misc.summaries"]], "encodermap.misc.transformations": [[9, "module-encodermap.misc.transformations"]], "encodermap.misc.xarray": [[9, "module-encodermap.misc.xarray"]], "encodermap.misc.xarray_save_wrong_hdf5": [[9, "module-encodermap.misc.xarray_save_wrong_hdf5"]], "function() (in module encodermap.misc.function_def)": [[9, "encodermap.misc.function_def.function"]], "gen_dummy_traj() (in module encodermap.misc.clustering)": [[9, "encodermap.misc.clustering.gen_dummy_traj"]], "get_cluster_frames() (in module encodermap.misc.clustering)": [[9, "encodermap.misc.clustering.get_cluster_frames"]], "get_full_common_str_and_ref() (in module encodermap.misc.misc)": [[9, "encodermap.misc.misc.get_full_common_str_and_ref"]], "image_summary() (in module encodermap.misc.summaries)": [[9, "encodermap.misc.summaries.image_summary"]], "load_list_of_models() (in module encodermap.misc.saving_loading_models)": [[9, "encodermap.misc.saving_loading_models.load_list_of_models"]], "load_model() (in module encodermap.misc.saving_loading_models)": [[9, "encodermap.misc.saving_loading_models.load_model"]], "model_sort_key() (in module encodermap.misc.saving_loading_models)": [[9, "encodermap.misc.saving_loading_models.model_sort_key"]], "pairwise_dist() (in module encodermap.misc.distances)": [[9, "encodermap.misc.distances.pairwise_dist"]], "pairwise_dist_periodic() (in module encodermap.misc.distances)": [[9, "encodermap.misc.distances.pairwise_dist_periodic"]], "periodic_distance() (in module encodermap.misc.distances)": [[9, "encodermap.misc.distances.periodic_distance"]], "periodic_distance_np() (in module encodermap.misc.distances)": [[9, "encodermap.misc.distances.periodic_distance_np"]], "plot_model() (in module encodermap.misc.misc)": [[9, "encodermap.misc.misc.plot_model"]], "run_path() (in module encodermap.misc.misc)": [[9, "encodermap.misc.misc.run_path"]], "save_model() (in module encodermap.misc.saving_loading_models)": [[9, "encodermap.misc.saving_loading_models.save_model"]], "save_netcdf_alongside_mdtraj() (in module encodermap.misc.xarray_save_wrong_hdf5)": [[9, "encodermap.misc.xarray_save_wrong_hdf5.save_netcdf_alongside_mdtraj"]], "sigmoid() (in module encodermap.misc.distances)": [[9, "encodermap.misc.distances.sigmoid"]], "unpack_data_and_feature() (in module encodermap.misc.xarray)": [[9, "encodermap.misc.xarray.unpack_data_and_feature"]], "backmaplayer (class in encodermap.models.layers)": [[10, "encodermap.models.layers.BackMapLayer"], [23, "encodermap.models.layers.BackMapLayer"]], "meanangles (class in encodermap.models.layers)": [[10, "encodermap.models.layers.MeanAngles"], [23, "encodermap.models.layers.MeanAngles"]], "periodicinput (class in encodermap.models.layers)": [[10, "encodermap.models.layers.PeriodicInput"], [23, "encodermap.models.layers.PeriodicInput"]], "periodicoutput (class in encodermap.models.layers)": [[10, "encodermap.models.layers.PeriodicOutput"], [23, "encodermap.models.layers.PeriodicOutput"]], "sparse (class in encodermap.models.layers)": [[10, "encodermap.models.layers.Sparse"], [23, "encodermap.models.layers.Sparse"]], "__init__() (encodermap.models.layers.backmaplayer method)": [[10, "encodermap.models.layers.BackMapLayer.__init__"], [23, "encodermap.models.layers.BackMapLayer.__init__"]], "__init__() (encodermap.models.layers.meanangles method)": [[10, "encodermap.models.layers.MeanAngles.__init__"], [23, "encodermap.models.layers.MeanAngles.__init__"]], "__init__() (encodermap.models.layers.periodicinput method)": [[10, "encodermap.models.layers.PeriodicInput.__init__"], [23, "encodermap.models.layers.PeriodicInput.__init__"]], "__init__() (encodermap.models.layers.periodicoutput method)": [[10, "encodermap.models.layers.PeriodicOutput.__init__"], [23, "encodermap.models.layers.PeriodicOutput.__init__"]], "call() (encodermap.models.layers.backmaplayer method)": [[10, "encodermap.models.layers.BackMapLayer.call"], [23, "encodermap.models.layers.BackMapLayer.call"]], "call() (encodermap.models.layers.meanangles method)": [[10, "encodermap.models.layers.MeanAngles.call"], [23, "encodermap.models.layers.MeanAngles.call"]], "call() (encodermap.models.layers.periodicinput method)": [[10, "encodermap.models.layers.PeriodicInput.call"], [23, "encodermap.models.layers.PeriodicInput.call"]], "call() (encodermap.models.layers.periodicoutput method)": [[10, "encodermap.models.layers.PeriodicOutput.call"], [23, "encodermap.models.layers.PeriodicOutput.call"]], "call() (encodermap.models.layers.sparse method)": [[10, "encodermap.models.layers.Sparse.call"], [23, "encodermap.models.layers.Sparse.call"]], "encodermap.models": [[10, "module-encodermap.models"]], "encodermap.models.layers": [[10, "module-encodermap.models.layers"], [23, "module-encodermap.models.layers"]], "encodermap.models.models": [[10, "module-encodermap.models.models"], [25, "module-encodermap.models.models"]], "gen_functional_model() (in module encodermap.models.models)": [[10, "encodermap.models.models.gen_functional_model"], [25, "encodermap.models.models.gen_functional_model"]], "gen_sequential_model() (in module encodermap.models.models)": [[10, "encodermap.models.models.gen_sequential_model"], [25, "encodermap.models.models.gen_sequential_model"]], "newmoldata (class in encodermap.moldata.moldata)": [[11, "encodermap.moldata.moldata.NewMolData"]], "__init__() (encodermap.moldata.moldata.newmoldata method)": [[11, "encodermap.moldata.moldata.NewMolData.__init__"]], "encodermap.moldata": [[11, "module-encodermap.moldata"]], "encodermap.moldata.moldata": [[11, "module-encodermap.moldata.moldata"]], "write_tfrecords() (encodermap.moldata.moldata.newmoldata method)": [[11, "encodermap.moldata.moldata.NewMolData.write_tfrecords"]], "adcparameters (class in encodermap.parameters.parameters)": [[12, "encodermap.parameters.parameters.ADCParameters"], [26, "encodermap.parameters.parameters.ADCParameters"]], "parameters (class in encodermap.parameters.parameters)": [[12, "encodermap.parameters.parameters.Parameters"], [26, "encodermap.parameters.parameters.Parameters"]], "__init__() (encodermap.parameters.parameters.adcparameters method)": [[12, "encodermap.parameters.parameters.ADCParameters.__init__"], [26, "encodermap.parameters.parameters.ADCParameters.__init__"]], "__init__() (encodermap.parameters.parameters.parameters method)": [[12, "encodermap.parameters.parameters.Parameters.__init__"], [26, "encodermap.parameters.parameters.Parameters.__init__"]], "_datetime_windows_and_linux_compatible() (in module encodermap.parameters.parameters)": [[12, "encodermap.parameters.parameters._datetime_windows_and_linux_compatible"]], "activation_functions (encodermap.parameters.parameters.adcparameters attribute)": [[12, "encodermap.parameters.parameters.ADCParameters.activation_functions"], [26, "encodermap.parameters.parameters.ADCParameters.activation_functions"]], "activation_functions (encodermap.parameters.parameters.parameters attribute)": [[12, "encodermap.parameters.parameters.Parameters.activation_functions"], [12, "id0"], [26, "encodermap.parameters.parameters.Parameters.activation_functions"], [26, "id0"]], "analysis_path (encodermap.parameters.parameters.parameters attribute)": [[12, "encodermap.parameters.parameters.Parameters.analysis_path"], [26, "encodermap.parameters.parameters.Parameters.analysis_path"]], "angle_cost_reference (encodermap.parameters.parameters.adcparameters attribute)": [[12, "encodermap.parameters.parameters.ADCParameters.angle_cost_reference"], [26, "encodermap.parameters.parameters.ADCParameters.angle_cost_reference"]], "angle_cost_scale (encodermap.parameters.parameters.adcparameters attribute)": [[12, "encodermap.parameters.parameters.ADCParameters.angle_cost_scale"], [26, "encodermap.parameters.parameters.ADCParameters.angle_cost_scale"]], "angle_cost_variant (encodermap.parameters.parameters.adcparameters attribute)": [[12, "encodermap.parameters.parameters.ADCParameters.angle_cost_variant"], [26, "encodermap.parameters.parameters.ADCParameters.angle_cost_variant"]], "auto_cost_scale (encodermap.parameters.parameters.parameters attribute)": [[12, "encodermap.parameters.parameters.Parameters.auto_cost_scale"], [26, "encodermap.parameters.parameters.Parameters.auto_cost_scale"]], "auto_cost_variant (encodermap.parameters.parameters.parameters attribute)": [[12, "encodermap.parameters.parameters.Parameters.auto_cost_variant"], [26, "encodermap.parameters.parameters.Parameters.auto_cost_variant"]], "batch_size (encodermap.parameters.parameters.parameters attribute)": [[12, "encodermap.parameters.parameters.Parameters.batch_size"], [26, "encodermap.parameters.parameters.Parameters.batch_size"]], "batched (encodermap.parameters.parameters.parameters attribute)": [[12, "encodermap.parameters.parameters.Parameters.batched"], [26, "encodermap.parameters.parameters.Parameters.batched"]], "cartesian_cost_reference (encodermap.parameters.parameters.adcparameters attribute)": [[12, "encodermap.parameters.parameters.ADCParameters.cartesian_cost_reference"], [26, "encodermap.parameters.parameters.ADCParameters.cartesian_cost_reference"]], "cartesian_cost_scale (encodermap.parameters.parameters.adcparameters attribute)": [[12, "encodermap.parameters.parameters.ADCParameters.cartesian_cost_scale"], [26, "encodermap.parameters.parameters.ADCParameters.cartesian_cost_scale"]], "cartesian_cost_scale_soft_start (encodermap.parameters.parameters.adcparameters attribute)": [[12, "encodermap.parameters.parameters.ADCParameters.cartesian_cost_scale_soft_start"], [26, "encodermap.parameters.parameters.ADCParameters.cartesian_cost_scale_soft_start"]], "cartesian_cost_variant (encodermap.parameters.parameters.adcparameters attribute)": [[12, "encodermap.parameters.parameters.ADCParameters.cartesian_cost_variant"], [26, "encodermap.parameters.parameters.ADCParameters.cartesian_cost_variant"]], "cartesian_dist_sig_parameters (encodermap.parameters.parameters.adcparameters attribute)": [[12, "encodermap.parameters.parameters.ADCParameters.cartesian_dist_sig_parameters"], [26, "encodermap.parameters.parameters.ADCParameters.cartesian_dist_sig_parameters"]], "cartesian_distance_cost_scale (encodermap.parameters.parameters.adcparameters attribute)": [[12, "encodermap.parameters.parameters.ADCParameters.cartesian_distance_cost_scale"], [26, "encodermap.parameters.parameters.ADCParameters.cartesian_distance_cost_scale"]], "cartesian_pwd_start (encodermap.parameters.parameters.adcparameters attribute)": [[12, "encodermap.parameters.parameters.ADCParameters.cartesian_pwd_start"], [26, "encodermap.parameters.parameters.ADCParameters.cartesian_pwd_start"]], "cartesian_pwd_step (encodermap.parameters.parameters.adcparameters attribute)": [[12, "encodermap.parameters.parameters.ADCParameters.cartesian_pwd_step"], [26, "encodermap.parameters.parameters.ADCParameters.cartesian_pwd_step"]], "cartesian_pwd_stop (encodermap.parameters.parameters.adcparameters attribute)": [[12, "encodermap.parameters.parameters.ADCParameters.cartesian_pwd_stop"], [26, "encodermap.parameters.parameters.ADCParameters.cartesian_pwd_stop"]], "center_cost_scale (encodermap.parameters.parameters.parameters attribute)": [[12, "encodermap.parameters.parameters.Parameters.center_cost_scale"], [26, "encodermap.parameters.parameters.Parameters.center_cost_scale"]], "checkpoint_step (encodermap.parameters.parameters.parameters attribute)": [[12, "encodermap.parameters.parameters.Parameters.checkpoint_step"], [26, "encodermap.parameters.parameters.Parameters.checkpoint_step"]], "defaults (encodermap.parameters.parameters.adcparameters attribute)": [[12, "encodermap.parameters.parameters.ADCParameters.defaults"], [26, "encodermap.parameters.parameters.ADCParameters.defaults"]], "defaults (encodermap.parameters.parameters.parameters attribute)": [[12, "encodermap.parameters.parameters.Parameters.defaults"], [12, "id1"], [26, "encodermap.parameters.parameters.Parameters.defaults"], [26, "id2"]], "defaults_description() (encodermap.parameters.parameters.adcparameters class method)": [[12, "encodermap.parameters.parameters.ADCParameters.defaults_description"], [26, "encodermap.parameters.parameters.ADCParameters.defaults_description"]], "defaults_description() (encodermap.parameters.parameters.parameters class method)": [[12, "encodermap.parameters.parameters.Parameters.defaults_description"], [26, "encodermap.parameters.parameters.Parameters.defaults_description"]], "dihedral_cost_reference (encodermap.parameters.parameters.adcparameters attribute)": [[12, "encodermap.parameters.parameters.ADCParameters.dihedral_cost_reference"], [26, "encodermap.parameters.parameters.ADCParameters.dihedral_cost_reference"]], "dihedral_cost_scale (encodermap.parameters.parameters.adcparameters attribute)": [[12, "encodermap.parameters.parameters.ADCParameters.dihedral_cost_scale"], [26, "encodermap.parameters.parameters.ADCParameters.dihedral_cost_scale"]], "dihedral_cost_variant (encodermap.parameters.parameters.adcparameters attribute)": [[12, "encodermap.parameters.parameters.ADCParameters.dihedral_cost_variant"], [26, "encodermap.parameters.parameters.ADCParameters.dihedral_cost_variant"]], "dist_sig_parameters (encodermap.parameters.parameters.parameters attribute)": [[12, "encodermap.parameters.parameters.Parameters.dist_sig_parameters"], [26, "encodermap.parameters.parameters.Parameters.dist_sig_parameters"]], "distance_cost_scale (encodermap.parameters.parameters.parameters attribute)": [[12, "encodermap.parameters.parameters.Parameters.distance_cost_scale"], [26, "encodermap.parameters.parameters.Parameters.distance_cost_scale"]], "encodermap.parameters": [[12, "module-encodermap.parameters"]], "encodermap.parameters.parameters": [[12, "module-encodermap.parameters.parameters"]], "gpu_memory_fraction (encodermap.parameters.parameters.parameters attribute)": [[12, "encodermap.parameters.parameters.Parameters.gpu_memory_fraction"], [26, "encodermap.parameters.parameters.Parameters.gpu_memory_fraction"]], "id (encodermap.parameters.parameters.parameters attribute)": [[12, "encodermap.parameters.parameters.Parameters.id"], [26, "encodermap.parameters.parameters.Parameters.id"]], "l2_reg_constant (encodermap.parameters.parameters.parameters attribute)": [[12, "encodermap.parameters.parameters.Parameters.l2_reg_constant"], [26, "encodermap.parameters.parameters.Parameters.l2_reg_constant"]], "learning_rate (encodermap.parameters.parameters.parameters attribute)": [[12, "encodermap.parameters.parameters.Parameters.learning_rate"], [26, "encodermap.parameters.parameters.Parameters.learning_rate"]], "loss (encodermap.parameters.parameters.parameters attribute)": [[12, "encodermap.parameters.parameters.Parameters.loss"], [26, "encodermap.parameters.parameters.Parameters.loss"]], "main_path (encodermap.parameters.parameters.parameters attribute)": [[12, "encodermap.parameters.parameters.Parameters.main_path"], [26, "encodermap.parameters.parameters.Parameters.main_path"]], "model_api (encodermap.parameters.parameters.parameters attribute)": [[12, "encodermap.parameters.parameters.Parameters.model_api"], [26, "encodermap.parameters.parameters.Parameters.model_api"]], "n_neurons (encodermap.parameters.parameters.adcparameters attribute)": [[12, "encodermap.parameters.parameters.ADCParameters.n_neurons"], [26, "encodermap.parameters.parameters.ADCParameters.n_neurons"]], "n_neurons (encodermap.parameters.parameters.parameters attribute)": [[12, "encodermap.parameters.parameters.Parameters.n_neurons"], [12, "id2"], [26, "encodermap.parameters.parameters.Parameters.n_neurons"], [26, "id3"]], "n_steps (encodermap.parameters.parameters.parameters attribute)": [[12, "encodermap.parameters.parameters.Parameters.n_steps"], [26, "encodermap.parameters.parameters.Parameters.n_steps"]], "periodicity (encodermap.parameters.parameters.parameters attribute)": [[12, "encodermap.parameters.parameters.Parameters.periodicity"], [26, "encodermap.parameters.parameters.Parameters.periodicity"]], "seed (encodermap.parameters.parameters.parameters attribute)": [[12, "encodermap.parameters.parameters.Parameters.seed"], [26, "encodermap.parameters.parameters.Parameters.seed"]], "side_dihedral_cost_reference (encodermap.parameters.parameters.adcparameters attribute)": [[12, "encodermap.parameters.parameters.ADCParameters.side_dihedral_cost_reference"], [26, "encodermap.parameters.parameters.ADCParameters.side_dihedral_cost_reference"]], "side_dihedral_cost_scale (encodermap.parameters.parameters.adcparameters attribute)": [[12, "encodermap.parameters.parameters.ADCParameters.side_dihedral_cost_scale"], [26, "encodermap.parameters.parameters.ADCParameters.side_dihedral_cost_scale"]], "side_dihedral_cost_variant (encodermap.parameters.parameters.adcparameters attribute)": [[12, "encodermap.parameters.parameters.ADCParameters.side_dihedral_cost_variant"], [26, "encodermap.parameters.parameters.ADCParameters.side_dihedral_cost_variant"]], "summary_step (encodermap.parameters.parameters.parameters attribute)": [[12, "encodermap.parameters.parameters.Parameters.summary_step"], [26, "encodermap.parameters.parameters.Parameters.summary_step"]], "tensorboard (encodermap.parameters.parameters.parameters attribute)": [[12, "encodermap.parameters.parameters.Parameters.tensorboard"], [26, "encodermap.parameters.parameters.Parameters.tensorboard"]], "training (encodermap.parameters.parameters.parameters attribute)": [[12, "encodermap.parameters.parameters.Parameters.training"], [26, "encodermap.parameters.parameters.Parameters.training"]], "use_backbone_angles (encodermap.parameters.parameters.adcparameters attribute)": [[12, "encodermap.parameters.parameters.ADCParameters.use_backbone_angles"], [26, "encodermap.parameters.parameters.ADCParameters.use_backbone_angles"]], "use_sidechains (encodermap.parameters.parameters.adcparameters attribute)": [[12, "encodermap.parameters.parameters.ADCParameters.use_sidechains"], [26, "encodermap.parameters.parameters.ADCParameters.use_sidechains"]], "bernstein() (in module encodermap.plot.utils)": [[13, "encodermap.plot.utils.Bernstein"]], "bezier() (in module encodermap.plot.utils)": [[13, "encodermap.plot.utils.Bezier"]], "bezierbuilder (class in encodermap.plot.utils)": [[13, "encodermap.plot.utils.BezierBuilder"]], "dummytool (class in encodermap.plot.utils)": [[13, "encodermap.plot.utils.DummyTool"]], "interactiveplotting (class in encodermap.plot.interactive_plotting)": [[13, "encodermap.plot.interactive_plotting.InteractivePlotting"]], "menu (class in encodermap.plot.utils)": [[13, "encodermap.plot.utils.Menu"]], "menuitem (class in encodermap.plot.utils)": [[13, "encodermap.plot.utils.MenuItem"]], "modebutton (class in encodermap.plot.utils)": [[13, "encodermap.plot.utils.ModeButton"]], "props (class in encodermap.plot.utils)": [[13, "encodermap.plot.utils.Props"]], "selectfromcollection (class in encodermap.plot.utils)": [[13, "encodermap.plot.utils.SelectFromCollection"]], "statusmenu (class in encodermap.plot.utils)": [[13, "encodermap.plot.utils.StatusMenu"]], "__init__() (encodermap.plot.interactive_plotting.interactiveplotting method)": [[13, "encodermap.plot.interactive_plotting.InteractivePlotting.__init__"]], "__init__() (encodermap.plot.utils.bezierbuilder method)": [[13, "encodermap.plot.utils.BezierBuilder.__init__"]], "__init__() (encodermap.plot.utils.props method)": [[13, "encodermap.plot.utils.Props.__init__"]], "_build_bezier() (encodermap.plot.utils.bezierbuilder method)": [[13, "encodermap.plot.utils.BezierBuilder._build_bezier"]], "_check_all_templates_defined() (in module encodermap.plot.utils)": [[13, "encodermap.plot.utils._check_all_templates_defined"]], "_create_readme() (in module encodermap.plot.utils)": [[13, "encodermap.plot.utils._create_readme"]], "_get_system_info() (in module encodermap.plot.utils)": [[13, "encodermap.plot.utils._get_system_info"]], "_match_tops_and_trajs() (in module encodermap.plot.utils)": [[13, "encodermap.plot.utils._match_tops_and_trajs"]], "_on_select_rotation() (encodermap.plot.utils.modebutton method)": [[13, "encodermap.plot.utils.ModeButton._on_select_rotation"]], "_setattr() (encodermap.plot.utils.props method)": [[13, "encodermap.plot.utils.Props._setattr"]], "_string_summary() (encodermap.plot.utils.props method)": [[13, "encodermap.plot.utils.Props._string_summary"]], "_string_summary() (encodermap.plot.utils.selectfromcollection method)": [[13, "encodermap.plot.utils.SelectFromCollection._string_summary"]], "_unpack_cluster_info() (in module encodermap.plot.utils)": [[13, "encodermap.plot.utils._unpack_cluster_info"]], "_unpack_path_info() (in module encodermap.plot.utils)": [[13, "encodermap.plot.utils._unpack_path_info"]], "_update_bernstein() (encodermap.plot.utils.bezierbuilder method)": [[13, "encodermap.plot.utils.BezierBuilder._update_bernstein"]], "_update_bezier() (encodermap.plot.utils.bezierbuilder method)": [[13, "encodermap.plot.utils.BezierBuilder._update_bezier"]], "_zoomingboxmanual() (in module encodermap.plot.plotting)": [[13, "encodermap.plot.plotting._zoomingBoxManual"]], "abc_to_rgb() (in module encodermap.plot.utils)": [[13, "encodermap.plot.utils.abc_to_rgb"]], "accept() (encodermap.plot.interactive_plotting.interactiveplotting method)": [[13, "encodermap.plot.interactive_plotting.InteractivePlotting.accept"]], "add_items() (encodermap.plot.utils.menu method)": [[13, "encodermap.plot.utils.Menu.add_items"]], "add_items() (encodermap.plot.utils.statusmenu method)": [[13, "encodermap.plot.utils.StatusMenu.add_items"]], "alpha (encodermap.plot.utils.props attribute)": [[13, "encodermap.plot.utils.Props.alpha"]], "ax (encodermap.plot.interactive_plotting.interactiveplotting attribute)": [[13, "encodermap.plot.interactive_plotting.InteractivePlotting.ax"]], "bezier() (encodermap.plot.interactive_plotting.interactiveplotting method)": [[13, "encodermap.plot.interactive_plotting.InteractivePlotting.bezier"]], "bgcolor (encodermap.plot.utils.props attribute)": [[13, "encodermap.plot.utils.Props.bgcolor"]], "bgcolor_rgb (encodermap.plot.utils.props attribute)": [[13, "encodermap.plot.utils.Props.bgcolor_rgb"]], "bgcolor_rgb (encodermap.plot.utils.props property)": [[13, "id2"]], "calculate_dssps() (in module encodermap.plot.utils)": [[13, "encodermap.plot.utils.calculate_dssps"]], "check_select() (encodermap.plot.utils.menuitem method)": [[13, "encodermap.plot.utils.MenuItem.check_select"]], "check_select() (encodermap.plot.utils.modebutton method)": [[13, "encodermap.plot.utils.ModeButton.check_select"]], "cluster_zoomed (encodermap.plot.interactive_plotting.interactiveplotting property)": [[13, "encodermap.plot.interactive_plotting.InteractivePlotting.cluster_zoomed"]], "correct_missing_uniques() (in module encodermap.plot.utils)": [[13, "encodermap.plot.utils.correct_missing_uniques"]], "defaults (encodermap.plot.utils.props attribute)": [[13, "encodermap.plot.utils.Props.defaults"], [13, "id3"]], "digitize_dssp() (in module encodermap.plot.utils)": [[13, "encodermap.plot.utils.digitize_dssp"]], "disconnect() (encodermap.plot.utils.bezierbuilder method)": [[13, "encodermap.plot.utils.BezierBuilder.disconnect"]], "disconnect() (encodermap.plot.utils.dummytool method)": [[13, "encodermap.plot.utils.DummyTool.disconnect"]], "disconnect() (encodermap.plot.utils.selectfromcollection method)": [[13, "encodermap.plot.utils.SelectFromCollection.disconnect"]], "distance_histogram() (in module encodermap.plot.plotting)": [[13, "encodermap.plot.plotting.distance_histogram"]], "draw() (encodermap.plot.utils.menuitem method)": [[13, "encodermap.plot.utils.MenuItem.draw"]], "ellipse() (encodermap.plot.interactive_plotting.interactiveplotting method)": [[13, "encodermap.plot.interactive_plotting.InteractivePlotting.ellipse"]], "encodermap.plot": [[13, "module-encodermap.plot"]], "encodermap.plot.interactive_plotting": [[13, "module-encodermap.plot.interactive_plotting"]], "encodermap.plot.jinja_template": [[13, "module-encodermap.plot.jinja_template"]], "encodermap.plot.plotting": [[13, "module-encodermap.plot.plotting"]], "encodermap.plot.utils": [[13, "module-encodermap.plot.utils"]], "fig (encodermap.plot.interactive_plotting.interactiveplotting attribute)": [[13, "encodermap.plot.interactive_plotting.InteractivePlotting.fig"]], "fontsize (encodermap.plot.utils.props attribute)": [[13, "encodermap.plot.utils.Props.fontsize"]], "get_coords() (encodermap.plot.utils.menu method)": [[13, "encodermap.plot.utils.Menu.get_coords"]], "ind (encodermap.plot.utils.bezierbuilder property)": [[13, "encodermap.plot.utils.BezierBuilder.ind"]], "labelcolor (encodermap.plot.utils.props attribute)": [[13, "encodermap.plot.utils.Props.labelcolor"]], "labelcolor_rgb (encodermap.plot.utils.props attribute)": [[13, "encodermap.plot.utils.Props.labelcolor_rgb"]], "labelcolor_rgb (encodermap.plot.utils.props property)": [[13, "id4"]], "lasso() (encodermap.plot.interactive_plotting.interactiveplotting method)": [[13, "encodermap.plot.interactive_plotting.InteractivePlotting.lasso"]], "menu (encodermap.plot.interactive_plotting.interactiveplotting attribute)": [[13, "encodermap.plot.interactive_plotting.InteractivePlotting.menu"]], "menu_ax (encodermap.plot.interactive_plotting.interactiveplotting attribute)": [[13, "encodermap.plot.interactive_plotting.InteractivePlotting.menu_ax"]], "mode (encodermap.plot.interactive_plotting.interactiveplotting attribute)": [[13, "encodermap.plot.interactive_plotting.InteractivePlotting.mode"]], "mode (encodermap.plot.interactive_plotting.interactiveplotting property)": [[13, "id0"]], "on_click() (encodermap.plot.interactive_plotting.interactiveplotting method)": [[13, "encodermap.plot.interactive_plotting.InteractivePlotting.on_click"]], "on_click() (encodermap.plot.utils.statusmenu method)": [[13, "encodermap.plot.utils.StatusMenu.on_click"]], "on_click_menu() (encodermap.plot.interactive_plotting.interactiveplotting method)": [[13, "encodermap.plot.interactive_plotting.InteractivePlotting.on_click_menu"]], "on_click_tool() (encodermap.plot.interactive_plotting.interactiveplotting method)": [[13, "encodermap.plot.interactive_plotting.InteractivePlotting.on_click_tool"]], "on_enter_ax() (encodermap.plot.interactive_plotting.interactiveplotting method)": [[13, "encodermap.plot.interactive_plotting.InteractivePlotting.on_enter_ax"]], "on_leave_ax() (encodermap.plot.interactive_plotting.interactiveplotting method)": [[13, "encodermap.plot.interactive_plotting.InteractivePlotting.on_leave_ax"]], "on_move() (encodermap.plot.utils.menu method)": [[13, "encodermap.plot.utils.Menu.on_move"]], "onselect() (encodermap.plot.utils.selectfromcollection method)": [[13, "encodermap.plot.utils.SelectFromCollection.onselect"]], "path() (encodermap.plot.interactive_plotting.interactiveplotting method)": [[13, "encodermap.plot.interactive_plotting.InteractivePlotting.path"]], "polygon() (encodermap.plot.interactive_plotting.interactiveplotting method)": [[13, "encodermap.plot.interactive_plotting.InteractivePlotting.polygon"]], "pts (encodermap.plot.interactive_plotting.interactiveplotting attribute)": [[13, "encodermap.plot.interactive_plotting.InteractivePlotting.pts"]], "rectangle() (encodermap.plot.interactive_plotting.interactiveplotting method)": [[13, "encodermap.plot.interactive_plotting.InteractivePlotting.rectangle"]], "render_move() (encodermap.plot.interactive_plotting.interactiveplotting method)": [[13, "encodermap.plot.interactive_plotting.InteractivePlotting.render_move"]], "reset() (encodermap.plot.interactive_plotting.interactiveplotting method)": [[13, "encodermap.plot.interactive_plotting.InteractivePlotting.reset"]], "set() (encodermap.plot.utils.menuitem method)": [[13, "encodermap.plot.utils.MenuItem.set"]], "set() (encodermap.plot.utils.modebutton method)": [[13, "encodermap.plot.utils.ModeButton.set"]], "set_axes() (encodermap.plot.utils.menuitem method)": [[13, "encodermap.plot.utils.MenuItem.set_axes"]], "set_data() (encodermap.plot.utils.menuitem method)": [[13, "encodermap.plot.utils.MenuItem.set_data"]], "set_figure() (encodermap.plot.utils.menuitem method)": [[13, "encodermap.plot.utils.MenuItem.set_figure"]], "set_hover() (encodermap.plot.utils.menuitem method)": [[13, "encodermap.plot.utils.MenuItem.set_hover"]], "set_hover() (encodermap.plot.utils.modebutton method)": [[13, "encodermap.plot.utils.ModeButton.set_hover"]], "set_hover_props() (encodermap.plot.utils.menuitem method)": [[13, "encodermap.plot.utils.MenuItem.set_hover_props"]], "set_idle() (encodermap.plot.utils.statusmenu method)": [[13, "encodermap.plot.utils.StatusMenu.set_idle"]], "set_points() (encodermap.plot.interactive_plotting.interactiveplotting method)": [[13, "encodermap.plot.interactive_plotting.InteractivePlotting.set_points"]], "set_transform() (encodermap.plot.utils.menuitem method)": [[13, "encodermap.plot.utils.MenuItem.set_transform"]], "status_menu_ax (encodermap.plot.interactive_plotting.interactiveplotting attribute)": [[13, "encodermap.plot.interactive_plotting.InteractivePlotting.status_menu_ax"]], "statusmenu (encodermap.plot.interactive_plotting.interactiveplotting attribute)": [[13, "encodermap.plot.interactive_plotting.InteractivePlotting.statusmenu"]], "tool (encodermap.plot.interactive_plotting.interactiveplotting attribute)": [[13, "encodermap.plot.interactive_plotting.InteractivePlotting.tool"]], "trajs (encodermap.plot.interactive_plotting.interactiveplotting attribute)": [[13, "encodermap.plot.interactive_plotting.InteractivePlotting.trajs"]], "write() (encodermap.plot.interactive_plotting.interactiveplotting method)": [[13, "encodermap.plot.interactive_plotting.InteractivePlotting.write"]], "cvs (encodermap.trajinfo.info_all.trajensemble attribute)": [[14, "encodermap.trajinfo.info_all.TrajEnsemble.CVs"], [27, "encodermap.trajinfo.info_all.TrajEnsemble.CVs"]], "cvs (encodermap.trajinfo.info_all.trajensemble property)": [[14, "id0"], [27, "id5"]], "cvs (encodermap.trajinfo.info_single.singletraj property)": [[14, "encodermap.trajinfo.info_single.SingleTraj.CVs"], [27, "encodermap.trajinfo.info_single.SingleTraj.CVs"]], "cvs_in_file (encodermap.trajinfo.info_all.trajensemble property)": [[14, "encodermap.trajinfo.info_all.TrajEnsemble.CVs_in_file"], [27, "encodermap.trajinfo.info_all.TrajEnsemble.CVs_in_file"]], "cvs_in_file (encodermap.trajinfo.info_single.singletraj property)": [[14, "encodermap.trajinfo.info_single.SingleTraj.CVs_in_file"], [27, "encodermap.trajinfo.info_single.SingleTraj.CVs_in_file"]], "repository (class in encodermap.trajinfo.repository)": [[14, "encodermap.trajinfo.repository.Repository"]], "singletraj (class in encodermap.trajinfo.info_single)": [[14, "encodermap.trajinfo.info_single.SingleTraj"], [27, "encodermap.trajinfo.info_single.SingleTraj"]], "trajensemble (class in encodermap.trajinfo.info_all)": [[14, "encodermap.trajinfo.info_all.TrajEnsemble"], [27, "encodermap.trajinfo.info_all.TrajEnsemble"]], "_cvs (encodermap.trajinfo.info_all.trajensemble attribute)": [[14, "encodermap.trajinfo.info_all.TrajEnsemble._CVs"], [27, "encodermap.trajinfo.info_all.TrajEnsemble._CVs"]], "_cvs (encodermap.trajinfo.info_all.trajensemble property)": [[14, "id1"], [27, "id6"]], "__add__() (encodermap.trajinfo.info_all.trajensemble method)": [[14, "encodermap.trajinfo.info_all.TrajEnsemble.__add__"], [27, "encodermap.trajinfo.info_all.TrajEnsemble.__add__"]], "__add__() (encodermap.trajinfo.info_single.singletraj method)": [[14, "encodermap.trajinfo.info_single.SingleTraj.__add__"], [27, "encodermap.trajinfo.info_single.SingleTraj.__add__"]], "__enter__() (encodermap.trajinfo.info_single.singletraj method)": [[14, "encodermap.trajinfo.info_single.SingleTraj.__enter__"], [27, "encodermap.trajinfo.info_single.SingleTraj.__enter__"]], "__eq__() (encodermap.trajinfo.info_single.singletraj method)": [[14, "encodermap.trajinfo.info_single.SingleTraj.__eq__"], [27, "encodermap.trajinfo.info_single.SingleTraj.__eq__"]], "__exit__() (encodermap.trajinfo.info_single.singletraj method)": [[14, "encodermap.trajinfo.info_single.SingleTraj.__exit__"], [27, "encodermap.trajinfo.info_single.SingleTraj.__exit__"]], "__getattr__() (encodermap.trajinfo.info_single.singletraj method)": [[14, "encodermap.trajinfo.info_single.SingleTraj.__getattr__"], [27, "encodermap.trajinfo.info_single.SingleTraj.__getattr__"]], "__getitem__() (encodermap.trajinfo.info_single.singletraj method)": [[14, "encodermap.trajinfo.info_single.SingleTraj.__getitem__"], [27, "encodermap.trajinfo.info_single.SingleTraj.__getitem__"]], "__init__() (encodermap.trajinfo.info_all.trajensemble method)": [[14, "encodermap.trajinfo.info_all.TrajEnsemble.__init__"], [27, "encodermap.trajinfo.info_all.TrajEnsemble.__init__"]], "__init__() (encodermap.trajinfo.info_single.singletraj method)": [[14, "encodermap.trajinfo.info_single.SingleTraj.__init__"], [27, "encodermap.trajinfo.info_single.SingleTraj.__init__"]], "__init__() (encodermap.trajinfo.repository.repository method)": [[14, "encodermap.trajinfo.repository.Repository.__init__"]], "__iter__() (encodermap.trajinfo.info_single.singletraj method)": [[14, "encodermap.trajinfo.info_single.SingleTraj.__iter__"], [27, "encodermap.trajinfo.info_single.SingleTraj.__iter__"]], "__reversed__() (encodermap.trajinfo.info_single.singletraj method)": [[14, "encodermap.trajinfo.info_single.SingleTraj.__reversed__"], [27, "encodermap.trajinfo.info_single.SingleTraj.__reversed__"]], "_add_along_traj() (encodermap.trajinfo.info_single.singletraj method)": [[14, "encodermap.trajinfo.info_single.SingleTraj._add_along_traj"], [27, "encodermap.trajinfo.info_single.SingleTraj._add_along_traj"]], "_can_be_feature() (in module encodermap.trajinfo.info_all)": [[14, "encodermap.trajinfo.info_all._can_be_feature"]], "_datetime_windows_and_linux_compatible() (in module encodermap.trajinfo.info_all)": [[14, "encodermap.trajinfo.info_all._datetime_windows_and_linux_compatible"]], "_gen_ensemble() (encodermap.trajinfo.info_single.singletraj method)": [[14, "encodermap.trajinfo.info_single.SingleTraj._gen_ensemble"], [27, "encodermap.trajinfo.info_single.SingleTraj._gen_ensemble"]], "_get_connection() (encodermap.trajinfo.repository.repository method)": [[14, "encodermap.trajinfo.repository.Repository._get_connection"]], "_load_traj() (in module encodermap.trajinfo.info_single)": [[14, "encodermap.trajinfo.info_single._load_traj"]], "_load_traj() (in module encodermap.trajinfo.load_traj)": [[14, "encodermap.trajinfo.load_traj._load_traj"]], "_load_traj_and_top() (in module encodermap.trajinfo.load_traj)": [[14, "encodermap.trajinfo.load_traj._load_traj_and_top"]], "_mdtraj_attr (encodermap.trajinfo.info_single.singletraj attribute)": [[14, "encodermap.trajinfo.info_single.SingleTraj._mdtraj_attr"], [27, "encodermap.trajinfo.info_single.SingleTraj._mdtraj_attr"]], "_n_frames_base_h5_file (encodermap.trajinfo.info_single.singletraj property)": [[14, "encodermap.trajinfo.info_single.SingleTraj._n_frames_base_h5_file"], [27, "encodermap.trajinfo.info_single.SingleTraj._n_frames_base_h5_file"]], "_original_frame_indices (encodermap.trajinfo.info_single.singletraj property)": [[14, "encodermap.trajinfo.info_single.SingleTraj._original_frame_indices"], [27, "encodermap.trajinfo.info_single.SingleTraj._original_frame_indices"]], "_pyemma_indexing() (encodermap.trajinfo.info_all.trajensemble method)": [[14, "encodermap.trajinfo.info_all.TrajEnsemble._pyemma_indexing"], [27, "encodermap.trajinfo.info_all.TrajEnsemble._pyemma_indexing"]], "_return_trajs_by_index() (encodermap.trajinfo.info_all.trajensemble method)": [[14, "encodermap.trajinfo.info_all.TrajEnsemble._return_trajs_by_index"], [27, "encodermap.trajinfo.info_all.TrajEnsemble._return_trajs_by_index"]], "_split_proj_filetype() (encodermap.trajinfo.repository.repository static method)": [[14, "encodermap.trajinfo.repository.Repository._split_proj_filetype"]], "_string_summary() (encodermap.trajinfo.info_all.trajensemble method)": [[14, "encodermap.trajinfo.info_all.TrajEnsemble._string_summary"], [27, "encodermap.trajinfo.info_all.TrajEnsemble._string_summary"]], "_string_summary() (encodermap.trajinfo.info_single.singletraj method)": [[14, "encodermap.trajinfo.info_single.SingleTraj._string_summary"], [27, "encodermap.trajinfo.info_single.SingleTraj._string_summary"]], "_traj (encodermap.trajinfo.info_single.singletraj property)": [[14, "encodermap.trajinfo.info_single.SingleTraj._traj"], [27, "encodermap.trajinfo.info_single.SingleTraj._traj"]], "_validate_uri() (encodermap.trajinfo.info_single.singletraj method)": [[14, "encodermap.trajinfo.info_single.SingleTraj._validate_uri"], [27, "encodermap.trajinfo.info_single.SingleTraj._validate_uri"]], "_validate_uri() (in module encodermap.trajinfo.load_traj)": [[14, "encodermap.trajinfo.load_traj._validate_uri"]], "atom_slice() (encodermap.trajinfo.info_single.singletraj method)": [[14, "encodermap.trajinfo.info_single.SingleTraj.atom_slice"], [27, "encodermap.trajinfo.info_single.SingleTraj.atom_slice"]], "atoms (encodermap.trajinfo.info_single.singletraj attribute)": [[14, "encodermap.trajinfo.info_single.SingleTraj.atoms"], [27, "encodermap.trajinfo.info_single.SingleTraj.atoms"]], "backend (encodermap.trajinfo.info_single.singletraj attribute)": [[14, "encodermap.trajinfo.info_single.SingleTraj.backend"], [27, "encodermap.trajinfo.info_single.SingleTraj.backend"]], "basename (encodermap.trajinfo.info_single.singletraj property)": [[14, "encodermap.trajinfo.info_single.SingleTraj.basename"], [27, "encodermap.trajinfo.info_single.SingleTraj.basename"]], "basenames (encodermap.trajinfo.info_all.trajensemble attribute)": [[14, "encodermap.trajinfo.info_all.TrajEnsemble.basenames"], [27, "encodermap.trajinfo.info_all.TrajEnsemble.basenames"]], "basenames (encodermap.trajinfo.info_all.trajensemble property)": [[14, "id2"], [27, "id7"]], "bonds (encodermap.trajinfo.info_single.singletraj attribute)": [[14, "encodermap.trajinfo.info_single.SingleTraj.bonds"], [27, "encodermap.trajinfo.info_single.SingleTraj.bonds"]], "catalogue (encodermap.trajinfo.repository.repository property)": [[14, "encodermap.trajinfo.repository.Repository.catalogue"]], "chains (encodermap.trajinfo.info_single.singletraj attribute)": [[14, "encodermap.trajinfo.info_single.SingleTraj.chains"], [27, "encodermap.trajinfo.info_single.SingleTraj.chains"]], "common_str (encodermap.trajinfo.info_single.singletraj attribute)": [[14, "encodermap.trajinfo.info_single.SingleTraj.common_str"], [27, "encodermap.trajinfo.info_single.SingleTraj.common_str"]], "current_path (encodermap.trajinfo.repository.repository attribute)": [[14, "encodermap.trajinfo.repository.Repository.current_path"]], "data (encodermap.trajinfo.repository.repository attribute)": [[14, "encodermap.trajinfo.repository.Repository.data"]], "datasets (encodermap.trajinfo.repository.repository property)": [[14, "encodermap.trajinfo.repository.Repository.datasets"]], "encodermap.trajinfo": [[14, "module-encodermap.trajinfo"]], "encodermap.trajinfo.hash_files": [[14, "module-encodermap.trajinfo.hash_files"]], "encodermap.trajinfo.info_all": [[14, "module-encodermap.trajinfo.info_all"]], "encodermap.trajinfo.info_single": [[14, "module-encodermap.trajinfo.info_single"]], "encodermap.trajinfo.load_traj": [[14, "module-encodermap.trajinfo.load_traj"]], "encodermap.trajinfo.repository": [[14, "module-encodermap.trajinfo.repository"]], "encodermap.trajinfo.trajinfo_utils": [[14, "module-encodermap.trajinfo.trajinfo_utils"]], "extension (encodermap.trajinfo.info_single.singletraj property)": [[14, "encodermap.trajinfo.info_single.SingleTraj.extension"], [27, "encodermap.trajinfo.info_single.SingleTraj.extension"]], "fetch() (encodermap.trajinfo.repository.repository method)": [[14, "encodermap.trajinfo.repository.Repository.fetch"]], "files (encodermap.trajinfo.repository.repository attribute)": [[14, "encodermap.trajinfo.repository.Repository.files"]], "files_dict (encodermap.trajinfo.repository.repository attribute)": [[14, "encodermap.trajinfo.repository.Repository.files_dict"]], "frames (encodermap.trajinfo.info_all.trajensemble property)": [[14, "encodermap.trajinfo.info_all.TrajEnsemble.frames"], [27, "encodermap.trajinfo.info_all.TrajEnsemble.frames"]], "from_pdb_id() (encodermap.trajinfo.info_single.singletraj class method)": [[14, "encodermap.trajinfo.info_single.SingleTraj.from_pdb_id"], [27, "encodermap.trajinfo.info_single.SingleTraj.from_pdb_id"]], "from_textfile() (encodermap.trajinfo.info_all.trajensemble class method)": [[14, "encodermap.trajinfo.info_all.TrajEnsemble.from_textfile"], [27, "encodermap.trajinfo.info_all.TrajEnsemble.from_textfile"]], "from_xarray() (encodermap.trajinfo.info_all.trajensemble class method)": [[14, "encodermap.trajinfo.info_all.TrajEnsemble.from_xarray"], [27, "encodermap.trajinfo.info_all.TrajEnsemble.from_xarray"]], "get_single_frame() (encodermap.trajinfo.info_all.trajensemble method)": [[14, "encodermap.trajinfo.info_all.TrajEnsemble.get_single_frame"], [27, "encodermap.trajinfo.info_all.TrajEnsemble.get_single_frame"]], "get_single_frame() (encodermap.trajinfo.info_single.singletraj method)": [[14, "encodermap.trajinfo.info_single.SingleTraj.get_single_frame"], [27, "encodermap.trajinfo.info_single.SingleTraj.get_single_frame"]], "get_sizes() (encodermap.trajinfo.repository.repository method)": [[14, "encodermap.trajinfo.repository.Repository.get_sizes"]], "hash_files() (in module encodermap.trajinfo.hash_files)": [[14, "encodermap.trajinfo.hash_files.hash_files"]], "id (encodermap.trajinfo.info_all.trajensemble property)": [[14, "encodermap.trajinfo.info_all.TrajEnsemble.id"], [27, "encodermap.trajinfo.info_all.TrajEnsemble.id"]], "id (encodermap.trajinfo.info_single.singletraj property)": [[14, "encodermap.trajinfo.info_single.SingleTraj.id"], [27, "encodermap.trajinfo.info_single.SingleTraj.id"]], "index (encodermap.trajinfo.info_single.singletraj attribute)": [[14, "encodermap.trajinfo.info_single.SingleTraj.index"], [27, "encodermap.trajinfo.info_single.SingleTraj.index"]], "index_arr (encodermap.trajinfo.info_all.trajensemble attribute)": [[14, "encodermap.trajinfo.info_all.TrajEnsemble.index_arr"], [27, "encodermap.trajinfo.info_all.TrajEnsemble.index_arr"]], "index_arr (encodermap.trajinfo.info_all.trajensemble property)": [[14, "id3"], [27, "id8"]], "iterframes() (encodermap.trajinfo.info_all.trajensemble method)": [[14, "encodermap.trajinfo.info_all.TrajEnsemble.iterframes"], [27, "encodermap.trajinfo.info_all.TrajEnsemble.iterframes"]], "itertrajs() (encodermap.trajinfo.info_all.trajensemble method)": [[14, "encodermap.trajinfo.info_all.TrajEnsemble.itertrajs"], [27, "encodermap.trajinfo.info_all.TrajEnsemble.itertrajs"]], "join() (encodermap.trajinfo.info_single.singletraj method)": [[14, "encodermap.trajinfo.info_single.SingleTraj.join"], [27, "encodermap.trajinfo.info_single.SingleTraj.join"]], "load_cv() (encodermap.trajinfo.info_single.singletraj method)": [[14, "encodermap.trajinfo.info_single.SingleTraj.load_CV"], [27, "encodermap.trajinfo.info_single.SingleTraj.load_CV"]], "load_cvs() (encodermap.trajinfo.info_all.trajensemble method)": [[14, "encodermap.trajinfo.info_all.TrajEnsemble.load_CVs"], [27, "encodermap.trajinfo.info_all.TrajEnsemble.load_CVs"]], "load_cvs_ensembletraj() (in module encodermap.trajinfo.trajinfo_utils)": [[14, "encodermap.trajinfo.trajinfo_utils.load_CVs_ensembletraj"]], "load_cvs_singletraj() (in module encodermap.trajinfo.trajinfo_utils)": [[14, "encodermap.trajinfo.trajinfo_utils.load_CVs_singletraj"]], "load_project() (encodermap.trajinfo.repository.repository method)": [[14, "encodermap.trajinfo.repository.Repository.load_project"]], "load_traj() (encodermap.trajinfo.info_single.singletraj method)": [[14, "encodermap.trajinfo.info_single.SingleTraj.load_traj"], [27, "encodermap.trajinfo.info_single.SingleTraj.load_traj"]], "load_trajs() (encodermap.trajinfo.info_all.trajensemble method)": [[14, "encodermap.trajinfo.info_all.TrajEnsemble.load_trajs"], [27, "encodermap.trajinfo.info_all.TrajEnsemble.load_trajs"]], "locations (encodermap.trajinfo.info_all.trajensemble attribute)": [[14, "encodermap.trajinfo.info_all.TrajEnsemble.locations"], [27, "encodermap.trajinfo.info_all.TrajEnsemble.locations"]], "locations (encodermap.trajinfo.info_all.trajensemble property)": [[14, "id4"], [27, "id9"]], "lookup() (encodermap.trajinfo.repository.repository method)": [[14, "encodermap.trajinfo.repository.Repository.lookup"]], "maintainer (encodermap.trajinfo.repository.repository attribute)": [[14, "encodermap.trajinfo.repository.Repository.maintainer"]], "n_atoms (encodermap.trajinfo.info_single.singletraj property)": [[14, "encodermap.trajinfo.info_single.SingleTraj.n_atoms"], [27, "encodermap.trajinfo.info_single.SingleTraj.n_atoms"]], "n_chains (encodermap.trajinfo.info_single.singletraj property)": [[14, "encodermap.trajinfo.info_single.SingleTraj.n_chains"], [27, "encodermap.trajinfo.info_single.SingleTraj.n_chains"]], "n_frames (encodermap.trajinfo.info_all.trajensemble attribute)": [[14, "encodermap.trajinfo.info_all.TrajEnsemble.n_frames"], [27, "encodermap.trajinfo.info_all.TrajEnsemble.n_frames"]], "n_frames (encodermap.trajinfo.info_all.trajensemble property)": [[14, "id5"], [27, "id10"]], "n_frames (encodermap.trajinfo.info_single.singletraj property)": [[14, "encodermap.trajinfo.info_single.SingleTraj.n_frames"], [27, "encodermap.trajinfo.info_single.SingleTraj.n_frames"]], "n_residues (encodermap.trajinfo.info_all.trajensemble property)": [[14, "encodermap.trajinfo.info_all.TrajEnsemble.n_residues"], [27, "encodermap.trajinfo.info_all.TrajEnsemble.n_residues"]], "n_residues (encodermap.trajinfo.info_single.singletraj property)": [[14, "encodermap.trajinfo.info_single.SingleTraj.n_residues"], [27, "encodermap.trajinfo.info_single.SingleTraj.n_residues"]], "n_trajs (encodermap.trajinfo.info_all.trajensemble attribute)": [[14, "encodermap.trajinfo.info_all.TrajEnsemble.n_trajs"], [27, "encodermap.trajinfo.info_all.TrajEnsemble.n_trajs"]], "n_trajs (encodermap.trajinfo.info_all.trajensemble property)": [[14, "id6"], [27, "id11"]], "name_arr (encodermap.trajinfo.info_all.trajensemble attribute)": [[14, "encodermap.trajinfo.info_all.TrajEnsemble.name_arr"], [27, "encodermap.trajinfo.info_all.TrajEnsemble.name_arr"]], "name_arr (encodermap.trajinfo.info_all.trajensemble property)": [[14, "id7"], [27, "id12"]], "print_catalogue() (encodermap.trajinfo.repository.repository method)": [[14, "encodermap.trajinfo.repository.Repository.print_catalogue"]], "projects (encodermap.trajinfo.repository.repository property)": [[14, "encodermap.trajinfo.repository.Repository.projects"]], "residues (encodermap.trajinfo.info_single.singletraj attribute)": [[14, "encodermap.trajinfo.info_single.SingleTraj.residues"], [27, "encodermap.trajinfo.info_single.SingleTraj.residues"]], "save() (encodermap.trajinfo.info_all.trajensemble method)": [[14, "encodermap.trajinfo.info_all.TrajEnsemble.save"], [27, "encodermap.trajinfo.info_all.TrajEnsemble.save"]], "save() (encodermap.trajinfo.info_single.singletraj method)": [[14, "encodermap.trajinfo.info_single.SingleTraj.save"], [27, "encodermap.trajinfo.info_single.SingleTraj.save"]], "save_cv_as_numpy() (encodermap.trajinfo.info_single.singletraj method)": [[14, "encodermap.trajinfo.info_single.SingleTraj.save_CV_as_numpy"], [27, "encodermap.trajinfo.info_single.SingleTraj.save_CV_as_numpy"]], "save_cvs() (encodermap.trajinfo.info_all.trajensemble method)": [[14, "encodermap.trajinfo.info_all.TrajEnsemble.save_CVs"], [27, "encodermap.trajinfo.info_all.TrajEnsemble.save_CVs"]], "search() (encodermap.trajinfo.repository.repository method)": [[14, "encodermap.trajinfo.repository.Repository.search"]], "select() (encodermap.trajinfo.info_single.singletraj method)": [[14, "encodermap.trajinfo.info_single.SingleTraj.select"], [27, "encodermap.trajinfo.info_single.SingleTraj.select"]], "show_traj() (encodermap.trajinfo.info_single.singletraj method)": [[14, "encodermap.trajinfo.info_single.SingleTraj.show_traj"], [27, "encodermap.trajinfo.info_single.SingleTraj.show_traj"]], "split_into_frames() (encodermap.trajinfo.info_all.trajensemble method)": [[14, "encodermap.trajinfo.info_all.TrajEnsemble.split_into_frames"], [27, "encodermap.trajinfo.info_all.TrajEnsemble.split_into_frames"]], "stack() (encodermap.trajinfo.info_single.singletraj method)": [[14, "encodermap.trajinfo.info_single.SingleTraj.stack"], [27, "encodermap.trajinfo.info_single.SingleTraj.stack"]], "stack() (encodermap.trajinfo.repository.repository method)": [[14, "encodermap.trajinfo.repository.Repository.stack"]], "subsample() (encodermap.trajinfo.info_all.trajensemble method)": [[14, "encodermap.trajinfo.info_all.TrajEnsemble.subsample"], [27, "encodermap.trajinfo.info_all.TrajEnsemble.subsample"]], "superpose() (encodermap.trajinfo.info_single.singletraj method)": [[14, "encodermap.trajinfo.info_single.SingleTraj.superpose"], [27, "encodermap.trajinfo.info_single.SingleTraj.superpose"]], "top (encodermap.trajinfo.info_all.trajensemble attribute)": [[14, "encodermap.trajinfo.info_all.TrajEnsemble.top"], [27, "encodermap.trajinfo.info_all.TrajEnsemble.top"]], "top (encodermap.trajinfo.info_all.trajensemble property)": [[14, "id8"], [27, "id13"]], "top (encodermap.trajinfo.info_single.singletraj property)": [[14, "encodermap.trajinfo.info_single.SingleTraj.top"], [27, "encodermap.trajinfo.info_single.SingleTraj.top"]], "top_file (encodermap.trajinfo.info_single.singletraj attribute)": [[14, "encodermap.trajinfo.info_single.SingleTraj.top_file"], [27, "encodermap.trajinfo.info_single.SingleTraj.top_file"]], "top_file (encodermap.trajinfo.info_single.singletraj property)": [[14, "id11"], [27, "id0"]], "top_files (encodermap.trajinfo.info_all.trajensemble property)": [[14, "encodermap.trajinfo.info_all.TrajEnsemble.top_files"], [27, "encodermap.trajinfo.info_all.TrajEnsemble.top_files"]], "traj (encodermap.trajinfo.info_single.singletraj property)": [[14, "encodermap.trajinfo.info_single.SingleTraj.traj"], [27, "encodermap.trajinfo.info_single.SingleTraj.traj"]], "traj_file (encodermap.trajinfo.info_single.singletraj attribute)": [[14, "encodermap.trajinfo.info_single.SingleTraj.traj_file"], [27, "encodermap.trajinfo.info_single.SingleTraj.traj_file"]], "traj_file (encodermap.trajinfo.info_single.singletraj property)": [[14, "id12"], [27, "id4"]], "traj_files (encodermap.trajinfo.info_all.trajensemble property)": [[14, "encodermap.trajinfo.info_all.TrajEnsemble.traj_files"], [27, "encodermap.trajinfo.info_all.TrajEnsemble.traj_files"]], "traj_joined (encodermap.trajinfo.info_all.trajensemble property)": [[14, "encodermap.trajinfo.info_all.TrajEnsemble.traj_joined"], [27, "encodermap.trajinfo.info_all.TrajEnsemble.traj_joined"]], "traj_num (encodermap.trajinfo.info_single.singletraj attribute)": [[14, "encodermap.trajinfo.info_single.SingleTraj.traj_num"], [27, "encodermap.trajinfo.info_single.SingleTraj.traj_num"]], "traj_nums (encodermap.trajinfo.info_all.trajensemble property)": [[14, "encodermap.trajinfo.info_all.TrajEnsemble.traj_nums"], [27, "encodermap.trajinfo.info_all.TrajEnsemble.traj_nums"]], "unload() (encodermap.trajinfo.info_all.trajensemble method)": [[14, "encodermap.trajinfo.info_all.TrajEnsemble.unload"], [27, "encodermap.trajinfo.info_all.TrajEnsemble.unload"]], "unload() (encodermap.trajinfo.info_single.singletraj method)": [[14, "encodermap.trajinfo.info_single.SingleTraj.unload"], [27, "encodermap.trajinfo.info_single.SingleTraj.unload"]], "url (encodermap.trajinfo.repository.repository attribute)": [[14, "encodermap.trajinfo.repository.Repository.url"]], "xyz (encodermap.trajinfo.info_all.trajensemble property)": [[14, "encodermap.trajinfo.info_all.TrajEnsemble.xyz"], [27, "encodermap.trajinfo.info_all.TrajEnsemble.xyz"]], "add_kac_backbone_bonds() (in module encodermap.loading.features)": [[21, "encodermap.loading.features.add_KAC_backbone_bonds"]], "add_kac_sidechain_bonds() (in module encodermap.loading.features)": [[21, "encodermap.loading.features.add_KAC_sidechain_bonds"]], "describe_last_feats() (in module encodermap.loading.features)": [[21, "encodermap.loading.features.describe_last_feats"]], "pairwisedistances (class in encodermap.models.layers)": [[23, "encodermap.models.layers.PairwiseDistances"]], "sparsereshape (class in encodermap.models.layers)": [[23, "encodermap.models.layers.SparseReshape"]], "__init__() (encodermap.models.layers.pairwisedistances method)": [[23, "encodermap.models.layers.PairwiseDistances.__init__"]], "call() (encodermap.models.layers.pairwisedistances method)": [[23, "encodermap.models.layers.PairwiseDistances.call"]], "call() (encodermap.models.layers.sparsereshape method)": [[23, "encodermap.models.layers.SparseReshape.call"]], "basic_loss_combinator() (in module encodermap.loss_functions.loss_functions)": [[24, "encodermap.loss_functions.loss_functions.basic_loss_combinator"]], "old_distance_loss() (in module encodermap.loss_functions.loss_functions)": [[24, "encodermap.loss_functions.loss_functions.old_distance_loss"]], "side_dihedral_loss() (in module encodermap.loss_functions.loss_functions)": [[24, "encodermap.loss_functions.loss_functions.side_dihedral_loss"]], "sigmoid_loss() (in module encodermap.loss_functions.loss_functions)": [[24, "encodermap.loss_functions.loss_functions.sigmoid_loss"]], "adcsequentialmodel (class in encodermap.models.models)": [[25, "encodermap.models.models.ADCSequentialModel"]], "functionalmodel (class in encodermap.models.models)": [[25, "encodermap.models.models.FunctionalModel"]], "sequentialmodel (class in encodermap.models.models)": [[25, "encodermap.models.models.SequentialModel"]], "sparse (class in encodermap.models.models)": [[25, "encodermap.models.models.Sparse"]], "sparsefunctionalmodel (class in encodermap.models.models)": [[25, "encodermap.models.models.SparseFunctionalModel"]], "sparsemodel (class in encodermap.models.models)": [[25, "encodermap.models.models.SparseModel"]], "build() (encodermap.models.models.sequentialmodel method)": [[25, "encodermap.models.models.SequentialModel.build"]], "call() (encodermap.models.models.adcsequentialmodel method)": [[25, "encodermap.models.models.ADCSequentialModel.call"]], "call() (encodermap.models.models.sequentialmodel method)": [[25, "encodermap.models.models.SequentialModel.call"]], "call() (encodermap.models.models.sparse method)": [[25, "encodermap.models.models.Sparse.call"]], "call() (encodermap.models.models.sparsemodel method)": [[25, "encodermap.models.models.SparseModel.call"]], "call_and_map_back() (encodermap.models.models.adcsequentialmodel method)": [[25, "encodermap.models.models.ADCSequentialModel.call_and_map_back"]], "compile() (encodermap.models.models.functionalmodel method)": [[25, "encodermap.models.models.FunctionalModel.compile"]], "compile() (encodermap.models.models.sequentialmodel method)": [[25, "encodermap.models.models.SequentialModel.compile"]], "decoder() (encodermap.models.models.functionalmodel method)": [[25, "encodermap.models.models.FunctionalModel.decoder"]], "decoder() (encodermap.models.models.sequentialmodel method)": [[25, "encodermap.models.models.SequentialModel.decoder"]], "encoder() (encodermap.models.models.functionalmodel method)": [[25, "encodermap.models.models.FunctionalModel.encoder"]], "encoder() (encodermap.models.models.sequentialmodel method)": [[25, "encodermap.models.models.SequentialModel.encoder"]], "get_loss() (encodermap.models.models.functionalmodel method)": [[25, "encodermap.models.models.FunctionalModel.get_loss"]], "get_loss() (encodermap.models.models.sparsefunctionalmodel method)": [[25, "encodermap.models.models.SparseFunctionalModel.get_loss"]], "train_step() (encodermap.models.models.adcsequentialmodel method)": [[25, "encodermap.models.models.ADCSequentialModel.train_step"]], "train_step() (encodermap.models.models.functionalmodel method)": [[25, "encodermap.models.models.FunctionalModel.train_step"]], "train_step() (encodermap.models.models.sequentialmodel method)": [[25, "encodermap.models.models.SequentialModel.train_step"]]}})